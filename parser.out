Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    BOOLEAN
    BREAK
    CASE
    COMILLA
    COMMENT_BLOQUE_DER
    COMMENT_BLOQUE_IZQ
    COMMENT_LINEA
    CONST
    CONTINUE
    DEFAULT
    DEFER
    DOBLE_COMILLA
    DOS_PUNTOS
    ELSE
    ESPACIADO
    FALLTHROUGH
    FMT
    FUNC
    GO
    IGUAL
    IMPORT
    INTERFACE
    LEN
    MAP
    PIPE
    PRINT
    Package
    RANGE
    RETURN
    SELECT
    STRUCT
    SWITCH
    TYPE
    VACIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> expression
Rule 2     programa -> impresion
Rule 3     programa -> sentencia
Rule 4     programa -> asignacion
Rule 5     programa -> longcadena
Rule 6     programa -> boolcadena
Rule 7     programa -> companum
Rule 8     programa -> compaid
Rule 9     programa -> sentenciafor
Rule 10    programa -> arreglo
Rule 11    programa -> slice
Rule 12    programa -> capslice
Rule 13    impresion -> PARENT_IZQ expression PARENT_DER
Rule 14    impresion -> PARENT_IZQ empty PARENT_DER
Rule 15    longcadena -> ID PARENT_IZQ CADENA PARENT_DER
Rule 16    boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER
Rule 17    companum -> NUMERO comparacion NUMERO
Rule 18    compaid -> ID comparacion ID
Rule 19    asignacion -> ID ASIGNACION factor
Rule 20    asignacion -> VAR ID ID ASIGNACION factor
Rule 21    asignacion -> VAR ID COMA ID ID ASIGNACION factor COMA factor
Rule 22    sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
Rule 23    incremento -> ID INCREMENTO
Rule 24    incremento -> ID ASIGNACION ID
Rule 25    incremento -> ID DECREMENTO
Rule 26    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
Rule 27    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
Rule 28    cantidad -> NUMERO
Rule 29    cantidad -> ARRPUNTOS
Rule 30    valores -> factor
Rule 31    valores -> factor COMA valores
Rule 32    slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
Rule 33    slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
Rule 34    capslice -> ID PARENT_IZQ ID PARENT_DER
Rule 35    expression -> expression MAS term
Rule 36    expression -> expression MENOS term
Rule 37    expression -> term
Rule 38    term -> term MULTIPLICADOR factor
Rule 39    term -> term DIVISOR factor
Rule 40    term -> term MOD_DIVISION factor
Rule 41    term -> factor
Rule 42    sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
Rule 43    comparacion -> IGUALDAD
Rule 44    comparacion -> MAYOR
Rule 45    comparacion -> MENOR
Rule 46    comparacion -> MAYOR_IGU
Rule 47    comparacion -> MENOR_IGU
Rule 48    comparacion -> DESIGUALDAD
Rule 49    factor -> NUMERO
Rule 50    factor -> ID
Rule 51    factor -> CADENA
Rule 52    factor -> PARENT_IZQ expression PARENT_DER
Rule 53    empty -> <empty>

Terminals, with rules where they appear

AMPERSAND            : 
ARRPUNTOS            : 29
ASIGNACION           : 19 20 21 22 24 26 27 32 33
BOOLEAN              : 
BREAK                : 
CADENA               : 15 51
CASE                 : 
COMA                 : 21 21 31 32 33 33
COMILLA              : 
COMMENT_BLOQUE_DER   : 
COMMENT_BLOQUE_IZQ   : 
COMMENT_LINEA        : 
CONST                : 
CONTINUE             : 
CORCHETE_DER         : 26 27 32 33
CORCHETE_IZQ         : 26 27 32 33
DECREMENTO           : 25
DEFAULT              : 
DEFER                : 
DESIGUALDAD          : 48
DIVISOR              : 39
DOBLE_COMILLA        : 
DOS_PUNTOS           : 
ELSE                 : 
ESPACIADO            : 
FALLTHROUGH          : 
FIN_SENTENCIA        : 22 22
FMT                  : 
FOR                  : 22
FUNC                 : 
GO                   : 
ID                   : 15 16 16 18 18 19 20 20 21 21 21 22 22 23 24 24 25 26 26 27 27 32 32 32 33 33 33 34 34 50
IF                   : 42
IGUAL                : 
IGUALDAD             : 43
IMPORT               : 
INCREMENTO           : 23
INTERFACE            : 
LEN                  : 
LLAVE_DER            : 22 27 42
LLAVE_IZQ            : 22 27 42
MAP                  : 
MAS                  : 35
MAYOR                : 44
MAYOR_IGU            : 46
MENOR                : 45
MENOR_IGU            : 47
MENOS                : 36
MOD_DIVISION         : 40
MULTIPLICADOR        : 38
NUMERO               : 17 17 28 32 33 33 49
PARENT_DER           : 13 14 15 16 32 33 34 52
PARENT_IZQ           : 13 14 15 16 32 33 34 52
PIPE                 : 
PRINT                : 
PUNTO                : 16
Package              : 
RANGE                : 
RETURN               : 
SELECT               : 
STRUCT               : 
SWITCH               : 
TYPE                 : 
VACIO                : 
VAR                  : 20 21
error                : 

Nonterminals, with rules where they appear

arreglo              : 10
asignacion           : 4
boolcadena           : 6
cantidad             : 26 27
capslice             : 12
compaid              : 8
companum             : 7
comparacion          : 17 18 22 42
empty                : 14
expression           : 1 13 35 36 52
factor               : 16 19 20 21 21 22 22 30 31 38 39 40 41 42 42
impresion            : 2
incremento           : 22
longcadena           : 5
programa             : 22 42 0
sentencia            : 3
sentenciafor         : 9
slice                : 11
term                 : 35 36 37 38 39 40
valores              : 27 31

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longcadena
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (35) expression -> . expression MAS term
    (36) expression -> . expression MENOS term
    (37) expression -> . term
    (13) impresion -> . PARENT_IZQ expression PARENT_DER
    (14) impresion -> . PARENT_IZQ empty PARENT_DER
    (42) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (19) asignacion -> . ID ASIGNACION factor
    (20) asignacion -> . VAR ID ID ASIGNACION factor
    (21) asignacion -> . VAR ID COMA ID ID ASIGNACION factor COMA factor
    (15) longcadena -> . ID PARENT_IZQ CADENA PARENT_DER
    (16) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (17) companum -> . NUMERO comparacion NUMERO
    (18) compaid -> . ID comparacion ID
    (22) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (26) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (27) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (32) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (33) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (34) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (38) term -> . term MULTIPLICADOR factor
    (39) term -> . term DIVISOR factor
    (40) term -> . term MOD_DIVISION factor
    (41) term -> . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_IZQ      shift and go to state 15
    IF              shift and go to state 16
    ID              shift and go to state 18
    VAR             shift and go to state 19
    NUMERO          shift and go to state 21
    FOR             shift and go to state 22
    CADENA          shift and go to state 20

    programa                       shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longcadena                     shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    term                           shift and go to state 14
    factor                         shift and go to state 17

state 1

    (0) S' -> programa .



state 2

    (1) programa -> expression .
    (35) expression -> expression . MAS term
    (36) expression -> expression . MENOS term

    $end            reduce using rule 1 (programa -> expression .)
    LLAVE_DER       reduce using rule 1 (programa -> expression .)
    MAS             shift and go to state 23
    MENOS           shift and go to state 24


state 3

    (2) programa -> impresion .

    $end            reduce using rule 2 (programa -> impresion .)
    LLAVE_DER       reduce using rule 2 (programa -> impresion .)


state 4

    (3) programa -> sentencia .

    $end            reduce using rule 3 (programa -> sentencia .)
    LLAVE_DER       reduce using rule 3 (programa -> sentencia .)


state 5

    (4) programa -> asignacion .

    $end            reduce using rule 4 (programa -> asignacion .)
    LLAVE_DER       reduce using rule 4 (programa -> asignacion .)


state 6

    (5) programa -> longcadena .

    $end            reduce using rule 5 (programa -> longcadena .)
    LLAVE_DER       reduce using rule 5 (programa -> longcadena .)


state 7

    (6) programa -> boolcadena .

    $end            reduce using rule 6 (programa -> boolcadena .)
    LLAVE_DER       reduce using rule 6 (programa -> boolcadena .)


state 8

    (7) programa -> companum .

    $end            reduce using rule 7 (programa -> companum .)
    LLAVE_DER       reduce using rule 7 (programa -> companum .)


state 9

    (8) programa -> compaid .

    $end            reduce using rule 8 (programa -> compaid .)
    LLAVE_DER       reduce using rule 8 (programa -> compaid .)


state 10

    (9) programa -> sentenciafor .

    $end            reduce using rule 9 (programa -> sentenciafor .)
    LLAVE_DER       reduce using rule 9 (programa -> sentenciafor .)


state 11

    (10) programa -> arreglo .

    $end            reduce using rule 10 (programa -> arreglo .)
    LLAVE_DER       reduce using rule 10 (programa -> arreglo .)


state 12

    (11) programa -> slice .

    $end            reduce using rule 11 (programa -> slice .)
    LLAVE_DER       reduce using rule 11 (programa -> slice .)


state 13

    (12) programa -> capslice .

    $end            reduce using rule 12 (programa -> capslice .)
    LLAVE_DER       reduce using rule 12 (programa -> capslice .)


state 14

    (37) expression -> term .
    (38) term -> term . MULTIPLICADOR factor
    (39) term -> term . DIVISOR factor
    (40) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 37 (expression -> term .)
    MENOS           reduce using rule 37 (expression -> term .)
    $end            reduce using rule 37 (expression -> term .)
    PARENT_DER      reduce using rule 37 (expression -> term .)
    LLAVE_DER       reduce using rule 37 (expression -> term .)
    MULTIPLICADOR   shift and go to state 25
    DIVISOR         shift and go to state 26
    MOD_DIVISION    shift and go to state 27


state 15

    (13) impresion -> PARENT_IZQ . expression PARENT_DER
    (14) impresion -> PARENT_IZQ . empty PARENT_DER
    (52) factor -> PARENT_IZQ . expression PARENT_DER
    (35) expression -> . expression MAS term
    (36) expression -> . expression MENOS term
    (37) expression -> . term
    (53) empty -> .
    (38) term -> . term MULTIPLICADOR factor
    (39) term -> . term DIVISOR factor
    (40) term -> . term MOD_DIVISION factor
    (41) term -> . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_DER      reduce using rule 53 (empty -> .)
    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    expression                     shift and go to state 29
    empty                          shift and go to state 30
    term                           shift and go to state 14
    factor                         shift and go to state 17

state 16

    (42) sentencia -> IF . factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 33

state 17

    (41) term -> factor .

    MULTIPLICADOR   reduce using rule 41 (term -> factor .)
    DIVISOR         reduce using rule 41 (term -> factor .)
    MOD_DIVISION    reduce using rule 41 (term -> factor .)
    MAS             reduce using rule 41 (term -> factor .)
    MENOS           reduce using rule 41 (term -> factor .)
    $end            reduce using rule 41 (term -> factor .)
    PARENT_DER      reduce using rule 41 (term -> factor .)
    LLAVE_DER       reduce using rule 41 (term -> factor .)


state 18

    (19) asignacion -> ID . ASIGNACION factor
    (15) longcadena -> ID . PARENT_IZQ CADENA PARENT_DER
    (16) boolcadena -> ID . PUNTO ID PARENT_IZQ factor PARENT_DER
    (18) compaid -> ID . comparacion ID
    (26) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (27) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (32) slice -> ID . ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (33) slice -> ID . ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (34) capslice -> ID . PARENT_IZQ ID PARENT_DER
    (50) factor -> ID .
    (43) comparacion -> . IGUALDAD
    (44) comparacion -> . MAYOR
    (45) comparacion -> . MENOR
    (46) comparacion -> . MAYOR_IGU
    (47) comparacion -> . MENOR_IGU
    (48) comparacion -> . DESIGUALDAD

    ASIGNACION      shift and go to state 34
    PARENT_IZQ      shift and go to state 35
    PUNTO           shift and go to state 36
    MULTIPLICADOR   reduce using rule 50 (factor -> ID .)
    DIVISOR         reduce using rule 50 (factor -> ID .)
    MOD_DIVISION    reduce using rule 50 (factor -> ID .)
    MAS             reduce using rule 50 (factor -> ID .)
    MENOS           reduce using rule 50 (factor -> ID .)
    $end            reduce using rule 50 (factor -> ID .)
    LLAVE_DER       reduce using rule 50 (factor -> ID .)
    IGUALDAD        shift and go to state 38
    MAYOR           shift and go to state 39
    MENOR           shift and go to state 40
    MAYOR_IGU       shift and go to state 41
    MENOR_IGU       shift and go to state 42
    DESIGUALDAD     shift and go to state 43

    comparacion                    shift and go to state 37

state 19

    (20) asignacion -> VAR . ID ID ASIGNACION factor
    (21) asignacion -> VAR . ID COMA ID ID ASIGNACION factor COMA factor

    ID              shift and go to state 44


state 20

    (51) factor -> CADENA .

    MULTIPLICADOR   reduce using rule 51 (factor -> CADENA .)
    DIVISOR         reduce using rule 51 (factor -> CADENA .)
    MOD_DIVISION    reduce using rule 51 (factor -> CADENA .)
    MAS             reduce using rule 51 (factor -> CADENA .)
    MENOS           reduce using rule 51 (factor -> CADENA .)
    $end            reduce using rule 51 (factor -> CADENA .)
    PARENT_DER      reduce using rule 51 (factor -> CADENA .)
    IGUALDAD        reduce using rule 51 (factor -> CADENA .)
    MAYOR           reduce using rule 51 (factor -> CADENA .)
    MENOR           reduce using rule 51 (factor -> CADENA .)
    MAYOR_IGU       reduce using rule 51 (factor -> CADENA .)
    MENOR_IGU       reduce using rule 51 (factor -> CADENA .)
    DESIGUALDAD     reduce using rule 51 (factor -> CADENA .)
    LLAVE_DER       reduce using rule 51 (factor -> CADENA .)
    LLAVE_IZQ       reduce using rule 51 (factor -> CADENA .)
    FIN_SENTENCIA   reduce using rule 51 (factor -> CADENA .)
    COMA            reduce using rule 51 (factor -> CADENA .)


state 21

    (17) companum -> NUMERO . comparacion NUMERO
    (49) factor -> NUMERO .
    (43) comparacion -> . IGUALDAD
    (44) comparacion -> . MAYOR
    (45) comparacion -> . MENOR
    (46) comparacion -> . MAYOR_IGU
    (47) comparacion -> . MENOR_IGU
    (48) comparacion -> . DESIGUALDAD

    MULTIPLICADOR   reduce using rule 49 (factor -> NUMERO .)
    DIVISOR         reduce using rule 49 (factor -> NUMERO .)
    MOD_DIVISION    reduce using rule 49 (factor -> NUMERO .)
    MAS             reduce using rule 49 (factor -> NUMERO .)
    MENOS           reduce using rule 49 (factor -> NUMERO .)
    $end            reduce using rule 49 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 49 (factor -> NUMERO .)
    IGUALDAD        shift and go to state 38
    MAYOR           shift and go to state 39
    MENOR           shift and go to state 40
    MAYOR_IGU       shift and go to state 41
    MENOR_IGU       shift and go to state 42
    DESIGUALDAD     shift and go to state 43

    comparacion                    shift and go to state 45

state 22

    (22) sentenciafor -> FOR . ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ID              shift and go to state 46


state 23

    (35) expression -> expression MAS . term
    (38) term -> . term MULTIPLICADOR factor
    (39) term -> . term DIVISOR factor
    (40) term -> . term MOD_DIVISION factor
    (41) term -> . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    term                           shift and go to state 47
    factor                         shift and go to state 17

state 24

    (36) expression -> expression MENOS . term
    (38) term -> . term MULTIPLICADOR factor
    (39) term -> . term DIVISOR factor
    (40) term -> . term MOD_DIVISION factor
    (41) term -> . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    term                           shift and go to state 48
    factor                         shift and go to state 17

state 25

    (38) term -> term MULTIPLICADOR . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 49

state 26

    (39) term -> term DIVISOR . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 50

state 27

    (40) term -> term MOD_DIVISION . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 51

state 28

    (52) factor -> PARENT_IZQ . expression PARENT_DER
    (35) expression -> . expression MAS term
    (36) expression -> . expression MENOS term
    (37) expression -> . term
    (38) term -> . term MULTIPLICADOR factor
    (39) term -> . term DIVISOR factor
    (40) term -> . term MOD_DIVISION factor
    (41) term -> . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    expression                     shift and go to state 52
    term                           shift and go to state 14
    factor                         shift and go to state 17

state 29

    (13) impresion -> PARENT_IZQ expression . PARENT_DER
    (52) factor -> PARENT_IZQ expression . PARENT_DER
    (35) expression -> expression . MAS term
    (36) expression -> expression . MENOS term

    PARENT_DER      shift and go to state 53
    MAS             shift and go to state 23
    MENOS           shift and go to state 24


state 30

    (14) impresion -> PARENT_IZQ empty . PARENT_DER

    PARENT_DER      shift and go to state 54


state 31

    (49) factor -> NUMERO .

    MULTIPLICADOR   reduce using rule 49 (factor -> NUMERO .)
    DIVISOR         reduce using rule 49 (factor -> NUMERO .)
    MOD_DIVISION    reduce using rule 49 (factor -> NUMERO .)
    PARENT_DER      reduce using rule 49 (factor -> NUMERO .)
    MAS             reduce using rule 49 (factor -> NUMERO .)
    MENOS           reduce using rule 49 (factor -> NUMERO .)
    IGUALDAD        reduce using rule 49 (factor -> NUMERO .)
    MAYOR           reduce using rule 49 (factor -> NUMERO .)
    MENOR           reduce using rule 49 (factor -> NUMERO .)
    MAYOR_IGU       reduce using rule 49 (factor -> NUMERO .)
    MENOR_IGU       reduce using rule 49 (factor -> NUMERO .)
    DESIGUALDAD     reduce using rule 49 (factor -> NUMERO .)
    $end            reduce using rule 49 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 49 (factor -> NUMERO .)
    LLAVE_IZQ       reduce using rule 49 (factor -> NUMERO .)
    FIN_SENTENCIA   reduce using rule 49 (factor -> NUMERO .)
    COMA            reduce using rule 49 (factor -> NUMERO .)


state 32

    (50) factor -> ID .

    MULTIPLICADOR   reduce using rule 50 (factor -> ID .)
    DIVISOR         reduce using rule 50 (factor -> ID .)
    MOD_DIVISION    reduce using rule 50 (factor -> ID .)
    PARENT_DER      reduce using rule 50 (factor -> ID .)
    MAS             reduce using rule 50 (factor -> ID .)
    MENOS           reduce using rule 50 (factor -> ID .)
    IGUALDAD        reduce using rule 50 (factor -> ID .)
    MAYOR           reduce using rule 50 (factor -> ID .)
    MENOR           reduce using rule 50 (factor -> ID .)
    MAYOR_IGU       reduce using rule 50 (factor -> ID .)
    MENOR_IGU       reduce using rule 50 (factor -> ID .)
    DESIGUALDAD     reduce using rule 50 (factor -> ID .)
    $end            reduce using rule 50 (factor -> ID .)
    LLAVE_DER       reduce using rule 50 (factor -> ID .)
    LLAVE_IZQ       reduce using rule 50 (factor -> ID .)
    FIN_SENTENCIA   reduce using rule 50 (factor -> ID .)
    COMA            reduce using rule 50 (factor -> ID .)


state 33

    (42) sentencia -> IF factor . comparacion factor LLAVE_IZQ programa LLAVE_DER
    (43) comparacion -> . IGUALDAD
    (44) comparacion -> . MAYOR
    (45) comparacion -> . MENOR
    (46) comparacion -> . MAYOR_IGU
    (47) comparacion -> . MENOR_IGU
    (48) comparacion -> . DESIGUALDAD

    IGUALDAD        shift and go to state 38
    MAYOR           shift and go to state 39
    MENOR           shift and go to state 40
    MAYOR_IGU       shift and go to state 41
    MENOR_IGU       shift and go to state 42
    DESIGUALDAD     shift and go to state 43

    comparacion                    shift and go to state 55

state 34

    (19) asignacion -> ID ASIGNACION . factor
    (26) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER ID
    (27) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (32) slice -> ID ASIGNACION . ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (33) slice -> ID ASIGNACION . ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    CORCHETE_IZQ    shift and go to state 58
    ID              shift and go to state 56
    NUMERO          shift and go to state 31
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 57

state 35

    (15) longcadena -> ID PARENT_IZQ . CADENA PARENT_DER
    (34) capslice -> ID PARENT_IZQ . ID PARENT_DER

    CADENA          shift and go to state 60
    ID              shift and go to state 59


state 36

    (16) boolcadena -> ID PUNTO . ID PARENT_IZQ factor PARENT_DER

    ID              shift and go to state 61


state 37

    (18) compaid -> ID comparacion . ID

    ID              shift and go to state 62


state 38

    (43) comparacion -> IGUALDAD .

    ID              reduce using rule 43 (comparacion -> IGUALDAD .)
    NUMERO          reduce using rule 43 (comparacion -> IGUALDAD .)
    CADENA          reduce using rule 43 (comparacion -> IGUALDAD .)
    PARENT_IZQ      reduce using rule 43 (comparacion -> IGUALDAD .)


state 39

    (44) comparacion -> MAYOR .

    ID              reduce using rule 44 (comparacion -> MAYOR .)
    NUMERO          reduce using rule 44 (comparacion -> MAYOR .)
    CADENA          reduce using rule 44 (comparacion -> MAYOR .)
    PARENT_IZQ      reduce using rule 44 (comparacion -> MAYOR .)


state 40

    (45) comparacion -> MENOR .

    ID              reduce using rule 45 (comparacion -> MENOR .)
    NUMERO          reduce using rule 45 (comparacion -> MENOR .)
    CADENA          reduce using rule 45 (comparacion -> MENOR .)
    PARENT_IZQ      reduce using rule 45 (comparacion -> MENOR .)


state 41

    (46) comparacion -> MAYOR_IGU .

    ID              reduce using rule 46 (comparacion -> MAYOR_IGU .)
    NUMERO          reduce using rule 46 (comparacion -> MAYOR_IGU .)
    CADENA          reduce using rule 46 (comparacion -> MAYOR_IGU .)
    PARENT_IZQ      reduce using rule 46 (comparacion -> MAYOR_IGU .)


state 42

    (47) comparacion -> MENOR_IGU .

    ID              reduce using rule 47 (comparacion -> MENOR_IGU .)
    NUMERO          reduce using rule 47 (comparacion -> MENOR_IGU .)
    CADENA          reduce using rule 47 (comparacion -> MENOR_IGU .)
    PARENT_IZQ      reduce using rule 47 (comparacion -> MENOR_IGU .)


state 43

    (48) comparacion -> DESIGUALDAD .

    ID              reduce using rule 48 (comparacion -> DESIGUALDAD .)
    NUMERO          reduce using rule 48 (comparacion -> DESIGUALDAD .)
    CADENA          reduce using rule 48 (comparacion -> DESIGUALDAD .)
    PARENT_IZQ      reduce using rule 48 (comparacion -> DESIGUALDAD .)


state 44

    (20) asignacion -> VAR ID . ID ASIGNACION factor
    (21) asignacion -> VAR ID . COMA ID ID ASIGNACION factor COMA factor

    ID              shift and go to state 63
    COMA            shift and go to state 64


state 45

    (17) companum -> NUMERO comparacion . NUMERO

    NUMERO          shift and go to state 65


state 46

    (22) sentenciafor -> FOR ID . ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ASIGNACION      shift and go to state 66


state 47

    (35) expression -> expression MAS term .
    (38) term -> term . MULTIPLICADOR factor
    (39) term -> term . DIVISOR factor
    (40) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 35 (expression -> expression MAS term .)
    MENOS           reduce using rule 35 (expression -> expression MAS term .)
    $end            reduce using rule 35 (expression -> expression MAS term .)
    PARENT_DER      reduce using rule 35 (expression -> expression MAS term .)
    LLAVE_DER       reduce using rule 35 (expression -> expression MAS term .)
    MULTIPLICADOR   shift and go to state 25
    DIVISOR         shift and go to state 26
    MOD_DIVISION    shift and go to state 27


state 48

    (36) expression -> expression MENOS term .
    (38) term -> term . MULTIPLICADOR factor
    (39) term -> term . DIVISOR factor
    (40) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 36 (expression -> expression MENOS term .)
    MENOS           reduce using rule 36 (expression -> expression MENOS term .)
    $end            reduce using rule 36 (expression -> expression MENOS term .)
    PARENT_DER      reduce using rule 36 (expression -> expression MENOS term .)
    LLAVE_DER       reduce using rule 36 (expression -> expression MENOS term .)
    MULTIPLICADOR   shift and go to state 25
    DIVISOR         shift and go to state 26
    MOD_DIVISION    shift and go to state 27


state 49

    (38) term -> term MULTIPLICADOR factor .

    MULTIPLICADOR   reduce using rule 38 (term -> term MULTIPLICADOR factor .)
    DIVISOR         reduce using rule 38 (term -> term MULTIPLICADOR factor .)
    MOD_DIVISION    reduce using rule 38 (term -> term MULTIPLICADOR factor .)
    MAS             reduce using rule 38 (term -> term MULTIPLICADOR factor .)
    MENOS           reduce using rule 38 (term -> term MULTIPLICADOR factor .)
    $end            reduce using rule 38 (term -> term MULTIPLICADOR factor .)
    PARENT_DER      reduce using rule 38 (term -> term MULTIPLICADOR factor .)
    LLAVE_DER       reduce using rule 38 (term -> term MULTIPLICADOR factor .)


state 50

    (39) term -> term DIVISOR factor .

    MULTIPLICADOR   reduce using rule 39 (term -> term DIVISOR factor .)
    DIVISOR         reduce using rule 39 (term -> term DIVISOR factor .)
    MOD_DIVISION    reduce using rule 39 (term -> term DIVISOR factor .)
    MAS             reduce using rule 39 (term -> term DIVISOR factor .)
    MENOS           reduce using rule 39 (term -> term DIVISOR factor .)
    $end            reduce using rule 39 (term -> term DIVISOR factor .)
    PARENT_DER      reduce using rule 39 (term -> term DIVISOR factor .)
    LLAVE_DER       reduce using rule 39 (term -> term DIVISOR factor .)


state 51

    (40) term -> term MOD_DIVISION factor .

    MULTIPLICADOR   reduce using rule 40 (term -> term MOD_DIVISION factor .)
    DIVISOR         reduce using rule 40 (term -> term MOD_DIVISION factor .)
    MOD_DIVISION    reduce using rule 40 (term -> term MOD_DIVISION factor .)
    MAS             reduce using rule 40 (term -> term MOD_DIVISION factor .)
    MENOS           reduce using rule 40 (term -> term MOD_DIVISION factor .)
    $end            reduce using rule 40 (term -> term MOD_DIVISION factor .)
    PARENT_DER      reduce using rule 40 (term -> term MOD_DIVISION factor .)
    LLAVE_DER       reduce using rule 40 (term -> term MOD_DIVISION factor .)


state 52

    (52) factor -> PARENT_IZQ expression . PARENT_DER
    (35) expression -> expression . MAS term
    (36) expression -> expression . MENOS term

    PARENT_DER      shift and go to state 67
    MAS             shift and go to state 23
    MENOS           shift and go to state 24


state 53

    (13) impresion -> PARENT_IZQ expression PARENT_DER .
    (52) factor -> PARENT_IZQ expression PARENT_DER .

  ! reduce/reduce conflict for $end resolved using rule 13 (impresion -> PARENT_IZQ expression PARENT_DER .)
  ! reduce/reduce conflict for LLAVE_DER resolved using rule 13 (impresion -> PARENT_IZQ expression PARENT_DER .)
    $end            reduce using rule 13 (impresion -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_DER       reduce using rule 13 (impresion -> PARENT_IZQ expression PARENT_DER .)
    MULTIPLICADOR   reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    DIVISOR         reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    MOD_DIVISION    reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAS             reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOS           reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)

  ! $end            [ reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .) ]
  ! LLAVE_DER       [ reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .) ]


state 54

    (14) impresion -> PARENT_IZQ empty PARENT_DER .

    $end            reduce using rule 14 (impresion -> PARENT_IZQ empty PARENT_DER .)
    LLAVE_DER       reduce using rule 14 (impresion -> PARENT_IZQ empty PARENT_DER .)


state 55

    (42) sentencia -> IF factor comparacion . factor LLAVE_IZQ programa LLAVE_DER
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 68

state 56

    (32) slice -> ID ASIGNACION ID . PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (33) slice -> ID ASIGNACION ID . PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (50) factor -> ID .

    PARENT_IZQ      shift and go to state 69
    $end            reduce using rule 50 (factor -> ID .)
    LLAVE_DER       reduce using rule 50 (factor -> ID .)


state 57

    (19) asignacion -> ID ASIGNACION factor .

    $end            reduce using rule 19 (asignacion -> ID ASIGNACION factor .)
    LLAVE_DER       reduce using rule 19 (asignacion -> ID ASIGNACION factor .)


state 58

    (26) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER ID
    (27) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (28) cantidad -> . NUMERO
    (29) cantidad -> . ARRPUNTOS

    NUMERO          shift and go to state 71
    ARRPUNTOS       shift and go to state 72

    cantidad                       shift and go to state 70

state 59

    (34) capslice -> ID PARENT_IZQ ID . PARENT_DER

    PARENT_DER      shift and go to state 73


state 60

    (15) longcadena -> ID PARENT_IZQ CADENA . PARENT_DER

    PARENT_DER      shift and go to state 74


state 61

    (16) boolcadena -> ID PUNTO ID . PARENT_IZQ factor PARENT_DER

    PARENT_IZQ      shift and go to state 75


state 62

    (18) compaid -> ID comparacion ID .

    $end            reduce using rule 18 (compaid -> ID comparacion ID .)
    LLAVE_DER       reduce using rule 18 (compaid -> ID comparacion ID .)


state 63

    (20) asignacion -> VAR ID ID . ASIGNACION factor

    ASIGNACION      shift and go to state 76


state 64

    (21) asignacion -> VAR ID COMA . ID ID ASIGNACION factor COMA factor

    ID              shift and go to state 77


state 65

    (17) companum -> NUMERO comparacion NUMERO .

    $end            reduce using rule 17 (companum -> NUMERO comparacion NUMERO .)
    LLAVE_DER       reduce using rule 17 (companum -> NUMERO comparacion NUMERO .)


state 66

    (22) sentenciafor -> FOR ID ASIGNACION . factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 78

state 67

    (52) factor -> PARENT_IZQ expression PARENT_DER .

    MULTIPLICADOR   reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    DIVISOR         reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    MOD_DIVISION    reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    PARENT_DER      reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAS             reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOS           reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    IGUALDAD        reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAYOR           reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOR           reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAYOR_IGU       reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOR_IGU       reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    DESIGUALDAD     reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    $end            reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_DER       reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_IZQ       reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    FIN_SENTENCIA   reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)
    COMA            reduce using rule 52 (factor -> PARENT_IZQ expression PARENT_DER .)


state 68

    (42) sentencia -> IF factor comparacion factor . LLAVE_IZQ programa LLAVE_DER

    LLAVE_IZQ       shift and go to state 79


state 69

    (32) slice -> ID ASIGNACION ID PARENT_IZQ . CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (33) slice -> ID ASIGNACION ID PARENT_IZQ . CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER

    CORCHETE_IZQ    shift and go to state 80


state 70

    (26) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER ID
    (27) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 81


state 71

    (28) cantidad -> NUMERO .

    CORCHETE_DER    reduce using rule 28 (cantidad -> NUMERO .)


state 72

    (29) cantidad -> ARRPUNTOS .

    CORCHETE_DER    reduce using rule 29 (cantidad -> ARRPUNTOS .)


state 73

    (34) capslice -> ID PARENT_IZQ ID PARENT_DER .

    $end            reduce using rule 34 (capslice -> ID PARENT_IZQ ID PARENT_DER .)
    LLAVE_DER       reduce using rule 34 (capslice -> ID PARENT_IZQ ID PARENT_DER .)


state 74

    (15) longcadena -> ID PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 15 (longcadena -> ID PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 15 (longcadena -> ID PARENT_IZQ CADENA PARENT_DER .)


state 75

    (16) boolcadena -> ID PUNTO ID PARENT_IZQ . factor PARENT_DER
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 82

state 76

    (20) asignacion -> VAR ID ID ASIGNACION . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 83

state 77

    (21) asignacion -> VAR ID COMA ID . ID ASIGNACION factor COMA factor

    ID              shift and go to state 84


state 78

    (22) sentenciafor -> FOR ID ASIGNACION factor . FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    FIN_SENTENCIA   shift and go to state 85


state 79

    (42) sentencia -> IF factor comparacion factor LLAVE_IZQ . programa LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longcadena
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (35) expression -> . expression MAS term
    (36) expression -> . expression MENOS term
    (37) expression -> . term
    (13) impresion -> . PARENT_IZQ expression PARENT_DER
    (14) impresion -> . PARENT_IZQ empty PARENT_DER
    (42) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (19) asignacion -> . ID ASIGNACION factor
    (20) asignacion -> . VAR ID ID ASIGNACION factor
    (21) asignacion -> . VAR ID COMA ID ID ASIGNACION factor COMA factor
    (15) longcadena -> . ID PARENT_IZQ CADENA PARENT_DER
    (16) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (17) companum -> . NUMERO comparacion NUMERO
    (18) compaid -> . ID comparacion ID
    (22) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (26) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (27) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (32) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (33) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (34) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (38) term -> . term MULTIPLICADOR factor
    (39) term -> . term DIVISOR factor
    (40) term -> . term MOD_DIVISION factor
    (41) term -> . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_IZQ      shift and go to state 15
    IF              shift and go to state 16
    ID              shift and go to state 18
    VAR             shift and go to state 19
    NUMERO          shift and go to state 21
    FOR             shift and go to state 22
    CADENA          shift and go to state 20

    factor                         shift and go to state 17
    programa                       shift and go to state 86
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longcadena                     shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    term                           shift and go to state 14

state 80

    (32) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ . CORCHETE_DER ID COMA NUMERO PARENT_DER
    (33) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ . CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER

    CORCHETE_DER    shift and go to state 87


state 81

    (26) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . ID
    (27) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . ID LLAVE_IZQ valores LLAVE_DER

    ID              shift and go to state 88


state 82

    (16) boolcadena -> ID PUNTO ID PARENT_IZQ factor . PARENT_DER

    PARENT_DER      shift and go to state 89


state 83

    (20) asignacion -> VAR ID ID ASIGNACION factor .

    $end            reduce using rule 20 (asignacion -> VAR ID ID ASIGNACION factor .)
    LLAVE_DER       reduce using rule 20 (asignacion -> VAR ID ID ASIGNACION factor .)


state 84

    (21) asignacion -> VAR ID COMA ID ID . ASIGNACION factor COMA factor

    ASIGNACION      shift and go to state 90


state 85

    (22) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA . ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ID              shift and go to state 91


state 86

    (42) sentencia -> IF factor comparacion factor LLAVE_IZQ programa . LLAVE_DER

    LLAVE_DER       shift and go to state 92


state 87

    (32) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER . ID COMA NUMERO PARENT_DER
    (33) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER . ID COMA NUMERO COMA NUMERO PARENT_DER

    ID              shift and go to state 93


state 88

    (26) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .
    (27) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID . LLAVE_IZQ valores LLAVE_DER

    $end            reduce using rule 26 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    LLAVE_DER       reduce using rule 26 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    LLAVE_IZQ       shift and go to state 94


state 89

    (16) boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .

    $end            reduce using rule 16 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)
    LLAVE_DER       reduce using rule 16 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)


state 90

    (21) asignacion -> VAR ID COMA ID ID ASIGNACION . factor COMA factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 95

state 91

    (22) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID . comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (43) comparacion -> . IGUALDAD
    (44) comparacion -> . MAYOR
    (45) comparacion -> . MENOR
    (46) comparacion -> . MAYOR_IGU
    (47) comparacion -> . MENOR_IGU
    (48) comparacion -> . DESIGUALDAD

    IGUALDAD        shift and go to state 38
    MAYOR           shift and go to state 39
    MENOR           shift and go to state 40
    MAYOR_IGU       shift and go to state 41
    MENOR_IGU       shift and go to state 42
    DESIGUALDAD     shift and go to state 43

    comparacion                    shift and go to state 96

state 92

    (42) sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 42 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 42 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)


state 93

    (32) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID . COMA NUMERO PARENT_DER
    (33) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID . COMA NUMERO COMA NUMERO PARENT_DER

    COMA            shift and go to state 97


state 94

    (27) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ . valores LLAVE_DER
    (30) valores -> . factor
    (31) valores -> . factor COMA valores
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    valores                        shift and go to state 98
    factor                         shift and go to state 99

state 95

    (21) asignacion -> VAR ID COMA ID ID ASIGNACION factor . COMA factor

    COMA            shift and go to state 100


state 96

    (22) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion . factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 101

state 97

    (32) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA . NUMERO PARENT_DER
    (33) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA . NUMERO COMA NUMERO PARENT_DER

    NUMERO          shift and go to state 102


state 98

    (27) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 103


state 99

    (30) valores -> factor .
    (31) valores -> factor . COMA valores

    LLAVE_DER       reduce using rule 30 (valores -> factor .)
    COMA            shift and go to state 104


state 100

    (21) asignacion -> VAR ID COMA ID ID ASIGNACION factor COMA . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 105

state 101

    (22) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor . FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    FIN_SENTENCIA   shift and go to state 106


state 102

    (32) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO . PARENT_DER
    (33) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO . COMA NUMERO PARENT_DER

    PARENT_DER      shift and go to state 108
    COMA            shift and go to state 107


state 103

    (27) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 27 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 27 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)


state 104

    (31) valores -> factor COMA . valores
    (30) valores -> . factor
    (31) valores -> . factor COMA valores
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 31
    ID              shift and go to state 32
    CADENA          shift and go to state 20
    PARENT_IZQ      shift and go to state 28

    factor                         shift and go to state 99
    valores                        shift and go to state 109

state 105

    (21) asignacion -> VAR ID COMA ID ID ASIGNACION factor COMA factor .

    $end            reduce using rule 21 (asignacion -> VAR ID COMA ID ID ASIGNACION factor COMA factor .)
    LLAVE_DER       reduce using rule 21 (asignacion -> VAR ID COMA ID ID ASIGNACION factor COMA factor .)


state 106

    (22) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA . incremento LLAVE_IZQ programa LLAVE_DER
    (23) incremento -> . ID INCREMENTO
    (24) incremento -> . ID ASIGNACION ID
    (25) incremento -> . ID DECREMENTO

    ID              shift and go to state 110

    incremento                     shift and go to state 111

state 107

    (33) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 112


state 108

    (32) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .

    $end            reduce using rule 32 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 32 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)


state 109

    (31) valores -> factor COMA valores .

    LLAVE_DER       reduce using rule 31 (valores -> factor COMA valores .)


state 110

    (23) incremento -> ID . INCREMENTO
    (24) incremento -> ID . ASIGNACION ID
    (25) incremento -> ID . DECREMENTO

    INCREMENTO      shift and go to state 113
    ASIGNACION      shift and go to state 114
    DECREMENTO      shift and go to state 115


state 111

    (22) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento . LLAVE_IZQ programa LLAVE_DER

    LLAVE_IZQ       shift and go to state 116


state 112

    (33) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 117


state 113

    (23) incremento -> ID INCREMENTO .

    LLAVE_IZQ       reduce using rule 23 (incremento -> ID INCREMENTO .)


state 114

    (24) incremento -> ID ASIGNACION . ID

    ID              shift and go to state 118


state 115

    (25) incremento -> ID DECREMENTO .

    LLAVE_IZQ       reduce using rule 25 (incremento -> ID DECREMENTO .)


state 116

    (22) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ . programa LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longcadena
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (35) expression -> . expression MAS term
    (36) expression -> . expression MENOS term
    (37) expression -> . term
    (13) impresion -> . PARENT_IZQ expression PARENT_DER
    (14) impresion -> . PARENT_IZQ empty PARENT_DER
    (42) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (19) asignacion -> . ID ASIGNACION factor
    (20) asignacion -> . VAR ID ID ASIGNACION factor
    (21) asignacion -> . VAR ID COMA ID ID ASIGNACION factor COMA factor
    (15) longcadena -> . ID PARENT_IZQ CADENA PARENT_DER
    (16) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (17) companum -> . NUMERO comparacion NUMERO
    (18) compaid -> . ID comparacion ID
    (22) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (26) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (27) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (32) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (33) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (34) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (38) term -> . term MULTIPLICADOR factor
    (39) term -> . term DIVISOR factor
    (40) term -> . term MOD_DIVISION factor
    (41) term -> . factor
    (49) factor -> . NUMERO
    (50) factor -> . ID
    (51) factor -> . CADENA
    (52) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_IZQ      shift and go to state 15
    IF              shift and go to state 16
    ID              shift and go to state 18
    VAR             shift and go to state 19
    NUMERO          shift and go to state 21
    FOR             shift and go to state 22
    CADENA          shift and go to state 20

    factor                         shift and go to state 17
    programa                       shift and go to state 119
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longcadena                     shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    term                           shift and go to state 14

state 117

    (33) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .

    $end            reduce using rule 33 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 33 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)


state 118

    (24) incremento -> ID ASIGNACION ID .

    LLAVE_IZQ       reduce using rule 24 (incremento -> ID ASIGNACION ID .)


state 119

    (22) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa . LLAVE_DER

    LLAVE_DER       shift and go to state 120


state 120

    (22) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 22 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 22 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 53 resolved using rule (impresion -> PARENT_IZQ expression PARENT_DER)
WARNING: rejected rule (factor -> PARENT_IZQ expression PARENT_DER) in state 53
