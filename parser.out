Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    BOOLEAN
    BREAK
    COMILLA
    COMMENT_BLOQUE_DER
    COMMENT_BLOQUE_IZQ
    COMMENT_LINEA
    CONST
    CONTINUE
    DEFER
    DOBLE_COMILLA
    ELSE
    ESPACIADO
    FALLTHROUGH
    FMT
    GO
    IGUAL
    IMPORT
    INTERFACE
    LEN
    PIPE
    PRINT
    Package
    RANGE
    SELECT
    STRUCT
    TYPE
    VACIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> expression
Rule 2     programa -> impresion
Rule 3     programa -> sentencia
Rule 4     programa -> asignacion
Rule 5     programa -> longvariable
Rule 6     programa -> boolcadena
Rule 7     programa -> companum
Rule 8     programa -> compaid
Rule 9     programa -> sentenciafor
Rule 10    programa -> arreglo
Rule 11    programa -> slice
Rule 12    programa -> capslice
Rule 13    programa -> switch
Rule 14    programa -> map
Rule 15    programa -> asignar_valor_map
Rule 16    programa -> eliminar_valor_map
Rule 17    programa -> obtener_valor_map
Rule 18    programa -> funcion
Rule 19    impresion -> PARENT_IZQ expression PARENT_DER
Rule 20    impresion -> PARENT_IZQ empty PARENT_DER
Rule 21    longvariable -> ID PARENT_IZQ CADENA PARENT_DER
Rule 22    longvariable -> ID PARENT_IZQ ID PARENT_DER
Rule 23    boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER
Rule 24    companum -> NUMERO comparacion NUMERO
Rule 25    compaid -> ID comparacion ID
Rule 26    asignacion -> ID ASIGNACION factor
Rule 27    asignacion -> VAR ID tipo_dato ASIGNACION factor
Rule 28    asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
Rule 29    sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
Rule 30    incremento -> ID INCREMENTO
Rule 31    incremento -> ID ASIGNACION ID
Rule 32    incremento -> ID DECREMENTO
Rule 33    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
Rule 34    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
Rule 35    cantidad -> NUMERO
Rule 36    cantidad -> ARRPUNTOS
Rule 37    valores -> factor
Rule 38    valores -> factor COMA valores
Rule 39    slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
Rule 40    slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
Rule 41    capslice -> ID PARENT_IZQ ID PARENT_DER
Rule 42    expression -> expression MAS term
Rule 43    expression -> expression MENOS term
Rule 44    expression -> term
Rule 45    term -> term MULTIPLICADOR factor
Rule 46    term -> term DIVISOR factor
Rule 47    term -> term MOD_DIVISION factor
Rule 48    term -> factor
Rule 49    sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
Rule 50    comparacion -> IGUALDAD
Rule 51    comparacion -> MAYOR
Rule 52    comparacion -> MENOR
Rule 53    comparacion -> MAYOR_IGU
Rule 54    comparacion -> MENOR_IGU
Rule 55    comparacion -> DESIGUALDAD
Rule 56    factor -> NUMERO
Rule 57    factor -> ID
Rule 58    factor -> CADENA
Rule 59    factor -> PARENT_IZQ expression PARENT_DER
Rule 60    switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER
Rule 61    cases -> case
Rule 62    cases -> case default
Rule 63    cases -> case cases
Rule 64    case -> CASE factor DOS_PUNTOS programa
Rule 65    default -> DEFAULT DOS_PUNTOS programa
Rule 66    map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
Rule 67    map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
Rule 68    map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
Rule 69    tipo_dato -> INT
Rule 70    tipo_dato -> STRING
Rule 71    tipo_dato -> INT64
Rule 72    tipo_dato -> FLOAT32
Rule 73    tipo_dato -> FLOAT64
Rule 74    tipo_dato -> INT32
Rule 75    valores -> clave_valor
Rule 76    valores -> clave_valor COMA valores
Rule 77    clave_valor -> valor DOS_PUNTOS valor
Rule 78    valor -> CADENA
Rule 79    valor -> NUMERO
Rule 80    asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
Rule 81    eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER
Rule 82    obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER
Rule 83    funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
Rule 84    funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
Rule 85    argumentos -> ID tipo_dato
Rule 86    argumentos -> ID tipo_dato COMA argumentos
Rule 87    empty -> <empty>

Terminals, with rules where they appear

AMPERSAND            : 
ARRPUNTOS            : 36
ASIGNACION           : 26 27 28 29 31 33 34 39 40 67 68 80
BOOLEAN              : 
BREAK                : 
CADENA               : 21 58 78
CASE                 : 64
COMA                 : 28 28 38 39 40 40 76 81 86
COMILLA              : 
COMMENT_BLOQUE_DER   : 
COMMENT_BLOQUE_IZQ   : 
COMMENT_LINEA        : 
CONST                : 
CONTINUE             : 
CORCHETE_DER         : 33 34 39 40 66 67 68 80 82
CORCHETE_IZQ         : 33 34 39 40 66 67 68 80 82
DECREMENTO           : 32
DEFAULT              : 65
DEFER                : 
DELETE               : 81
DESIGUALDAD          : 55
DIVISOR              : 46
DOBLE_COMILLA        : 
DOS_PUNTOS           : 64 65 77
ELSE                 : 
ESPACIADO            : 
FALLTHROUGH          : 
FIN_SENTENCIA        : 29 29
FLOAT32              : 72
FLOAT64              : 73
FMT                  : 
FOR                  : 29
FUNC                 : 83 84
GO                   : 
ID                   : 21 22 22 23 23 25 25 26 27 28 28 29 29 30 31 31 32 33 33 34 34 39 39 39 40 40 40 41 41 57 60 66 67 68 80 81 82 83 84 84 85 86
IF                   : 49
IGUAL                : 
IGUALDAD             : 50
IMPORT               : 
INCREMENTO           : 30
INT                  : 69
INT32                : 74
INT64                : 71
INTERFACE            : 
LEN                  : 
LLAVE_DER            : 29 34 49 60 66 68 83 84
LLAVE_IZQ            : 29 34 49 60 66 68 83 84
MAKE                 : 67
MAP                  : 66 67 68
MAS                  : 42
MAYOR                : 51
MAYOR_IGU            : 53
MENOR                : 52
MENOR_IGU            : 54
MENOS                : 43
MOD_DIVISION         : 47
MULTIPLICADOR        : 45
NUMERO               : 24 24 35 39 40 40 56 79
PARENT_DER           : 19 20 21 22 23 39 40 41 59 67 81 83 84
PARENT_IZQ           : 19 20 21 22 23 39 40 41 59 67 81 83 84
PIPE                 : 
PRINT                : 
PUNTO                : 23
Package              : 
RANGE                : 
RETURN               : 84
SELECT               : 
STRING               : 70
STRUCT               : 
SWITCH               : 60
TYPE                 : 
VACIO                : 
VAR                  : 27 28 66
error                : 

Nonterminals, with rules where they appear

argumentos           : 83 84 86
arreglo              : 10
asignacion           : 4
asignar_valor_map    : 15
boolcadena           : 6
cantidad             : 33 34
capslice             : 12
case                 : 61 62 63
cases                : 60 63
clave_valor          : 75 76
compaid              : 8
companum             : 7
comparacion          : 24 25 29 49
default              : 62
eliminar_valor_map   : 16
empty                : 20
expression           : 1 19 42 43 59
factor               : 23 26 27 28 28 29 29 37 38 45 46 47 48 49 49 64
funcion              : 18
impresion            : 2
incremento           : 29
longvariable         : 5
map                  : 14
obtener_valor_map    : 17
programa             : 29 49 64 65 83 84 0
sentencia            : 3
sentenciafor         : 9
slice                : 11
switch               : 13
term                 : 42 43 44 45 46 47
tipo_dato            : 27 28 66 66 67 67 68 68 83 84 85 86
valor                : 77 77 80 80 81 82
valores              : 34 38 66 68 76

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (42) expression -> . expression MAS term
    (43) expression -> . expression MENOS term
    (44) expression -> . term
    (19) impresion -> . PARENT_IZQ expression PARENT_DER
    (20) impresion -> . PARENT_IZQ empty PARENT_DER
    (49) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (26) asignacion -> . ID ASIGNACION factor
    (27) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (28) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (21) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (22) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (23) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (24) companum -> . NUMERO comparacion NUMERO
    (25) compaid -> . ID comparacion ID
    (29) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (33) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (34) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (39) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (41) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (60) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (66) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (67) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (68) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (81) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (82) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (83) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (45) term -> . term MULTIPLICADOR factor
    (46) term -> . term DIVISOR factor
    (47) term -> . term MOD_DIVISION factor
    (48) term -> . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_IZQ      shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 24
    VAR             shift and go to state 25
    NUMERO          shift and go to state 27
    FOR             shift and go to state 28
    SWITCH          shift and go to state 29
    DELETE          shift and go to state 30
    FUNC            shift and go to state 31
    CADENA          shift and go to state 26

    programa                       shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 23

state 1

    (0) S' -> programa .



state 2

    (1) programa -> expression .
    (42) expression -> expression . MAS term
    (43) expression -> expression . MENOS term

    $end            reduce using rule 1 (programa -> expression .)
    LLAVE_DER       reduce using rule 1 (programa -> expression .)
    DEFAULT         reduce using rule 1 (programa -> expression .)
    CASE            reduce using rule 1 (programa -> expression .)
    RETURN          reduce using rule 1 (programa -> expression .)
    MAS             shift and go to state 32
    MENOS           shift and go to state 33


state 3

    (2) programa -> impresion .

    $end            reduce using rule 2 (programa -> impresion .)
    LLAVE_DER       reduce using rule 2 (programa -> impresion .)
    DEFAULT         reduce using rule 2 (programa -> impresion .)
    CASE            reduce using rule 2 (programa -> impresion .)
    RETURN          reduce using rule 2 (programa -> impresion .)


state 4

    (3) programa -> sentencia .

    $end            reduce using rule 3 (programa -> sentencia .)
    LLAVE_DER       reduce using rule 3 (programa -> sentencia .)
    DEFAULT         reduce using rule 3 (programa -> sentencia .)
    CASE            reduce using rule 3 (programa -> sentencia .)
    RETURN          reduce using rule 3 (programa -> sentencia .)


state 5

    (4) programa -> asignacion .

    $end            reduce using rule 4 (programa -> asignacion .)
    LLAVE_DER       reduce using rule 4 (programa -> asignacion .)
    DEFAULT         reduce using rule 4 (programa -> asignacion .)
    CASE            reduce using rule 4 (programa -> asignacion .)
    RETURN          reduce using rule 4 (programa -> asignacion .)


state 6

    (5) programa -> longvariable .

    $end            reduce using rule 5 (programa -> longvariable .)
    LLAVE_DER       reduce using rule 5 (programa -> longvariable .)
    DEFAULT         reduce using rule 5 (programa -> longvariable .)
    CASE            reduce using rule 5 (programa -> longvariable .)
    RETURN          reduce using rule 5 (programa -> longvariable .)


state 7

    (6) programa -> boolcadena .

    $end            reduce using rule 6 (programa -> boolcadena .)
    LLAVE_DER       reduce using rule 6 (programa -> boolcadena .)
    DEFAULT         reduce using rule 6 (programa -> boolcadena .)
    CASE            reduce using rule 6 (programa -> boolcadena .)
    RETURN          reduce using rule 6 (programa -> boolcadena .)


state 8

    (7) programa -> companum .

    $end            reduce using rule 7 (programa -> companum .)
    LLAVE_DER       reduce using rule 7 (programa -> companum .)
    DEFAULT         reduce using rule 7 (programa -> companum .)
    CASE            reduce using rule 7 (programa -> companum .)
    RETURN          reduce using rule 7 (programa -> companum .)


state 9

    (8) programa -> compaid .

    $end            reduce using rule 8 (programa -> compaid .)
    LLAVE_DER       reduce using rule 8 (programa -> compaid .)
    DEFAULT         reduce using rule 8 (programa -> compaid .)
    CASE            reduce using rule 8 (programa -> compaid .)
    RETURN          reduce using rule 8 (programa -> compaid .)


state 10

    (9) programa -> sentenciafor .

    $end            reduce using rule 9 (programa -> sentenciafor .)
    LLAVE_DER       reduce using rule 9 (programa -> sentenciafor .)
    DEFAULT         reduce using rule 9 (programa -> sentenciafor .)
    CASE            reduce using rule 9 (programa -> sentenciafor .)
    RETURN          reduce using rule 9 (programa -> sentenciafor .)


state 11

    (10) programa -> arreglo .

    $end            reduce using rule 10 (programa -> arreglo .)
    LLAVE_DER       reduce using rule 10 (programa -> arreglo .)
    DEFAULT         reduce using rule 10 (programa -> arreglo .)
    CASE            reduce using rule 10 (programa -> arreglo .)
    RETURN          reduce using rule 10 (programa -> arreglo .)


state 12

    (11) programa -> slice .

    $end            reduce using rule 11 (programa -> slice .)
    LLAVE_DER       reduce using rule 11 (programa -> slice .)
    DEFAULT         reduce using rule 11 (programa -> slice .)
    CASE            reduce using rule 11 (programa -> slice .)
    RETURN          reduce using rule 11 (programa -> slice .)


state 13

    (12) programa -> capslice .

    $end            reduce using rule 12 (programa -> capslice .)
    LLAVE_DER       reduce using rule 12 (programa -> capslice .)
    DEFAULT         reduce using rule 12 (programa -> capslice .)
    CASE            reduce using rule 12 (programa -> capslice .)
    RETURN          reduce using rule 12 (programa -> capslice .)


state 14

    (13) programa -> switch .

    $end            reduce using rule 13 (programa -> switch .)
    LLAVE_DER       reduce using rule 13 (programa -> switch .)
    DEFAULT         reduce using rule 13 (programa -> switch .)
    CASE            reduce using rule 13 (programa -> switch .)
    RETURN          reduce using rule 13 (programa -> switch .)


state 15

    (14) programa -> map .

    $end            reduce using rule 14 (programa -> map .)
    LLAVE_DER       reduce using rule 14 (programa -> map .)
    DEFAULT         reduce using rule 14 (programa -> map .)
    CASE            reduce using rule 14 (programa -> map .)
    RETURN          reduce using rule 14 (programa -> map .)


state 16

    (15) programa -> asignar_valor_map .

    $end            reduce using rule 15 (programa -> asignar_valor_map .)
    LLAVE_DER       reduce using rule 15 (programa -> asignar_valor_map .)
    DEFAULT         reduce using rule 15 (programa -> asignar_valor_map .)
    CASE            reduce using rule 15 (programa -> asignar_valor_map .)
    RETURN          reduce using rule 15 (programa -> asignar_valor_map .)


state 17

    (16) programa -> eliminar_valor_map .

    $end            reduce using rule 16 (programa -> eliminar_valor_map .)
    LLAVE_DER       reduce using rule 16 (programa -> eliminar_valor_map .)
    DEFAULT         reduce using rule 16 (programa -> eliminar_valor_map .)
    CASE            reduce using rule 16 (programa -> eliminar_valor_map .)
    RETURN          reduce using rule 16 (programa -> eliminar_valor_map .)


state 18

    (17) programa -> obtener_valor_map .

    $end            reduce using rule 17 (programa -> obtener_valor_map .)
    LLAVE_DER       reduce using rule 17 (programa -> obtener_valor_map .)
    DEFAULT         reduce using rule 17 (programa -> obtener_valor_map .)
    CASE            reduce using rule 17 (programa -> obtener_valor_map .)
    RETURN          reduce using rule 17 (programa -> obtener_valor_map .)


state 19

    (18) programa -> funcion .

    $end            reduce using rule 18 (programa -> funcion .)
    LLAVE_DER       reduce using rule 18 (programa -> funcion .)
    DEFAULT         reduce using rule 18 (programa -> funcion .)
    CASE            reduce using rule 18 (programa -> funcion .)
    RETURN          reduce using rule 18 (programa -> funcion .)


state 20

    (44) expression -> term .
    (45) term -> term . MULTIPLICADOR factor
    (46) term -> term . DIVISOR factor
    (47) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 44 (expression -> term .)
    MENOS           reduce using rule 44 (expression -> term .)
    $end            reduce using rule 44 (expression -> term .)
    PARENT_DER      reduce using rule 44 (expression -> term .)
    LLAVE_DER       reduce using rule 44 (expression -> term .)
    DEFAULT         reduce using rule 44 (expression -> term .)
    CASE            reduce using rule 44 (expression -> term .)
    RETURN          reduce using rule 44 (expression -> term .)
    MULTIPLICADOR   shift and go to state 34
    DIVISOR         shift and go to state 35
    MOD_DIVISION    shift and go to state 36


state 21

    (19) impresion -> PARENT_IZQ . expression PARENT_DER
    (20) impresion -> PARENT_IZQ . empty PARENT_DER
    (59) factor -> PARENT_IZQ . expression PARENT_DER
    (42) expression -> . expression MAS term
    (43) expression -> . expression MENOS term
    (44) expression -> . term
    (87) empty -> .
    (45) term -> . term MULTIPLICADOR factor
    (46) term -> . term DIVISOR factor
    (47) term -> . term MOD_DIVISION factor
    (48) term -> . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_DER      reduce using rule 87 (empty -> .)
    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    expression                     shift and go to state 38
    empty                          shift and go to state 39
    term                           shift and go to state 20
    factor                         shift and go to state 23

state 22

    (49) sentencia -> IF . factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 42

state 23

    (48) term -> factor .

    MULTIPLICADOR   reduce using rule 48 (term -> factor .)
    DIVISOR         reduce using rule 48 (term -> factor .)
    MOD_DIVISION    reduce using rule 48 (term -> factor .)
    MAS             reduce using rule 48 (term -> factor .)
    MENOS           reduce using rule 48 (term -> factor .)
    $end            reduce using rule 48 (term -> factor .)
    PARENT_DER      reduce using rule 48 (term -> factor .)
    LLAVE_DER       reduce using rule 48 (term -> factor .)
    DEFAULT         reduce using rule 48 (term -> factor .)
    CASE            reduce using rule 48 (term -> factor .)
    RETURN          reduce using rule 48 (term -> factor .)


state 24

    (26) asignacion -> ID . ASIGNACION factor
    (21) longvariable -> ID . PARENT_IZQ CADENA PARENT_DER
    (22) longvariable -> ID . PARENT_IZQ ID PARENT_DER
    (23) boolcadena -> ID . PUNTO ID PARENT_IZQ factor PARENT_DER
    (25) compaid -> ID . comparacion ID
    (33) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (34) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (39) slice -> ID . ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> ID . ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (41) capslice -> ID . PARENT_IZQ ID PARENT_DER
    (67) map -> ID . ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (68) map -> ID . ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) asignar_valor_map -> ID . CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (82) obtener_valor_map -> ID . CORCHETE_IZQ valor CORCHETE_DER
    (57) factor -> ID .
    (50) comparacion -> . IGUALDAD
    (51) comparacion -> . MAYOR
    (52) comparacion -> . MENOR
    (53) comparacion -> . MAYOR_IGU
    (54) comparacion -> . MENOR_IGU
    (55) comparacion -> . DESIGUALDAD

    ASIGNACION      shift and go to state 43
    PARENT_IZQ      shift and go to state 44
    PUNTO           shift and go to state 45
    CORCHETE_IZQ    shift and go to state 47
    MULTIPLICADOR   reduce using rule 57 (factor -> ID .)
    DIVISOR         reduce using rule 57 (factor -> ID .)
    MOD_DIVISION    reduce using rule 57 (factor -> ID .)
    MAS             reduce using rule 57 (factor -> ID .)
    MENOS           reduce using rule 57 (factor -> ID .)
    $end            reduce using rule 57 (factor -> ID .)
    LLAVE_DER       reduce using rule 57 (factor -> ID .)
    DEFAULT         reduce using rule 57 (factor -> ID .)
    CASE            reduce using rule 57 (factor -> ID .)
    RETURN          reduce using rule 57 (factor -> ID .)
    IGUALDAD        shift and go to state 48
    MAYOR           shift and go to state 49
    MENOR           shift and go to state 50
    MAYOR_IGU       shift and go to state 51
    MENOR_IGU       shift and go to state 52
    DESIGUALDAD     shift and go to state 53

    comparacion                    shift and go to state 46

state 25

    (27) asignacion -> VAR . ID tipo_dato ASIGNACION factor
    (28) asignacion -> VAR . ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (66) map -> VAR . ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    ID              shift and go to state 54


state 26

    (58) factor -> CADENA .

    MULTIPLICADOR   reduce using rule 58 (factor -> CADENA .)
    DIVISOR         reduce using rule 58 (factor -> CADENA .)
    MOD_DIVISION    reduce using rule 58 (factor -> CADENA .)
    MAS             reduce using rule 58 (factor -> CADENA .)
    MENOS           reduce using rule 58 (factor -> CADENA .)
    $end            reduce using rule 58 (factor -> CADENA .)
    PARENT_DER      reduce using rule 58 (factor -> CADENA .)
    IGUALDAD        reduce using rule 58 (factor -> CADENA .)
    MAYOR           reduce using rule 58 (factor -> CADENA .)
    MENOR           reduce using rule 58 (factor -> CADENA .)
    MAYOR_IGU       reduce using rule 58 (factor -> CADENA .)
    MENOR_IGU       reduce using rule 58 (factor -> CADENA .)
    DESIGUALDAD     reduce using rule 58 (factor -> CADENA .)
    LLAVE_DER       reduce using rule 58 (factor -> CADENA .)
    DEFAULT         reduce using rule 58 (factor -> CADENA .)
    CASE            reduce using rule 58 (factor -> CADENA .)
    RETURN          reduce using rule 58 (factor -> CADENA .)
    LLAVE_IZQ       reduce using rule 58 (factor -> CADENA .)
    FIN_SENTENCIA   reduce using rule 58 (factor -> CADENA .)
    DOS_PUNTOS      reduce using rule 58 (factor -> CADENA .)
    COMA            reduce using rule 58 (factor -> CADENA .)


state 27

    (24) companum -> NUMERO . comparacion NUMERO
    (56) factor -> NUMERO .
    (50) comparacion -> . IGUALDAD
    (51) comparacion -> . MAYOR
    (52) comparacion -> . MENOR
    (53) comparacion -> . MAYOR_IGU
    (54) comparacion -> . MENOR_IGU
    (55) comparacion -> . DESIGUALDAD

    MULTIPLICADOR   reduce using rule 56 (factor -> NUMERO .)
    DIVISOR         reduce using rule 56 (factor -> NUMERO .)
    MOD_DIVISION    reduce using rule 56 (factor -> NUMERO .)
    MAS             reduce using rule 56 (factor -> NUMERO .)
    MENOS           reduce using rule 56 (factor -> NUMERO .)
    $end            reduce using rule 56 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 56 (factor -> NUMERO .)
    DEFAULT         reduce using rule 56 (factor -> NUMERO .)
    CASE            reduce using rule 56 (factor -> NUMERO .)
    RETURN          reduce using rule 56 (factor -> NUMERO .)
    IGUALDAD        shift and go to state 48
    MAYOR           shift and go to state 49
    MENOR           shift and go to state 50
    MAYOR_IGU       shift and go to state 51
    MENOR_IGU       shift and go to state 52
    DESIGUALDAD     shift and go to state 53

    comparacion                    shift and go to state 55

state 28

    (29) sentenciafor -> FOR . ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ID              shift and go to state 56


state 29

    (60) switch -> SWITCH . ID LLAVE_IZQ cases LLAVE_DER

    ID              shift and go to state 57


state 30

    (81) eliminar_valor_map -> DELETE . PARENT_IZQ ID COMA valor PARENT_DER

    PARENT_IZQ      shift and go to state 58


state 31

    (83) funcion -> FUNC . ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> FUNC . ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER

    ID              shift and go to state 59


state 32

    (42) expression -> expression MAS . term
    (45) term -> . term MULTIPLICADOR factor
    (46) term -> . term DIVISOR factor
    (47) term -> . term MOD_DIVISION factor
    (48) term -> . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    term                           shift and go to state 60
    factor                         shift and go to state 23

state 33

    (43) expression -> expression MENOS . term
    (45) term -> . term MULTIPLICADOR factor
    (46) term -> . term DIVISOR factor
    (47) term -> . term MOD_DIVISION factor
    (48) term -> . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    term                           shift and go to state 61
    factor                         shift and go to state 23

state 34

    (45) term -> term MULTIPLICADOR . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 62

state 35

    (46) term -> term DIVISOR . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 63

state 36

    (47) term -> term MOD_DIVISION . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 64

state 37

    (59) factor -> PARENT_IZQ . expression PARENT_DER
    (42) expression -> . expression MAS term
    (43) expression -> . expression MENOS term
    (44) expression -> . term
    (45) term -> . term MULTIPLICADOR factor
    (46) term -> . term DIVISOR factor
    (47) term -> . term MOD_DIVISION factor
    (48) term -> . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    expression                     shift and go to state 65
    term                           shift and go to state 20
    factor                         shift and go to state 23

state 38

    (19) impresion -> PARENT_IZQ expression . PARENT_DER
    (59) factor -> PARENT_IZQ expression . PARENT_DER
    (42) expression -> expression . MAS term
    (43) expression -> expression . MENOS term

    PARENT_DER      shift and go to state 66
    MAS             shift and go to state 32
    MENOS           shift and go to state 33


state 39

    (20) impresion -> PARENT_IZQ empty . PARENT_DER

    PARENT_DER      shift and go to state 67


state 40

    (56) factor -> NUMERO .

    MULTIPLICADOR   reduce using rule 56 (factor -> NUMERO .)
    DIVISOR         reduce using rule 56 (factor -> NUMERO .)
    MOD_DIVISION    reduce using rule 56 (factor -> NUMERO .)
    PARENT_DER      reduce using rule 56 (factor -> NUMERO .)
    MAS             reduce using rule 56 (factor -> NUMERO .)
    MENOS           reduce using rule 56 (factor -> NUMERO .)
    IGUALDAD        reduce using rule 56 (factor -> NUMERO .)
    MAYOR           reduce using rule 56 (factor -> NUMERO .)
    MENOR           reduce using rule 56 (factor -> NUMERO .)
    MAYOR_IGU       reduce using rule 56 (factor -> NUMERO .)
    MENOR_IGU       reduce using rule 56 (factor -> NUMERO .)
    DESIGUALDAD     reduce using rule 56 (factor -> NUMERO .)
    $end            reduce using rule 56 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 56 (factor -> NUMERO .)
    DEFAULT         reduce using rule 56 (factor -> NUMERO .)
    CASE            reduce using rule 56 (factor -> NUMERO .)
    RETURN          reduce using rule 56 (factor -> NUMERO .)
    LLAVE_IZQ       reduce using rule 56 (factor -> NUMERO .)
    FIN_SENTENCIA   reduce using rule 56 (factor -> NUMERO .)
    DOS_PUNTOS      reduce using rule 56 (factor -> NUMERO .)
    COMA            reduce using rule 56 (factor -> NUMERO .)


state 41

    (57) factor -> ID .

    MULTIPLICADOR   reduce using rule 57 (factor -> ID .)
    DIVISOR         reduce using rule 57 (factor -> ID .)
    MOD_DIVISION    reduce using rule 57 (factor -> ID .)
    PARENT_DER      reduce using rule 57 (factor -> ID .)
    MAS             reduce using rule 57 (factor -> ID .)
    MENOS           reduce using rule 57 (factor -> ID .)
    IGUALDAD        reduce using rule 57 (factor -> ID .)
    MAYOR           reduce using rule 57 (factor -> ID .)
    MENOR           reduce using rule 57 (factor -> ID .)
    MAYOR_IGU       reduce using rule 57 (factor -> ID .)
    MENOR_IGU       reduce using rule 57 (factor -> ID .)
    DESIGUALDAD     reduce using rule 57 (factor -> ID .)
    $end            reduce using rule 57 (factor -> ID .)
    LLAVE_DER       reduce using rule 57 (factor -> ID .)
    DEFAULT         reduce using rule 57 (factor -> ID .)
    CASE            reduce using rule 57 (factor -> ID .)
    RETURN          reduce using rule 57 (factor -> ID .)
    LLAVE_IZQ       reduce using rule 57 (factor -> ID .)
    FIN_SENTENCIA   reduce using rule 57 (factor -> ID .)
    DOS_PUNTOS      reduce using rule 57 (factor -> ID .)
    COMA            reduce using rule 57 (factor -> ID .)


state 42

    (49) sentencia -> IF factor . comparacion factor LLAVE_IZQ programa LLAVE_DER
    (50) comparacion -> . IGUALDAD
    (51) comparacion -> . MAYOR
    (52) comparacion -> . MENOR
    (53) comparacion -> . MAYOR_IGU
    (54) comparacion -> . MENOR_IGU
    (55) comparacion -> . DESIGUALDAD

    IGUALDAD        shift and go to state 48
    MAYOR           shift and go to state 49
    MENOR           shift and go to state 50
    MAYOR_IGU       shift and go to state 51
    MENOR_IGU       shift and go to state 52
    DESIGUALDAD     shift and go to state 53

    comparacion                    shift and go to state 68

state 43

    (26) asignacion -> ID ASIGNACION . factor
    (33) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER ID
    (34) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (39) slice -> ID ASIGNACION . ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> ID ASIGNACION . ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (67) map -> ID ASIGNACION . MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (68) map -> ID ASIGNACION . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    CORCHETE_IZQ    shift and go to state 71
    ID              shift and go to state 69
    MAKE            shift and go to state 72
    MAP             shift and go to state 73
    NUMERO          shift and go to state 40
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 70

state 44

    (21) longvariable -> ID PARENT_IZQ . CADENA PARENT_DER
    (22) longvariable -> ID PARENT_IZQ . ID PARENT_DER
    (41) capslice -> ID PARENT_IZQ . ID PARENT_DER

    CADENA          shift and go to state 75
    ID              shift and go to state 74


state 45

    (23) boolcadena -> ID PUNTO . ID PARENT_IZQ factor PARENT_DER

    ID              shift and go to state 76


state 46

    (25) compaid -> ID comparacion . ID

    ID              shift and go to state 77


state 47

    (80) asignar_valor_map -> ID CORCHETE_IZQ . valor CORCHETE_DER ASIGNACION valor
    (82) obtener_valor_map -> ID CORCHETE_IZQ . valor CORCHETE_DER
    (78) valor -> . CADENA
    (79) valor -> . NUMERO

    CADENA          shift and go to state 79
    NUMERO          shift and go to state 80

    valor                          shift and go to state 78

state 48

    (50) comparacion -> IGUALDAD .

    ID              reduce using rule 50 (comparacion -> IGUALDAD .)
    NUMERO          reduce using rule 50 (comparacion -> IGUALDAD .)
    CADENA          reduce using rule 50 (comparacion -> IGUALDAD .)
    PARENT_IZQ      reduce using rule 50 (comparacion -> IGUALDAD .)


state 49

    (51) comparacion -> MAYOR .

    ID              reduce using rule 51 (comparacion -> MAYOR .)
    NUMERO          reduce using rule 51 (comparacion -> MAYOR .)
    CADENA          reduce using rule 51 (comparacion -> MAYOR .)
    PARENT_IZQ      reduce using rule 51 (comparacion -> MAYOR .)


state 50

    (52) comparacion -> MENOR .

    ID              reduce using rule 52 (comparacion -> MENOR .)
    NUMERO          reduce using rule 52 (comparacion -> MENOR .)
    CADENA          reduce using rule 52 (comparacion -> MENOR .)
    PARENT_IZQ      reduce using rule 52 (comparacion -> MENOR .)


state 51

    (53) comparacion -> MAYOR_IGU .

    ID              reduce using rule 53 (comparacion -> MAYOR_IGU .)
    NUMERO          reduce using rule 53 (comparacion -> MAYOR_IGU .)
    CADENA          reduce using rule 53 (comparacion -> MAYOR_IGU .)
    PARENT_IZQ      reduce using rule 53 (comparacion -> MAYOR_IGU .)


state 52

    (54) comparacion -> MENOR_IGU .

    ID              reduce using rule 54 (comparacion -> MENOR_IGU .)
    NUMERO          reduce using rule 54 (comparacion -> MENOR_IGU .)
    CADENA          reduce using rule 54 (comparacion -> MENOR_IGU .)
    PARENT_IZQ      reduce using rule 54 (comparacion -> MENOR_IGU .)


state 53

    (55) comparacion -> DESIGUALDAD .

    ID              reduce using rule 55 (comparacion -> DESIGUALDAD .)
    NUMERO          reduce using rule 55 (comparacion -> DESIGUALDAD .)
    CADENA          reduce using rule 55 (comparacion -> DESIGUALDAD .)
    PARENT_IZQ      reduce using rule 55 (comparacion -> DESIGUALDAD .)


state 54

    (27) asignacion -> VAR ID . tipo_dato ASIGNACION factor
    (28) asignacion -> VAR ID . COMA ID tipo_dato ASIGNACION factor COMA factor
    (66) map -> VAR ID . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (69) tipo_dato -> . INT
    (70) tipo_dato -> . STRING
    (71) tipo_dato -> . INT64
    (72) tipo_dato -> . FLOAT32
    (73) tipo_dato -> . FLOAT64
    (74) tipo_dato -> . INT32

    COMA            shift and go to state 82
    MAP             shift and go to state 83
    INT             shift and go to state 84
    STRING          shift and go to state 85
    INT64           shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    INT32           shift and go to state 89

    tipo_dato                      shift and go to state 81

state 55

    (24) companum -> NUMERO comparacion . NUMERO

    NUMERO          shift and go to state 90


state 56

    (29) sentenciafor -> FOR ID . ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ASIGNACION      shift and go to state 91


state 57

    (60) switch -> SWITCH ID . LLAVE_IZQ cases LLAVE_DER

    LLAVE_IZQ       shift and go to state 92


state 58

    (81) eliminar_valor_map -> DELETE PARENT_IZQ . ID COMA valor PARENT_DER

    ID              shift and go to state 93


state 59

    (83) funcion -> FUNC ID . PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> FUNC ID . PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER

    PARENT_IZQ      shift and go to state 94


state 60

    (42) expression -> expression MAS term .
    (45) term -> term . MULTIPLICADOR factor
    (46) term -> term . DIVISOR factor
    (47) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 42 (expression -> expression MAS term .)
    MENOS           reduce using rule 42 (expression -> expression MAS term .)
    $end            reduce using rule 42 (expression -> expression MAS term .)
    PARENT_DER      reduce using rule 42 (expression -> expression MAS term .)
    LLAVE_DER       reduce using rule 42 (expression -> expression MAS term .)
    DEFAULT         reduce using rule 42 (expression -> expression MAS term .)
    CASE            reduce using rule 42 (expression -> expression MAS term .)
    RETURN          reduce using rule 42 (expression -> expression MAS term .)
    MULTIPLICADOR   shift and go to state 34
    DIVISOR         shift and go to state 35
    MOD_DIVISION    shift and go to state 36


state 61

    (43) expression -> expression MENOS term .
    (45) term -> term . MULTIPLICADOR factor
    (46) term -> term . DIVISOR factor
    (47) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 43 (expression -> expression MENOS term .)
    MENOS           reduce using rule 43 (expression -> expression MENOS term .)
    $end            reduce using rule 43 (expression -> expression MENOS term .)
    PARENT_DER      reduce using rule 43 (expression -> expression MENOS term .)
    LLAVE_DER       reduce using rule 43 (expression -> expression MENOS term .)
    DEFAULT         reduce using rule 43 (expression -> expression MENOS term .)
    CASE            reduce using rule 43 (expression -> expression MENOS term .)
    RETURN          reduce using rule 43 (expression -> expression MENOS term .)
    MULTIPLICADOR   shift and go to state 34
    DIVISOR         shift and go to state 35
    MOD_DIVISION    shift and go to state 36


state 62

    (45) term -> term MULTIPLICADOR factor .

    MULTIPLICADOR   reduce using rule 45 (term -> term MULTIPLICADOR factor .)
    DIVISOR         reduce using rule 45 (term -> term MULTIPLICADOR factor .)
    MOD_DIVISION    reduce using rule 45 (term -> term MULTIPLICADOR factor .)
    MAS             reduce using rule 45 (term -> term MULTIPLICADOR factor .)
    MENOS           reduce using rule 45 (term -> term MULTIPLICADOR factor .)
    $end            reduce using rule 45 (term -> term MULTIPLICADOR factor .)
    PARENT_DER      reduce using rule 45 (term -> term MULTIPLICADOR factor .)
    LLAVE_DER       reduce using rule 45 (term -> term MULTIPLICADOR factor .)
    DEFAULT         reduce using rule 45 (term -> term MULTIPLICADOR factor .)
    CASE            reduce using rule 45 (term -> term MULTIPLICADOR factor .)
    RETURN          reduce using rule 45 (term -> term MULTIPLICADOR factor .)


state 63

    (46) term -> term DIVISOR factor .

    MULTIPLICADOR   reduce using rule 46 (term -> term DIVISOR factor .)
    DIVISOR         reduce using rule 46 (term -> term DIVISOR factor .)
    MOD_DIVISION    reduce using rule 46 (term -> term DIVISOR factor .)
    MAS             reduce using rule 46 (term -> term DIVISOR factor .)
    MENOS           reduce using rule 46 (term -> term DIVISOR factor .)
    $end            reduce using rule 46 (term -> term DIVISOR factor .)
    PARENT_DER      reduce using rule 46 (term -> term DIVISOR factor .)
    LLAVE_DER       reduce using rule 46 (term -> term DIVISOR factor .)
    DEFAULT         reduce using rule 46 (term -> term DIVISOR factor .)
    CASE            reduce using rule 46 (term -> term DIVISOR factor .)
    RETURN          reduce using rule 46 (term -> term DIVISOR factor .)


state 64

    (47) term -> term MOD_DIVISION factor .

    MULTIPLICADOR   reduce using rule 47 (term -> term MOD_DIVISION factor .)
    DIVISOR         reduce using rule 47 (term -> term MOD_DIVISION factor .)
    MOD_DIVISION    reduce using rule 47 (term -> term MOD_DIVISION factor .)
    MAS             reduce using rule 47 (term -> term MOD_DIVISION factor .)
    MENOS           reduce using rule 47 (term -> term MOD_DIVISION factor .)
    $end            reduce using rule 47 (term -> term MOD_DIVISION factor .)
    PARENT_DER      reduce using rule 47 (term -> term MOD_DIVISION factor .)
    LLAVE_DER       reduce using rule 47 (term -> term MOD_DIVISION factor .)
    DEFAULT         reduce using rule 47 (term -> term MOD_DIVISION factor .)
    CASE            reduce using rule 47 (term -> term MOD_DIVISION factor .)
    RETURN          reduce using rule 47 (term -> term MOD_DIVISION factor .)


state 65

    (59) factor -> PARENT_IZQ expression . PARENT_DER
    (42) expression -> expression . MAS term
    (43) expression -> expression . MENOS term

    PARENT_DER      shift and go to state 95
    MAS             shift and go to state 32
    MENOS           shift and go to state 33


state 66

    (19) impresion -> PARENT_IZQ expression PARENT_DER .
    (59) factor -> PARENT_IZQ expression PARENT_DER .

  ! reduce/reduce conflict for $end resolved using rule 19 (impresion -> PARENT_IZQ expression PARENT_DER .)
  ! reduce/reduce conflict for LLAVE_DER resolved using rule 19 (impresion -> PARENT_IZQ expression PARENT_DER .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 19 (impresion -> PARENT_IZQ expression PARENT_DER .)
  ! reduce/reduce conflict for CASE resolved using rule 19 (impresion -> PARENT_IZQ expression PARENT_DER .)
  ! reduce/reduce conflict for RETURN resolved using rule 19 (impresion -> PARENT_IZQ expression PARENT_DER .)
    $end            reduce using rule 19 (impresion -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_DER       reduce using rule 19 (impresion -> PARENT_IZQ expression PARENT_DER .)
    DEFAULT         reduce using rule 19 (impresion -> PARENT_IZQ expression PARENT_DER .)
    CASE            reduce using rule 19 (impresion -> PARENT_IZQ expression PARENT_DER .)
    RETURN          reduce using rule 19 (impresion -> PARENT_IZQ expression PARENT_DER .)
    MULTIPLICADOR   reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    DIVISOR         reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    MOD_DIVISION    reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAS             reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOS           reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)

  ! $end            [ reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .) ]
  ! LLAVE_DER       [ reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .) ]
  ! DEFAULT         [ reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .) ]
  ! CASE            [ reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .) ]
  ! RETURN          [ reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .) ]


state 67

    (20) impresion -> PARENT_IZQ empty PARENT_DER .

    $end            reduce using rule 20 (impresion -> PARENT_IZQ empty PARENT_DER .)
    LLAVE_DER       reduce using rule 20 (impresion -> PARENT_IZQ empty PARENT_DER .)
    DEFAULT         reduce using rule 20 (impresion -> PARENT_IZQ empty PARENT_DER .)
    CASE            reduce using rule 20 (impresion -> PARENT_IZQ empty PARENT_DER .)
    RETURN          reduce using rule 20 (impresion -> PARENT_IZQ empty PARENT_DER .)


state 68

    (49) sentencia -> IF factor comparacion . factor LLAVE_IZQ programa LLAVE_DER
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 96

state 69

    (39) slice -> ID ASIGNACION ID . PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> ID ASIGNACION ID . PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (57) factor -> ID .

    PARENT_IZQ      shift and go to state 97
    $end            reduce using rule 57 (factor -> ID .)
    LLAVE_DER       reduce using rule 57 (factor -> ID .)
    DEFAULT         reduce using rule 57 (factor -> ID .)
    CASE            reduce using rule 57 (factor -> ID .)
    RETURN          reduce using rule 57 (factor -> ID .)


state 70

    (26) asignacion -> ID ASIGNACION factor .

    $end            reduce using rule 26 (asignacion -> ID ASIGNACION factor .)
    LLAVE_DER       reduce using rule 26 (asignacion -> ID ASIGNACION factor .)
    DEFAULT         reduce using rule 26 (asignacion -> ID ASIGNACION factor .)
    CASE            reduce using rule 26 (asignacion -> ID ASIGNACION factor .)
    RETURN          reduce using rule 26 (asignacion -> ID ASIGNACION factor .)


state 71

    (33) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER ID
    (34) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (35) cantidad -> . NUMERO
    (36) cantidad -> . ARRPUNTOS

    NUMERO          shift and go to state 99
    ARRPUNTOS       shift and go to state 100

    cantidad                       shift and go to state 98

state 72

    (67) map -> ID ASIGNACION MAKE . PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    PARENT_IZQ      shift and go to state 101


state 73

    (68) map -> ID ASIGNACION MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_IZQ    shift and go to state 102


state 74

    (22) longvariable -> ID PARENT_IZQ ID . PARENT_DER
    (41) capslice -> ID PARENT_IZQ ID . PARENT_DER

    PARENT_DER      shift and go to state 103


state 75

    (21) longvariable -> ID PARENT_IZQ CADENA . PARENT_DER

    PARENT_DER      shift and go to state 104


state 76

    (23) boolcadena -> ID PUNTO ID . PARENT_IZQ factor PARENT_DER

    PARENT_IZQ      shift and go to state 105


state 77

    (25) compaid -> ID comparacion ID .

    $end            reduce using rule 25 (compaid -> ID comparacion ID .)
    LLAVE_DER       reduce using rule 25 (compaid -> ID comparacion ID .)
    DEFAULT         reduce using rule 25 (compaid -> ID comparacion ID .)
    CASE            reduce using rule 25 (compaid -> ID comparacion ID .)
    RETURN          reduce using rule 25 (compaid -> ID comparacion ID .)


state 78

    (80) asignar_valor_map -> ID CORCHETE_IZQ valor . CORCHETE_DER ASIGNACION valor
    (82) obtener_valor_map -> ID CORCHETE_IZQ valor . CORCHETE_DER

    CORCHETE_DER    shift and go to state 106


state 79

    (78) valor -> CADENA .

    CORCHETE_DER    reduce using rule 78 (valor -> CADENA .)
    PARENT_DER      reduce using rule 78 (valor -> CADENA .)
    $end            reduce using rule 78 (valor -> CADENA .)
    LLAVE_DER       reduce using rule 78 (valor -> CADENA .)
    DEFAULT         reduce using rule 78 (valor -> CADENA .)
    CASE            reduce using rule 78 (valor -> CADENA .)
    RETURN          reduce using rule 78 (valor -> CADENA .)
    COMA            reduce using rule 78 (valor -> CADENA .)


state 80

    (79) valor -> NUMERO .

    CORCHETE_DER    reduce using rule 79 (valor -> NUMERO .)
    PARENT_DER      reduce using rule 79 (valor -> NUMERO .)
    $end            reduce using rule 79 (valor -> NUMERO .)
    LLAVE_DER       reduce using rule 79 (valor -> NUMERO .)
    DEFAULT         reduce using rule 79 (valor -> NUMERO .)
    CASE            reduce using rule 79 (valor -> NUMERO .)
    RETURN          reduce using rule 79 (valor -> NUMERO .)
    COMA            reduce using rule 79 (valor -> NUMERO .)


state 81

    (27) asignacion -> VAR ID tipo_dato . ASIGNACION factor

    ASIGNACION      shift and go to state 107


state 82

    (28) asignacion -> VAR ID COMA . ID tipo_dato ASIGNACION factor COMA factor

    ID              shift and go to state 108


state 83

    (66) map -> VAR ID MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_IZQ    shift and go to state 109


state 84

    (69) tipo_dato -> INT .

    ASIGNACION      reduce using rule 69 (tipo_dato -> INT .)
    CORCHETE_DER    reduce using rule 69 (tipo_dato -> INT .)
    COMA            reduce using rule 69 (tipo_dato -> INT .)
    PARENT_DER      reduce using rule 69 (tipo_dato -> INT .)
    LLAVE_IZQ       reduce using rule 69 (tipo_dato -> INT .)


state 85

    (70) tipo_dato -> STRING .

    ASIGNACION      reduce using rule 70 (tipo_dato -> STRING .)
    CORCHETE_DER    reduce using rule 70 (tipo_dato -> STRING .)
    COMA            reduce using rule 70 (tipo_dato -> STRING .)
    PARENT_DER      reduce using rule 70 (tipo_dato -> STRING .)
    LLAVE_IZQ       reduce using rule 70 (tipo_dato -> STRING .)


state 86

    (71) tipo_dato -> INT64 .

    ASIGNACION      reduce using rule 71 (tipo_dato -> INT64 .)
    CORCHETE_DER    reduce using rule 71 (tipo_dato -> INT64 .)
    COMA            reduce using rule 71 (tipo_dato -> INT64 .)
    PARENT_DER      reduce using rule 71 (tipo_dato -> INT64 .)
    LLAVE_IZQ       reduce using rule 71 (tipo_dato -> INT64 .)


state 87

    (72) tipo_dato -> FLOAT32 .

    ASIGNACION      reduce using rule 72 (tipo_dato -> FLOAT32 .)
    CORCHETE_DER    reduce using rule 72 (tipo_dato -> FLOAT32 .)
    COMA            reduce using rule 72 (tipo_dato -> FLOAT32 .)
    PARENT_DER      reduce using rule 72 (tipo_dato -> FLOAT32 .)
    LLAVE_IZQ       reduce using rule 72 (tipo_dato -> FLOAT32 .)


state 88

    (73) tipo_dato -> FLOAT64 .

    ASIGNACION      reduce using rule 73 (tipo_dato -> FLOAT64 .)
    CORCHETE_DER    reduce using rule 73 (tipo_dato -> FLOAT64 .)
    COMA            reduce using rule 73 (tipo_dato -> FLOAT64 .)
    PARENT_DER      reduce using rule 73 (tipo_dato -> FLOAT64 .)
    LLAVE_IZQ       reduce using rule 73 (tipo_dato -> FLOAT64 .)


state 89

    (74) tipo_dato -> INT32 .

    ASIGNACION      reduce using rule 74 (tipo_dato -> INT32 .)
    CORCHETE_DER    reduce using rule 74 (tipo_dato -> INT32 .)
    COMA            reduce using rule 74 (tipo_dato -> INT32 .)
    PARENT_DER      reduce using rule 74 (tipo_dato -> INT32 .)
    LLAVE_IZQ       reduce using rule 74 (tipo_dato -> INT32 .)


state 90

    (24) companum -> NUMERO comparacion NUMERO .

    $end            reduce using rule 24 (companum -> NUMERO comparacion NUMERO .)
    LLAVE_DER       reduce using rule 24 (companum -> NUMERO comparacion NUMERO .)
    DEFAULT         reduce using rule 24 (companum -> NUMERO comparacion NUMERO .)
    CASE            reduce using rule 24 (companum -> NUMERO comparacion NUMERO .)
    RETURN          reduce using rule 24 (companum -> NUMERO comparacion NUMERO .)


state 91

    (29) sentenciafor -> FOR ID ASIGNACION . factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 110

state 92

    (60) switch -> SWITCH ID LLAVE_IZQ . cases LLAVE_DER
    (61) cases -> . case
    (62) cases -> . case default
    (63) cases -> . case cases
    (64) case -> . CASE factor DOS_PUNTOS programa

    CASE            shift and go to state 113

    cases                          shift and go to state 111
    case                           shift and go to state 112

state 93

    (81) eliminar_valor_map -> DELETE PARENT_IZQ ID . COMA valor PARENT_DER

    COMA            shift and go to state 114


state 94

    (83) funcion -> FUNC ID PARENT_IZQ . argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> FUNC ID PARENT_IZQ . argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (85) argumentos -> . ID tipo_dato
    (86) argumentos -> . ID tipo_dato COMA argumentos

    ID              shift and go to state 115

    argumentos                     shift and go to state 116

state 95

    (59) factor -> PARENT_IZQ expression PARENT_DER .

    MULTIPLICADOR   reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    DIVISOR         reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    MOD_DIVISION    reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    PARENT_DER      reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAS             reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOS           reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    IGUALDAD        reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAYOR           reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOR           reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAYOR_IGU       reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOR_IGU       reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    DESIGUALDAD     reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    $end            reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_DER       reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    DEFAULT         reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    CASE            reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    RETURN          reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_IZQ       reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    FIN_SENTENCIA   reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    DOS_PUNTOS      reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)
    COMA            reduce using rule 59 (factor -> PARENT_IZQ expression PARENT_DER .)


state 96

    (49) sentencia -> IF factor comparacion factor . LLAVE_IZQ programa LLAVE_DER

    LLAVE_IZQ       shift and go to state 117


state 97

    (39) slice -> ID ASIGNACION ID PARENT_IZQ . CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> ID ASIGNACION ID PARENT_IZQ . CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER

    CORCHETE_IZQ    shift and go to state 118


state 98

    (33) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER ID
    (34) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 119


state 99

    (35) cantidad -> NUMERO .

    CORCHETE_DER    reduce using rule 35 (cantidad -> NUMERO .)


state 100

    (36) cantidad -> ARRPUNTOS .

    CORCHETE_DER    reduce using rule 36 (cantidad -> ARRPUNTOS .)


state 101

    (67) map -> ID ASIGNACION MAKE PARENT_IZQ . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    MAP             shift and go to state 120


state 102

    (68) map -> ID ASIGNACION MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (69) tipo_dato -> . INT
    (70) tipo_dato -> . STRING
    (71) tipo_dato -> . INT64
    (72) tipo_dato -> . FLOAT32
    (73) tipo_dato -> . FLOAT64
    (74) tipo_dato -> . INT32

    INT             shift and go to state 84
    STRING          shift and go to state 85
    INT64           shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    INT32           shift and go to state 89

    tipo_dato                      shift and go to state 121

state 103

    (22) longvariable -> ID PARENT_IZQ ID PARENT_DER .
    (41) capslice -> ID PARENT_IZQ ID PARENT_DER .

  ! reduce/reduce conflict for $end resolved using rule 22 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for LLAVE_DER resolved using rule 22 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 22 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for CASE resolved using rule 22 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for RETURN resolved using rule 22 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    $end            reduce using rule 22 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    LLAVE_DER       reduce using rule 22 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    DEFAULT         reduce using rule 22 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    CASE            reduce using rule 22 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    RETURN          reduce using rule 22 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)

  ! $end            [ reduce using rule 41 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! LLAVE_DER       [ reduce using rule 41 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! DEFAULT         [ reduce using rule 41 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! CASE            [ reduce using rule 41 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! RETURN          [ reduce using rule 41 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]


state 104

    (21) longvariable -> ID PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 21 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 21 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    DEFAULT         reduce using rule 21 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    CASE            reduce using rule 21 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    RETURN          reduce using rule 21 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)


state 105

    (23) boolcadena -> ID PUNTO ID PARENT_IZQ . factor PARENT_DER
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 122

state 106

    (80) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER . ASIGNACION valor
    (82) obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .

    ASIGNACION      shift and go to state 123
    $end            reduce using rule 82 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    LLAVE_DER       reduce using rule 82 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    DEFAULT         reduce using rule 82 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    CASE            reduce using rule 82 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    RETURN          reduce using rule 82 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)


state 107

    (27) asignacion -> VAR ID tipo_dato ASIGNACION . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 124

state 108

    (28) asignacion -> VAR ID COMA ID . tipo_dato ASIGNACION factor COMA factor
    (69) tipo_dato -> . INT
    (70) tipo_dato -> . STRING
    (71) tipo_dato -> . INT64
    (72) tipo_dato -> . FLOAT32
    (73) tipo_dato -> . FLOAT64
    (74) tipo_dato -> . INT32

    INT             shift and go to state 84
    STRING          shift and go to state 85
    INT64           shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    INT32           shift and go to state 89

    tipo_dato                      shift and go to state 125

state 109

    (66) map -> VAR ID MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (69) tipo_dato -> . INT
    (70) tipo_dato -> . STRING
    (71) tipo_dato -> . INT64
    (72) tipo_dato -> . FLOAT32
    (73) tipo_dato -> . FLOAT64
    (74) tipo_dato -> . INT32

    INT             shift and go to state 84
    STRING          shift and go to state 85
    INT64           shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    INT32           shift and go to state 89

    tipo_dato                      shift and go to state 126

state 110

    (29) sentenciafor -> FOR ID ASIGNACION factor . FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    FIN_SENTENCIA   shift and go to state 127


state 111

    (60) switch -> SWITCH ID LLAVE_IZQ cases . LLAVE_DER

    LLAVE_DER       shift and go to state 128


state 112

    (61) cases -> case .
    (62) cases -> case . default
    (63) cases -> case . cases
    (65) default -> . DEFAULT DOS_PUNTOS programa
    (61) cases -> . case
    (62) cases -> . case default
    (63) cases -> . case cases
    (64) case -> . CASE factor DOS_PUNTOS programa

    LLAVE_DER       reduce using rule 61 (cases -> case .)
    DEFAULT         shift and go to state 131
    CASE            shift and go to state 113

    case                           shift and go to state 112
    default                        shift and go to state 129
    cases                          shift and go to state 130

state 113

    (64) case -> CASE . factor DOS_PUNTOS programa
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 132

state 114

    (81) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA . valor PARENT_DER
    (78) valor -> . CADENA
    (79) valor -> . NUMERO

    CADENA          shift and go to state 79
    NUMERO          shift and go to state 80

    valor                          shift and go to state 133

state 115

    (85) argumentos -> ID . tipo_dato
    (86) argumentos -> ID . tipo_dato COMA argumentos
    (69) tipo_dato -> . INT
    (70) tipo_dato -> . STRING
    (71) tipo_dato -> . INT64
    (72) tipo_dato -> . FLOAT32
    (73) tipo_dato -> . FLOAT64
    (74) tipo_dato -> . INT32

    INT             shift and go to state 84
    STRING          shift and go to state 85
    INT64           shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    INT32           shift and go to state 89

    tipo_dato                      shift and go to state 134

state 116

    (83) funcion -> FUNC ID PARENT_IZQ argumentos . PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> FUNC ID PARENT_IZQ argumentos . PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER

    PARENT_DER      shift and go to state 135


state 117

    (49) sentencia -> IF factor comparacion factor LLAVE_IZQ . programa LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (42) expression -> . expression MAS term
    (43) expression -> . expression MENOS term
    (44) expression -> . term
    (19) impresion -> . PARENT_IZQ expression PARENT_DER
    (20) impresion -> . PARENT_IZQ empty PARENT_DER
    (49) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (26) asignacion -> . ID ASIGNACION factor
    (27) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (28) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (21) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (22) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (23) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (24) companum -> . NUMERO comparacion NUMERO
    (25) compaid -> . ID comparacion ID
    (29) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (33) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (34) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (39) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (41) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (60) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (66) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (67) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (68) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (81) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (82) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (83) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (45) term -> . term MULTIPLICADOR factor
    (46) term -> . term DIVISOR factor
    (47) term -> . term MOD_DIVISION factor
    (48) term -> . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_IZQ      shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 24
    VAR             shift and go to state 25
    NUMERO          shift and go to state 27
    FOR             shift and go to state 28
    SWITCH          shift and go to state 29
    DELETE          shift and go to state 30
    FUNC            shift and go to state 31
    CADENA          shift and go to state 26

    factor                         shift and go to state 23
    programa                       shift and go to state 136
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    term                           shift and go to state 20

state 118

    (39) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ . CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ . CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER

    CORCHETE_DER    shift and go to state 137


state 119

    (33) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . ID
    (34) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . ID LLAVE_IZQ valores LLAVE_DER

    ID              shift and go to state 138


state 120

    (67) map -> ID ASIGNACION MAKE PARENT_IZQ MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    CORCHETE_IZQ    shift and go to state 139


state 121

    (68) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 140


state 122

    (23) boolcadena -> ID PUNTO ID PARENT_IZQ factor . PARENT_DER

    PARENT_DER      shift and go to state 141


state 123

    (80) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION . valor
    (78) valor -> . CADENA
    (79) valor -> . NUMERO

    CADENA          shift and go to state 79
    NUMERO          shift and go to state 80

    valor                          shift and go to state 142

state 124

    (27) asignacion -> VAR ID tipo_dato ASIGNACION factor .

    $end            reduce using rule 27 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    LLAVE_DER       reduce using rule 27 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    DEFAULT         reduce using rule 27 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    CASE            reduce using rule 27 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    RETURN          reduce using rule 27 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)


state 125

    (28) asignacion -> VAR ID COMA ID tipo_dato . ASIGNACION factor COMA factor

    ASIGNACION      shift and go to state 143


state 126

    (66) map -> VAR ID MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 144


state 127

    (29) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA . ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ID              shift and go to state 145


state 128

    (60) switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .

    $end            reduce using rule 60 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    LLAVE_DER       reduce using rule 60 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    DEFAULT         reduce using rule 60 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    CASE            reduce using rule 60 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    RETURN          reduce using rule 60 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)


state 129

    (62) cases -> case default .

    LLAVE_DER       reduce using rule 62 (cases -> case default .)


state 130

    (63) cases -> case cases .

    LLAVE_DER       reduce using rule 63 (cases -> case cases .)


state 131

    (65) default -> DEFAULT . DOS_PUNTOS programa

    DOS_PUNTOS      shift and go to state 146


state 132

    (64) case -> CASE factor . DOS_PUNTOS programa

    DOS_PUNTOS      shift and go to state 147


state 133

    (81) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor . PARENT_DER

    PARENT_DER      shift and go to state 148


state 134

    (85) argumentos -> ID tipo_dato .
    (86) argumentos -> ID tipo_dato . COMA argumentos

    PARENT_DER      reduce using rule 85 (argumentos -> ID tipo_dato .)
    COMA            shift and go to state 149


state 135

    (83) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER . tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER . tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (69) tipo_dato -> . INT
    (70) tipo_dato -> . STRING
    (71) tipo_dato -> . INT64
    (72) tipo_dato -> . FLOAT32
    (73) tipo_dato -> . FLOAT64
    (74) tipo_dato -> . INT32

    INT             shift and go to state 84
    STRING          shift and go to state 85
    INT64           shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    INT32           shift and go to state 89

    tipo_dato                      shift and go to state 150

state 136

    (49) sentencia -> IF factor comparacion factor LLAVE_IZQ programa . LLAVE_DER

    LLAVE_DER       shift and go to state 151


state 137

    (39) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER . ID COMA NUMERO PARENT_DER
    (40) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER . ID COMA NUMERO COMA NUMERO PARENT_DER

    ID              shift and go to state 152


state 138

    (33) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .
    (34) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID . LLAVE_IZQ valores LLAVE_DER

    $end            reduce using rule 33 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    LLAVE_DER       reduce using rule 33 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    DEFAULT         reduce using rule 33 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    CASE            reduce using rule 33 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    RETURN          reduce using rule 33 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    LLAVE_IZQ       shift and go to state 153


state 139

    (67) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (69) tipo_dato -> . INT
    (70) tipo_dato -> . STRING
    (71) tipo_dato -> . INT64
    (72) tipo_dato -> . FLOAT32
    (73) tipo_dato -> . FLOAT64
    (74) tipo_dato -> . INT32

    INT             shift and go to state 84
    STRING          shift and go to state 85
    INT64           shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    INT32           shift and go to state 89

    tipo_dato                      shift and go to state 154

state 140

    (68) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato LLAVE_IZQ valores LLAVE_DER
    (69) tipo_dato -> . INT
    (70) tipo_dato -> . STRING
    (71) tipo_dato -> . INT64
    (72) tipo_dato -> . FLOAT32
    (73) tipo_dato -> . FLOAT64
    (74) tipo_dato -> . INT32

    INT             shift and go to state 84
    STRING          shift and go to state 85
    INT64           shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    INT32           shift and go to state 89

    tipo_dato                      shift and go to state 155

state 141

    (23) boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .

    $end            reduce using rule 23 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)
    LLAVE_DER       reduce using rule 23 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)
    DEFAULT         reduce using rule 23 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)
    CASE            reduce using rule 23 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)
    RETURN          reduce using rule 23 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)


state 142

    (80) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .

    $end            reduce using rule 80 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    LLAVE_DER       reduce using rule 80 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    DEFAULT         reduce using rule 80 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    CASE            reduce using rule 80 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    RETURN          reduce using rule 80 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)


state 143

    (28) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION . factor COMA factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 156

state 144

    (66) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato LLAVE_IZQ valores LLAVE_DER
    (69) tipo_dato -> . INT
    (70) tipo_dato -> . STRING
    (71) tipo_dato -> . INT64
    (72) tipo_dato -> . FLOAT32
    (73) tipo_dato -> . FLOAT64
    (74) tipo_dato -> . INT32

    INT             shift and go to state 84
    STRING          shift and go to state 85
    INT64           shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    INT32           shift and go to state 89

    tipo_dato                      shift and go to state 157

state 145

    (29) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID . comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (50) comparacion -> . IGUALDAD
    (51) comparacion -> . MAYOR
    (52) comparacion -> . MENOR
    (53) comparacion -> . MAYOR_IGU
    (54) comparacion -> . MENOR_IGU
    (55) comparacion -> . DESIGUALDAD

    IGUALDAD        shift and go to state 48
    MAYOR           shift and go to state 49
    MENOR           shift and go to state 50
    MAYOR_IGU       shift and go to state 51
    MENOR_IGU       shift and go to state 52
    DESIGUALDAD     shift and go to state 53

    comparacion                    shift and go to state 158

state 146

    (65) default -> DEFAULT DOS_PUNTOS . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (42) expression -> . expression MAS term
    (43) expression -> . expression MENOS term
    (44) expression -> . term
    (19) impresion -> . PARENT_IZQ expression PARENT_DER
    (20) impresion -> . PARENT_IZQ empty PARENT_DER
    (49) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (26) asignacion -> . ID ASIGNACION factor
    (27) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (28) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (21) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (22) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (23) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (24) companum -> . NUMERO comparacion NUMERO
    (25) compaid -> . ID comparacion ID
    (29) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (33) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (34) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (39) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (41) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (60) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (66) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (67) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (68) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (81) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (82) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (83) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (45) term -> . term MULTIPLICADOR factor
    (46) term -> . term DIVISOR factor
    (47) term -> . term MOD_DIVISION factor
    (48) term -> . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_IZQ      shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 24
    VAR             shift and go to state 25
    NUMERO          shift and go to state 27
    FOR             shift and go to state 28
    SWITCH          shift and go to state 29
    DELETE          shift and go to state 30
    FUNC            shift and go to state 31
    CADENA          shift and go to state 26

    programa                       shift and go to state 159
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 23

state 147

    (64) case -> CASE factor DOS_PUNTOS . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (42) expression -> . expression MAS term
    (43) expression -> . expression MENOS term
    (44) expression -> . term
    (19) impresion -> . PARENT_IZQ expression PARENT_DER
    (20) impresion -> . PARENT_IZQ empty PARENT_DER
    (49) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (26) asignacion -> . ID ASIGNACION factor
    (27) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (28) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (21) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (22) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (23) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (24) companum -> . NUMERO comparacion NUMERO
    (25) compaid -> . ID comparacion ID
    (29) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (33) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (34) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (39) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (41) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (60) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (66) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (67) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (68) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (81) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (82) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (83) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (45) term -> . term MULTIPLICADOR factor
    (46) term -> . term DIVISOR factor
    (47) term -> . term MOD_DIVISION factor
    (48) term -> . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_IZQ      shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 24
    VAR             shift and go to state 25
    NUMERO          shift and go to state 27
    FOR             shift and go to state 28
    SWITCH          shift and go to state 29
    DELETE          shift and go to state 30
    FUNC            shift and go to state 31
    CADENA          shift and go to state 26

    factor                         shift and go to state 23
    programa                       shift and go to state 160
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    term                           shift and go to state 20

state 148

    (81) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .

    $end            reduce using rule 81 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    LLAVE_DER       reduce using rule 81 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    DEFAULT         reduce using rule 81 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    CASE            reduce using rule 81 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    RETURN          reduce using rule 81 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)


state 149

    (86) argumentos -> ID tipo_dato COMA . argumentos
    (85) argumentos -> . ID tipo_dato
    (86) argumentos -> . ID tipo_dato COMA argumentos

    ID              shift and go to state 115

    argumentos                     shift and go to state 161

state 150

    (83) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato . LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato . LLAVE_IZQ programa RETURN ID LLAVE_DER

    LLAVE_IZQ       shift and go to state 162


state 151

    (49) sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 49 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 49 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 49 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 49 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 49 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)


state 152

    (39) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID . COMA NUMERO PARENT_DER
    (40) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID . COMA NUMERO COMA NUMERO PARENT_DER

    COMA            shift and go to state 163


state 153

    (34) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ . valores LLAVE_DER
    (37) valores -> . factor
    (38) valores -> . factor COMA valores
    (75) valores -> . clave_valor
    (76) valores -> . clave_valor COMA valores
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER
    (77) clave_valor -> . valor DOS_PUNTOS valor
    (78) valor -> . CADENA
    (79) valor -> . NUMERO

    NUMERO          shift and go to state 167
    ID              shift and go to state 41
    CADENA          shift and go to state 168
    PARENT_IZQ      shift and go to state 37

    valores                        shift and go to state 164
    factor                         shift and go to state 165
    clave_valor                    shift and go to state 166
    valor                          shift and go to state 169

state 154

    (67) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato PARENT_DER

    CORCHETE_DER    shift and go to state 170


state 155

    (68) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . LLAVE_IZQ valores LLAVE_DER

    LLAVE_IZQ       shift and go to state 171


state 156

    (28) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor . COMA factor

    COMA            shift and go to state 172


state 157

    (66) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . LLAVE_IZQ valores LLAVE_DER

    LLAVE_IZQ       shift and go to state 173


state 158

    (29) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion . factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 174

state 159

    (65) default -> DEFAULT DOS_PUNTOS programa .

    LLAVE_DER       reduce using rule 65 (default -> DEFAULT DOS_PUNTOS programa .)


state 160

    (64) case -> CASE factor DOS_PUNTOS programa .

    DEFAULT         reduce using rule 64 (case -> CASE factor DOS_PUNTOS programa .)
    CASE            reduce using rule 64 (case -> CASE factor DOS_PUNTOS programa .)
    LLAVE_DER       reduce using rule 64 (case -> CASE factor DOS_PUNTOS programa .)


state 161

    (86) argumentos -> ID tipo_dato COMA argumentos .

    PARENT_DER      reduce using rule 86 (argumentos -> ID tipo_dato COMA argumentos .)


state 162

    (83) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ . programa LLAVE_DER
    (84) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ . programa RETURN ID LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (42) expression -> . expression MAS term
    (43) expression -> . expression MENOS term
    (44) expression -> . term
    (19) impresion -> . PARENT_IZQ expression PARENT_DER
    (20) impresion -> . PARENT_IZQ empty PARENT_DER
    (49) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (26) asignacion -> . ID ASIGNACION factor
    (27) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (28) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (21) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (22) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (23) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (24) companum -> . NUMERO comparacion NUMERO
    (25) compaid -> . ID comparacion ID
    (29) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (33) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (34) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (39) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (41) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (60) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (66) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (67) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (68) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (81) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (82) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (83) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (45) term -> . term MULTIPLICADOR factor
    (46) term -> . term DIVISOR factor
    (47) term -> . term MOD_DIVISION factor
    (48) term -> . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_IZQ      shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 24
    VAR             shift and go to state 25
    NUMERO          shift and go to state 27
    FOR             shift and go to state 28
    SWITCH          shift and go to state 29
    DELETE          shift and go to state 30
    FUNC            shift and go to state 31
    CADENA          shift and go to state 26

    programa                       shift and go to state 175
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    term                           shift and go to state 20
    factor                         shift and go to state 23

state 163

    (39) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA . NUMERO PARENT_DER
    (40) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA . NUMERO COMA NUMERO PARENT_DER

    NUMERO          shift and go to state 176


state 164

    (34) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 177


state 165

    (37) valores -> factor .
    (38) valores -> factor . COMA valores

    LLAVE_DER       reduce using rule 37 (valores -> factor .)
    COMA            shift and go to state 178


state 166

    (75) valores -> clave_valor .
    (76) valores -> clave_valor . COMA valores

    LLAVE_DER       reduce using rule 75 (valores -> clave_valor .)
    COMA            shift and go to state 179


state 167

    (56) factor -> NUMERO .
    (79) valor -> NUMERO .

    COMA            reduce using rule 56 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 56 (factor -> NUMERO .)
    DOS_PUNTOS      reduce using rule 79 (valor -> NUMERO .)


state 168

    (58) factor -> CADENA .
    (78) valor -> CADENA .

    COMA            reduce using rule 58 (factor -> CADENA .)
    LLAVE_DER       reduce using rule 58 (factor -> CADENA .)
    DOS_PUNTOS      reduce using rule 78 (valor -> CADENA .)


state 169

    (77) clave_valor -> valor . DOS_PUNTOS valor

    DOS_PUNTOS      shift and go to state 180


state 170

    (67) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato PARENT_DER
    (69) tipo_dato -> . INT
    (70) tipo_dato -> . STRING
    (71) tipo_dato -> . INT64
    (72) tipo_dato -> . FLOAT32
    (73) tipo_dato -> . FLOAT64
    (74) tipo_dato -> . INT32

    INT             shift and go to state 84
    STRING          shift and go to state 85
    INT64           shift and go to state 86
    FLOAT32         shift and go to state 87
    FLOAT64         shift and go to state 88
    INT32           shift and go to state 89

    tipo_dato                      shift and go to state 181

state 171

    (68) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ . valores LLAVE_DER
    (37) valores -> . factor
    (38) valores -> . factor COMA valores
    (75) valores -> . clave_valor
    (76) valores -> . clave_valor COMA valores
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER
    (77) clave_valor -> . valor DOS_PUNTOS valor
    (78) valor -> . CADENA
    (79) valor -> . NUMERO

    NUMERO          shift and go to state 167
    ID              shift and go to state 41
    CADENA          shift and go to state 168
    PARENT_IZQ      shift and go to state 37

    valores                        shift and go to state 182
    factor                         shift and go to state 165
    clave_valor                    shift and go to state 166
    valor                          shift and go to state 169

state 172

    (28) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 40
    ID              shift and go to state 41
    CADENA          shift and go to state 26
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 183

state 173

    (66) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ . valores LLAVE_DER
    (37) valores -> . factor
    (38) valores -> . factor COMA valores
    (75) valores -> . clave_valor
    (76) valores -> . clave_valor COMA valores
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER
    (77) clave_valor -> . valor DOS_PUNTOS valor
    (78) valor -> . CADENA
    (79) valor -> . NUMERO

    NUMERO          shift and go to state 167
    ID              shift and go to state 41
    CADENA          shift and go to state 168
    PARENT_IZQ      shift and go to state 37

    valores                        shift and go to state 184
    factor                         shift and go to state 165
    clave_valor                    shift and go to state 166
    valor                          shift and go to state 169

state 174

    (29) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor . FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    FIN_SENTENCIA   shift and go to state 185


state 175

    (83) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa . LLAVE_DER
    (84) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa . RETURN ID LLAVE_DER

    LLAVE_DER       shift and go to state 186
    RETURN          shift and go to state 187


state 176

    (39) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO . PARENT_DER
    (40) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO . COMA NUMERO PARENT_DER

    PARENT_DER      shift and go to state 189
    COMA            shift and go to state 188


state 177

    (34) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 34 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 34 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 34 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 34 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 34 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)


state 178

    (38) valores -> factor COMA . valores
    (37) valores -> . factor
    (38) valores -> . factor COMA valores
    (75) valores -> . clave_valor
    (76) valores -> . clave_valor COMA valores
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER
    (77) clave_valor -> . valor DOS_PUNTOS valor
    (78) valor -> . CADENA
    (79) valor -> . NUMERO

    NUMERO          shift and go to state 167
    ID              shift and go to state 41
    CADENA          shift and go to state 168
    PARENT_IZQ      shift and go to state 37

    factor                         shift and go to state 165
    valores                        shift and go to state 190
    clave_valor                    shift and go to state 166
    valor                          shift and go to state 169

state 179

    (76) valores -> clave_valor COMA . valores
    (37) valores -> . factor
    (38) valores -> . factor COMA valores
    (75) valores -> . clave_valor
    (76) valores -> . clave_valor COMA valores
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER
    (77) clave_valor -> . valor DOS_PUNTOS valor
    (78) valor -> . CADENA
    (79) valor -> . NUMERO

    NUMERO          shift and go to state 167
    ID              shift and go to state 41
    CADENA          shift and go to state 168
    PARENT_IZQ      shift and go to state 37

    clave_valor                    shift and go to state 166
    valores                        shift and go to state 191
    factor                         shift and go to state 165
    valor                          shift and go to state 169

state 180

    (77) clave_valor -> valor DOS_PUNTOS . valor
    (78) valor -> . CADENA
    (79) valor -> . NUMERO

    CADENA          shift and go to state 79
    NUMERO          shift and go to state 80

    valor                          shift and go to state 192

state 181

    (67) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . PARENT_DER

    PARENT_DER      shift and go to state 193


state 182

    (68) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 194


state 183

    (28) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .

    $end            reduce using rule 28 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    LLAVE_DER       reduce using rule 28 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    DEFAULT         reduce using rule 28 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    CASE            reduce using rule 28 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    RETURN          reduce using rule 28 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)


state 184

    (66) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 195


state 185

    (29) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA . incremento LLAVE_IZQ programa LLAVE_DER
    (30) incremento -> . ID INCREMENTO
    (31) incremento -> . ID ASIGNACION ID
    (32) incremento -> . ID DECREMENTO

    ID              shift and go to state 196

    incremento                     shift and go to state 197

state 186

    (83) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 83 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 83 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 83 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 83 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 83 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)


state 187

    (84) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN . ID LLAVE_DER

    ID              shift and go to state 198


state 188

    (40) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 199


state 189

    (39) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .

    $end            reduce using rule 39 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 39 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 39 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 39 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 39 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)


state 190

    (38) valores -> factor COMA valores .

    LLAVE_DER       reduce using rule 38 (valores -> factor COMA valores .)


state 191

    (76) valores -> clave_valor COMA valores .

    LLAVE_DER       reduce using rule 76 (valores -> clave_valor COMA valores .)


state 192

    (77) clave_valor -> valor DOS_PUNTOS valor .

    COMA            reduce using rule 77 (clave_valor -> valor DOS_PUNTOS valor .)
    LLAVE_DER       reduce using rule 77 (clave_valor -> valor DOS_PUNTOS valor .)


state 193

    (67) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .

    $end            reduce using rule 67 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    LLAVE_DER       reduce using rule 67 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    DEFAULT         reduce using rule 67 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    CASE            reduce using rule 67 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    RETURN          reduce using rule 67 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)


state 194

    (68) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 68 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 68 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 68 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 68 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 68 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)


state 195

    (66) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 66 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 66 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 66 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 66 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 66 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)


state 196

    (30) incremento -> ID . INCREMENTO
    (31) incremento -> ID . ASIGNACION ID
    (32) incremento -> ID . DECREMENTO

    INCREMENTO      shift and go to state 200
    ASIGNACION      shift and go to state 201
    DECREMENTO      shift and go to state 202


state 197

    (29) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento . LLAVE_IZQ programa LLAVE_DER

    LLAVE_IZQ       shift and go to state 203


state 198

    (84) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID . LLAVE_DER

    LLAVE_DER       shift and go to state 204


state 199

    (40) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 205


state 200

    (30) incremento -> ID INCREMENTO .

    LLAVE_IZQ       reduce using rule 30 (incremento -> ID INCREMENTO .)


state 201

    (31) incremento -> ID ASIGNACION . ID

    ID              shift and go to state 206


state 202

    (32) incremento -> ID DECREMENTO .

    LLAVE_IZQ       reduce using rule 32 (incremento -> ID DECREMENTO .)


state 203

    (29) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ . programa LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (42) expression -> . expression MAS term
    (43) expression -> . expression MENOS term
    (44) expression -> . term
    (19) impresion -> . PARENT_IZQ expression PARENT_DER
    (20) impresion -> . PARENT_IZQ empty PARENT_DER
    (49) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (26) asignacion -> . ID ASIGNACION factor
    (27) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (28) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (21) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (22) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (23) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (24) companum -> . NUMERO comparacion NUMERO
    (25) compaid -> . ID comparacion ID
    (29) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (33) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (34) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (39) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (40) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (41) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (60) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (66) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (67) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (68) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (81) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (82) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (83) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (84) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (45) term -> . term MULTIPLICADOR factor
    (46) term -> . term DIVISOR factor
    (47) term -> . term MOD_DIVISION factor
    (48) term -> . factor
    (56) factor -> . NUMERO
    (57) factor -> . ID
    (58) factor -> . CADENA
    (59) factor -> . PARENT_IZQ expression PARENT_DER

    PARENT_IZQ      shift and go to state 21
    IF              shift and go to state 22
    ID              shift and go to state 24
    VAR             shift and go to state 25
    NUMERO          shift and go to state 27
    FOR             shift and go to state 28
    SWITCH          shift and go to state 29
    DELETE          shift and go to state 30
    FUNC            shift and go to state 31
    CADENA          shift and go to state 26

    factor                         shift and go to state 23
    programa                       shift and go to state 207
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    term                           shift and go to state 20

state 204

    (84) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .

    $end            reduce using rule 84 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    LLAVE_DER       reduce using rule 84 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    DEFAULT         reduce using rule 84 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    CASE            reduce using rule 84 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    RETURN          reduce using rule 84 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)


state 205

    (40) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .

    $end            reduce using rule 40 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 40 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 40 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 40 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 40 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)


state 206

    (31) incremento -> ID ASIGNACION ID .

    LLAVE_IZQ       reduce using rule 31 (incremento -> ID ASIGNACION ID .)


state 207

    (29) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa . LLAVE_DER

    LLAVE_DER       shift and go to state 208


state 208

    (29) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 29 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 29 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 29 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 29 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 29 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 66 resolved using rule (impresion -> PARENT_IZQ expression PARENT_DER)
WARNING: rejected rule (factor -> PARENT_IZQ expression PARENT_DER) in state 66
WARNING: reduce/reduce conflict in state 103 resolved using rule (longvariable -> ID PARENT_IZQ ID PARENT_DER)
WARNING: rejected rule (capslice -> ID PARENT_IZQ ID PARENT_DER) in state 103
WARNING: Rule (capslice -> ID PARENT_IZQ ID PARENT_DER) is never reduced
