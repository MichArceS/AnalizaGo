Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    BREAK
    COMILLA
    COMMENT_BLOQUE_DER
    COMMENT_BLOQUE_IZQ
    COMMENT_LINEA
    CONST
    CONTAINS
    CONTINUE
    DEFER
    DOBLE_COMILLA
    ELSE
    ESPACIADO
    FALLTHROUGH
    FALSE
    GO
    IGUAL
    IMPORT
    INTERFACE
    LEN
    PACKAGE
    PIPE
    RANGE
    SELECT
    SPLIT
    STRINGS
    STRUCT
    TRUE
    TYPE
    VACIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> expression
Rule 2     programa -> impresion
Rule 3     programa -> sentencia
Rule 4     programa -> asignacion
Rule 5     programa -> longvariable
Rule 6     programa -> boolcadena
Rule 7     programa -> companum
Rule 8     programa -> compaid
Rule 9     programa -> sentenciafor
Rule 10    programa -> arreglo
Rule 11    programa -> slice
Rule 12    programa -> capslice
Rule 13    programa -> switch
Rule 14    programa -> map
Rule 15    programa -> asignar_valor_map
Rule 16    programa -> eliminar_valor_map
Rule 17    programa -> obtener_valor_map
Rule 18    programa -> funcion
Rule 19    programa -> cadenabool
Rule 20    programa -> enterocadena
Rule 21    programa -> cadenaentero
Rule 22    programa -> flotantecadena
Rule 23    programa -> cadenaflotante
Rule 24    programa -> seman_operacion
Rule 25    programa -> incremento
Rule 26    programa -> errorflotantecadena
Rule 27    programa -> errorcadenaflotante
Rule 28    programa -> error_arr
Rule 29    impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
Rule 30    impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
Rule 31    impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
Rule 32    impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
Rule 33    impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
Rule 34    longvariable -> ID PARENT_IZQ CADENA PARENT_DER
Rule 35    longvariable -> ID PARENT_IZQ ID PARENT_DER
Rule 36    companum -> NUMERO comparacion NUMERO
Rule 37    compaid -> ID comparacion ID
Rule 38    asignacion -> ID ASIGNACION factor
Rule 39    asignacion -> VAR ID tipo_dato ASIGNACION factor
Rule 40    asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
Rule 41    sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
Rule 42    incremento -> ID INCREMENTO
Rule 43    incremento -> ID ASIGNACION ID
Rule 44    incremento -> ID DECREMENTO
Rule 45    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
Rule 46    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
Rule 47    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
Rule 48    error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER
Rule 49    noenteros -> ID
Rule 50    noenteros -> CADENA
Rule 51    noenteros -> FLOAT
Rule 52    noenteros -> noenteros COMA noenteros
Rule 53    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
Rule 54    cantidad -> NUMERO
Rule 55    cantidad -> ARRPUNTOS
Rule 56    valores -> factor
Rule 57    valores -> factor COMA valores
Rule 58    enteros -> NUMERO
Rule 59    enteros -> NUMERO COMA enteros
Rule 60    slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
Rule 61    slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
Rule 62    capslice -> ID PARENT_IZQ ID PARENT_DER
Rule 63    expression -> expression MAS term
Rule 64    expression -> expression MENOS term
Rule 65    expression -> term
Rule 66    term -> term MULTIPLICADOR factor
Rule 67    term -> term DIVISOR factor
Rule 68    term -> term MOD_DIVISION factor
Rule 69    term -> factor
Rule 70    sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
Rule 71    comparacion -> IGUALDAD
Rule 72    comparacion -> MAYOR
Rule 73    comparacion -> MENOR
Rule 74    comparacion -> MAYOR_IGU
Rule 75    comparacion -> MENOR_IGU
Rule 76    comparacion -> DESIGUALDAD
Rule 77    factor -> NUMERO
Rule 78    factor -> ID
Rule 79    factor -> CADENA
Rule 80    factor -> FLOAT
Rule 81    factor -> PARENT_IZQ expression PARENT_DER
Rule 82    switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER
Rule 83    cases -> case
Rule 84    cases -> case default
Rule 85    cases -> case cases
Rule 86    case -> CASE factor DOS_PUNTOS programa
Rule 87    default -> DEFAULT DOS_PUNTOS programa
Rule 88    map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
Rule 89    map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
Rule 90    map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
Rule 91    tipo_dato -> INT
Rule 92    tipo_dato -> STRING
Rule 93    tipo_dato -> INT64
Rule 94    tipo_dato -> FLOAT32
Rule 95    tipo_dato -> FLOAT64
Rule 96    tipo_dato -> INT32
Rule 97    valores -> clave_valor
Rule 98    valores -> clave_valor COMA valores
Rule 99    clave_valor -> valor DOS_PUNTOS valor
Rule 100   valor -> CADENA
Rule 101   valor -> NUMERO
Rule 102   asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
Rule 103   eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER
Rule 104   obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER
Rule 105   funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
Rule 106   funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
Rule 107   funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
Rule 108   argumentos -> ID tipo_dato
Rule 109   argumentos -> ID tipo_dato COMA argumentos
Rule 110   empty -> <empty>
Rule 111   seman_operacion -> NUMERO MAS NUMERO
Rule 112   seman_operacion -> NUMERO MENOS NUMERO
Rule 113   seman_operacion -> NUMERO MULTIPLICADOR NUMERO
Rule 114   seman_operacion -> NUMERO DIVISOR NUMERO
Rule 115   seman_operacion -> NUMERO MOD_DIVISION NUMERO
Rule 116   seman_operacion -> FLOAT MAS NUMERO
Rule 117   seman_operacion -> FLOAT MENOS NUMERO
Rule 118   seman_operacion -> FLOAT MULTIPLICADOR NUMERO
Rule 119   seman_operacion -> FLOAT DIVISOR NUMERO
Rule 120   seman_operacion -> NUMERO MAS FLOAT
Rule 121   seman_operacion -> NUMERO MENOS FLOAT
Rule 122   seman_operacion -> NUMERO MULTIPLICADOR FLOAT
Rule 123   seman_operacion -> NUMERO DIVISOR FLOAT
Rule 124   seman_operacion -> FLOAT MAS FLOAT
Rule 125   seman_operacion -> FLOAT MENOS FLOAT
Rule 126   seman_operacion -> FLOAT MULTIPLICADOR FLOAT
Rule 127   seman_operacion -> FLOAT DIVISOR FLOAT
Rule 128   boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
Rule 129   cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
Rule 130   flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
Rule 131   errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
Rule 132   cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
Rule 133   errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
Rule 134   enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
Rule 135   cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER

Terminals, with rules where they appear

AMPERSAND            : 
ARRPUNTOS            : 55
ASIGNACION           : 38 39 40 41 43 45 46 47 48 53 60 61 89 90 102
BOOLEAN              : 128
BREAK                : 
CADENA               : 29 31 33 34 50 79 100 129 130 132 133 135
CASE                 : 86
COMA                 : 29 31 40 40 52 57 59 60 61 61 98 103 109 130 130 131 132 134 135 135
COMILLA              : 
COMMENT_BLOQUE_DER   : 
COMMENT_BLOQUE_IZQ   : 
COMMENT_LINEA        : 
CONST                : 
CONTAINS             : 
CONTINUE             : 
CORCHETE_DER         : 45 46 47 48 53 60 61 88 89 90 102 104
CORCHETE_IZQ         : 45 46 47 48 53 60 61 88 89 90 102 104
DECREMENTO           : 44
DEFAULT              : 87
DEFER                : 
DELETE               : 103
DESIGUALDAD          : 76
DIVISOR              : 67 114 119 123 127
DOBLE_COMILLA        : 
DOS_PUNTOS           : 86 87 99
ELSE                 : 
ESPACIADO            : 
FALLTHROUGH          : 
FALSE                : 
FIN_SENTENCIA        : 41 41
FLOAT                : 51 80 116 117 118 119 120 121 122 123 124 124 125 125 126 126 127 127 130 131
FLOAT32              : 94
FLOAT64              : 95
FMT                  : 29 30 31 32 33
FOR                  : 41
FORMATBOOL           : 128
FORMATFLOAT          : 130 131 133
FORMATINT            : 134
FUNC                 : 105 106 107
GO                   : 
ID                   : 34 35 35 37 37 38 39 40 40 41 41 42 43 43 44 45 46 47 48 49 53 60 61 62 62 78 82 88 89 90 102 103 104 105 106 106 107 107 108 109
IF                   : 70
IGUAL                : 
IGUALDAD             : 71
IMPORT               : 
INCREMENTO           : 42
INT                  : 47 48 91
INT32                : 96
INT64                : 93
INTERFACE            : 
LEN                  : 
LLAVE_DER            : 41 46 47 48 70 82 88 90 105 106 107
LLAVE_IZQ            : 41 46 47 48 70 82 88 90 105 106 107
MAKE                 : 60 61 89
MAP                  : 88 89 90
MAS                  : 63 111 116 120 124
MAYOR                : 72
MAYOR_IGU            : 74
MENOR                : 73
MENOR_IGU            : 75
MENOS                : 64 112 117 121 125
MOD_DIVISION         : 68 115
MULTIPLICADOR        : 66 113 118 122 126
NUMERO               : 29 31 36 36 54 58 59 60 61 61 77 101 111 111 112 112 113 113 114 114 115 115 116 117 118 119 120 121 122 123 130 131 132 134 134 135 135
PACKAGE              : 
PARENT_DER           : 29 30 31 32 33 34 35 60 61 62 81 89 103 105 106 107 128 129 130 131 132 133 134 135
PARENT_IZQ           : 29 30 31 32 33 34 35 60 61 62 81 89 103 105 106 107 128 129 130 131 132 133 134 135
PARSEBOOL            : 129
PARSEFLOAT           : 132
PARSEINT             : 135
PIPE                 : 
PRINTF               : 29 30
PRINTLN              : 31 32 33
PUNTO                : 29 30 31 32 33 128 129 130 131 132 133 134 135
RANGE                : 
RETURN               : 106 107
SELECT               : 
SPLIT                : 
STRCONV              : 128 129 130 131 132 133 134 135
STRING               : 92
STRINGS              : 
STRUCT               : 
SWITCH               : 82
TRUE                 : 
TYPE                 : 
VACIO                : 
VAR                  : 39 40 88
error                : 

Nonterminals, with rules where they appear

argumentos           : 105 106 107 109
arreglo              : 10
asignacion           : 4
asignar_valor_map    : 15
boolcadena           : 6
cadenabool           : 19
cadenaentero         : 21
cadenaflotante       : 23
cantidad             : 45 46 47 48 53
capslice             : 12
case                 : 83 84 85
cases                : 82 85
clave_valor          : 97 98
compaid              : 8
companum             : 7
comparacion          : 36 37 41 70
default              : 84
eliminar_valor_map   : 16
empty                : 30 32
enterocadena         : 20
enteros              : 47 59
error_arr            : 28
errorcadenaflotante  : 27
errorflotantecadena  : 26
expression           : 1 63 64 81
factor               : 38 39 40 40 41 41 56 57 66 67 68 69 70 70 86
flotantecadena       : 22
funcion              : 18
impresion            : 2
incremento           : 25 41
longvariable         : 5
map                  : 14
noenteros            : 48 52 52
obtener_valor_map    : 17
programa             : 41 70 86 87 105 106 0
seman_operacion      : 24
sentencia            : 3
sentenciafor         : 9
slice                : 11
switch               : 13
term                 : 63 64 65 66 67 68
tipo_dato            : 39 40 45 46 60 61 88 88 89 89 90 90 105 106 107 108 109
valor                : 99 99 102 102 103 104
valores              : 46 57 88 90 98

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (28) programa -> . error_arr
    (63) expression -> . expression MAS term
    (64) expression -> . expression MENOS term
    (65) expression -> . term
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (33) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (70) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (38) asignacion -> . ID ASIGNACION factor
    (39) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (40) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (34) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (35) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (128) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (36) companum -> . NUMERO comparacion NUMERO
    (37) compaid -> . ID comparacion ID
    (41) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (60) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (62) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (82) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (88) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (89) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (90) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (102) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (103) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (104) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (105) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (129) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (134) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (135) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (130) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (132) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (111) seman_operacion -> . NUMERO MAS NUMERO
    (112) seman_operacion -> . NUMERO MENOS NUMERO
    (113) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (114) seman_operacion -> . NUMERO DIVISOR NUMERO
    (115) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (116) seman_operacion -> . FLOAT MAS NUMERO
    (117) seman_operacion -> . FLOAT MENOS NUMERO
    (118) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (119) seman_operacion -> . FLOAT DIVISOR NUMERO
    (120) seman_operacion -> . NUMERO MAS FLOAT
    (121) seman_operacion -> . NUMERO MENOS FLOAT
    (122) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (123) seman_operacion -> . NUMERO DIVISOR FLOAT
    (124) seman_operacion -> . FLOAT MAS FLOAT
    (125) seman_operacion -> . FLOAT MENOS FLOAT
    (126) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (127) seman_operacion -> . FLOAT DIVISOR FLOAT
    (42) incremento -> . ID INCREMENTO
    (43) incremento -> . ID ASIGNACION ID
    (44) incremento -> . ID DECREMENTO
    (131) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (133) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (48) error_arr -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER
    (66) term -> . term MULTIPLICADOR factor
    (67) term -> . term DIVISOR factor
    (68) term -> . term MOD_DIVISION factor
    (69) term -> . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 31
    IF              shift and go to state 35
    ID              shift and go to state 37
    VAR             shift and go to state 38
    STRCONV         shift and go to state 39
    NUMERO          shift and go to state 34
    FOR             shift and go to state 40
    SWITCH          shift and go to state 41
    DELETE          shift and go to state 42
    FUNC            shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 33
    PARENT_IZQ      shift and go to state 32

    programa                       shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    incremento                     shift and go to state 26
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    error_arr                      shift and go to state 29
    term                           shift and go to state 30
    factor                         shift and go to state 36

state 1

    (0) S' -> programa .



state 2

    (1) programa -> expression .
    (63) expression -> expression . MAS term
    (64) expression -> expression . MENOS term

    $end            reduce using rule 1 (programa -> expression .)
    LLAVE_DER       reduce using rule 1 (programa -> expression .)
    DEFAULT         reduce using rule 1 (programa -> expression .)
    CASE            reduce using rule 1 (programa -> expression .)
    RETURN          reduce using rule 1 (programa -> expression .)
    MAS             shift and go to state 45
    MENOS           shift and go to state 46


state 3

    (2) programa -> impresion .

    $end            reduce using rule 2 (programa -> impresion .)
    LLAVE_DER       reduce using rule 2 (programa -> impresion .)
    DEFAULT         reduce using rule 2 (programa -> impresion .)
    CASE            reduce using rule 2 (programa -> impresion .)
    RETURN          reduce using rule 2 (programa -> impresion .)


state 4

    (3) programa -> sentencia .

    $end            reduce using rule 3 (programa -> sentencia .)
    LLAVE_DER       reduce using rule 3 (programa -> sentencia .)
    DEFAULT         reduce using rule 3 (programa -> sentencia .)
    CASE            reduce using rule 3 (programa -> sentencia .)
    RETURN          reduce using rule 3 (programa -> sentencia .)


state 5

    (4) programa -> asignacion .

    $end            reduce using rule 4 (programa -> asignacion .)
    LLAVE_DER       reduce using rule 4 (programa -> asignacion .)
    DEFAULT         reduce using rule 4 (programa -> asignacion .)
    CASE            reduce using rule 4 (programa -> asignacion .)
    RETURN          reduce using rule 4 (programa -> asignacion .)


state 6

    (5) programa -> longvariable .

    $end            reduce using rule 5 (programa -> longvariable .)
    LLAVE_DER       reduce using rule 5 (programa -> longvariable .)
    DEFAULT         reduce using rule 5 (programa -> longvariable .)
    CASE            reduce using rule 5 (programa -> longvariable .)
    RETURN          reduce using rule 5 (programa -> longvariable .)


state 7

    (6) programa -> boolcadena .

    $end            reduce using rule 6 (programa -> boolcadena .)
    LLAVE_DER       reduce using rule 6 (programa -> boolcadena .)
    DEFAULT         reduce using rule 6 (programa -> boolcadena .)
    CASE            reduce using rule 6 (programa -> boolcadena .)
    RETURN          reduce using rule 6 (programa -> boolcadena .)


state 8

    (7) programa -> companum .

    $end            reduce using rule 7 (programa -> companum .)
    LLAVE_DER       reduce using rule 7 (programa -> companum .)
    DEFAULT         reduce using rule 7 (programa -> companum .)
    CASE            reduce using rule 7 (programa -> companum .)
    RETURN          reduce using rule 7 (programa -> companum .)


state 9

    (8) programa -> compaid .

    $end            reduce using rule 8 (programa -> compaid .)
    LLAVE_DER       reduce using rule 8 (programa -> compaid .)
    DEFAULT         reduce using rule 8 (programa -> compaid .)
    CASE            reduce using rule 8 (programa -> compaid .)
    RETURN          reduce using rule 8 (programa -> compaid .)


state 10

    (9) programa -> sentenciafor .

    $end            reduce using rule 9 (programa -> sentenciafor .)
    LLAVE_DER       reduce using rule 9 (programa -> sentenciafor .)
    DEFAULT         reduce using rule 9 (programa -> sentenciafor .)
    CASE            reduce using rule 9 (programa -> sentenciafor .)
    RETURN          reduce using rule 9 (programa -> sentenciafor .)


state 11

    (10) programa -> arreglo .

    $end            reduce using rule 10 (programa -> arreglo .)
    LLAVE_DER       reduce using rule 10 (programa -> arreglo .)
    DEFAULT         reduce using rule 10 (programa -> arreglo .)
    CASE            reduce using rule 10 (programa -> arreglo .)
    RETURN          reduce using rule 10 (programa -> arreglo .)


state 12

    (11) programa -> slice .

    $end            reduce using rule 11 (programa -> slice .)
    LLAVE_DER       reduce using rule 11 (programa -> slice .)
    DEFAULT         reduce using rule 11 (programa -> slice .)
    CASE            reduce using rule 11 (programa -> slice .)
    RETURN          reduce using rule 11 (programa -> slice .)


state 13

    (12) programa -> capslice .

    $end            reduce using rule 12 (programa -> capslice .)
    LLAVE_DER       reduce using rule 12 (programa -> capslice .)
    DEFAULT         reduce using rule 12 (programa -> capslice .)
    CASE            reduce using rule 12 (programa -> capslice .)
    RETURN          reduce using rule 12 (programa -> capslice .)


state 14

    (13) programa -> switch .

    $end            reduce using rule 13 (programa -> switch .)
    LLAVE_DER       reduce using rule 13 (programa -> switch .)
    DEFAULT         reduce using rule 13 (programa -> switch .)
    CASE            reduce using rule 13 (programa -> switch .)
    RETURN          reduce using rule 13 (programa -> switch .)


state 15

    (14) programa -> map .

    $end            reduce using rule 14 (programa -> map .)
    LLAVE_DER       reduce using rule 14 (programa -> map .)
    DEFAULT         reduce using rule 14 (programa -> map .)
    CASE            reduce using rule 14 (programa -> map .)
    RETURN          reduce using rule 14 (programa -> map .)


state 16

    (15) programa -> asignar_valor_map .

    $end            reduce using rule 15 (programa -> asignar_valor_map .)
    LLAVE_DER       reduce using rule 15 (programa -> asignar_valor_map .)
    DEFAULT         reduce using rule 15 (programa -> asignar_valor_map .)
    CASE            reduce using rule 15 (programa -> asignar_valor_map .)
    RETURN          reduce using rule 15 (programa -> asignar_valor_map .)


state 17

    (16) programa -> eliminar_valor_map .

    $end            reduce using rule 16 (programa -> eliminar_valor_map .)
    LLAVE_DER       reduce using rule 16 (programa -> eliminar_valor_map .)
    DEFAULT         reduce using rule 16 (programa -> eliminar_valor_map .)
    CASE            reduce using rule 16 (programa -> eliminar_valor_map .)
    RETURN          reduce using rule 16 (programa -> eliminar_valor_map .)


state 18

    (17) programa -> obtener_valor_map .

    $end            reduce using rule 17 (programa -> obtener_valor_map .)
    LLAVE_DER       reduce using rule 17 (programa -> obtener_valor_map .)
    DEFAULT         reduce using rule 17 (programa -> obtener_valor_map .)
    CASE            reduce using rule 17 (programa -> obtener_valor_map .)
    RETURN          reduce using rule 17 (programa -> obtener_valor_map .)


state 19

    (18) programa -> funcion .

    $end            reduce using rule 18 (programa -> funcion .)
    LLAVE_DER       reduce using rule 18 (programa -> funcion .)
    DEFAULT         reduce using rule 18 (programa -> funcion .)
    CASE            reduce using rule 18 (programa -> funcion .)
    RETURN          reduce using rule 18 (programa -> funcion .)


state 20

    (19) programa -> cadenabool .

    $end            reduce using rule 19 (programa -> cadenabool .)
    LLAVE_DER       reduce using rule 19 (programa -> cadenabool .)
    DEFAULT         reduce using rule 19 (programa -> cadenabool .)
    CASE            reduce using rule 19 (programa -> cadenabool .)
    RETURN          reduce using rule 19 (programa -> cadenabool .)


state 21

    (20) programa -> enterocadena .

    $end            reduce using rule 20 (programa -> enterocadena .)
    LLAVE_DER       reduce using rule 20 (programa -> enterocadena .)
    DEFAULT         reduce using rule 20 (programa -> enterocadena .)
    CASE            reduce using rule 20 (programa -> enterocadena .)
    RETURN          reduce using rule 20 (programa -> enterocadena .)


state 22

    (21) programa -> cadenaentero .

    $end            reduce using rule 21 (programa -> cadenaentero .)
    LLAVE_DER       reduce using rule 21 (programa -> cadenaentero .)
    DEFAULT         reduce using rule 21 (programa -> cadenaentero .)
    CASE            reduce using rule 21 (programa -> cadenaentero .)
    RETURN          reduce using rule 21 (programa -> cadenaentero .)


state 23

    (22) programa -> flotantecadena .

    $end            reduce using rule 22 (programa -> flotantecadena .)
    LLAVE_DER       reduce using rule 22 (programa -> flotantecadena .)
    DEFAULT         reduce using rule 22 (programa -> flotantecadena .)
    CASE            reduce using rule 22 (programa -> flotantecadena .)
    RETURN          reduce using rule 22 (programa -> flotantecadena .)


state 24

    (23) programa -> cadenaflotante .

    $end            reduce using rule 23 (programa -> cadenaflotante .)
    LLAVE_DER       reduce using rule 23 (programa -> cadenaflotante .)
    DEFAULT         reduce using rule 23 (programa -> cadenaflotante .)
    CASE            reduce using rule 23 (programa -> cadenaflotante .)
    RETURN          reduce using rule 23 (programa -> cadenaflotante .)


state 25

    (24) programa -> seman_operacion .

    $end            reduce using rule 24 (programa -> seman_operacion .)
    LLAVE_DER       reduce using rule 24 (programa -> seman_operacion .)
    DEFAULT         reduce using rule 24 (programa -> seman_operacion .)
    CASE            reduce using rule 24 (programa -> seman_operacion .)
    RETURN          reduce using rule 24 (programa -> seman_operacion .)


state 26

    (25) programa -> incremento .

    $end            reduce using rule 25 (programa -> incremento .)
    LLAVE_DER       reduce using rule 25 (programa -> incremento .)
    DEFAULT         reduce using rule 25 (programa -> incremento .)
    CASE            reduce using rule 25 (programa -> incremento .)
    RETURN          reduce using rule 25 (programa -> incremento .)


state 27

    (26) programa -> errorflotantecadena .

    $end            reduce using rule 26 (programa -> errorflotantecadena .)
    LLAVE_DER       reduce using rule 26 (programa -> errorflotantecadena .)
    DEFAULT         reduce using rule 26 (programa -> errorflotantecadena .)
    CASE            reduce using rule 26 (programa -> errorflotantecadena .)
    RETURN          reduce using rule 26 (programa -> errorflotantecadena .)


state 28

    (27) programa -> errorcadenaflotante .

    $end            reduce using rule 27 (programa -> errorcadenaflotante .)
    LLAVE_DER       reduce using rule 27 (programa -> errorcadenaflotante .)
    DEFAULT         reduce using rule 27 (programa -> errorcadenaflotante .)
    CASE            reduce using rule 27 (programa -> errorcadenaflotante .)
    RETURN          reduce using rule 27 (programa -> errorcadenaflotante .)


state 29

    (28) programa -> error_arr .

    $end            reduce using rule 28 (programa -> error_arr .)
    LLAVE_DER       reduce using rule 28 (programa -> error_arr .)
    DEFAULT         reduce using rule 28 (programa -> error_arr .)
    CASE            reduce using rule 28 (programa -> error_arr .)
    RETURN          reduce using rule 28 (programa -> error_arr .)


state 30

    (65) expression -> term .
    (66) term -> term . MULTIPLICADOR factor
    (67) term -> term . DIVISOR factor
    (68) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 65 (expression -> term .)
    MENOS           reduce using rule 65 (expression -> term .)
    $end            reduce using rule 65 (expression -> term .)
    PARENT_DER      reduce using rule 65 (expression -> term .)
    LLAVE_DER       reduce using rule 65 (expression -> term .)
    DEFAULT         reduce using rule 65 (expression -> term .)
    CASE            reduce using rule 65 (expression -> term .)
    RETURN          reduce using rule 65 (expression -> term .)
    MULTIPLICADOR   shift and go to state 47
    DIVISOR         shift and go to state 48
    MOD_DIVISION    shift and go to state 49


state 31

    (29) impresion -> FMT . PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (30) impresion -> FMT . PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (31) impresion -> FMT . PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (32) impresion -> FMT . PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (33) impresion -> FMT . PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER

    PUNTO           shift and go to state 50


state 32

    (81) factor -> PARENT_IZQ . expression PARENT_DER
    (63) expression -> . expression MAS term
    (64) expression -> . expression MENOS term
    (65) expression -> . term
    (66) term -> . term MULTIPLICADOR factor
    (67) term -> . term DIVISOR factor
    (68) term -> . term MOD_DIVISION factor
    (69) term -> . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    expression                     shift and go to state 51
    term                           shift and go to state 30
    factor                         shift and go to state 36

state 33

    (79) factor -> CADENA .

    MULTIPLICADOR   reduce using rule 79 (factor -> CADENA .)
    DIVISOR         reduce using rule 79 (factor -> CADENA .)
    MOD_DIVISION    reduce using rule 79 (factor -> CADENA .)
    MAS             reduce using rule 79 (factor -> CADENA .)
    MENOS           reduce using rule 79 (factor -> CADENA .)
    $end            reduce using rule 79 (factor -> CADENA .)
    PARENT_DER      reduce using rule 79 (factor -> CADENA .)
    IGUALDAD        reduce using rule 79 (factor -> CADENA .)
    MAYOR           reduce using rule 79 (factor -> CADENA .)
    MENOR           reduce using rule 79 (factor -> CADENA .)
    MAYOR_IGU       reduce using rule 79 (factor -> CADENA .)
    MENOR_IGU       reduce using rule 79 (factor -> CADENA .)
    DESIGUALDAD     reduce using rule 79 (factor -> CADENA .)
    LLAVE_DER       reduce using rule 79 (factor -> CADENA .)
    DEFAULT         reduce using rule 79 (factor -> CADENA .)
    CASE            reduce using rule 79 (factor -> CADENA .)
    RETURN          reduce using rule 79 (factor -> CADENA .)
    LLAVE_IZQ       reduce using rule 79 (factor -> CADENA .)
    FIN_SENTENCIA   reduce using rule 79 (factor -> CADENA .)
    DOS_PUNTOS      reduce using rule 79 (factor -> CADENA .)
    COMA            reduce using rule 79 (factor -> CADENA .)


state 34

    (36) companum -> NUMERO . comparacion NUMERO
    (111) seman_operacion -> NUMERO . MAS NUMERO
    (112) seman_operacion -> NUMERO . MENOS NUMERO
    (113) seman_operacion -> NUMERO . MULTIPLICADOR NUMERO
    (114) seman_operacion -> NUMERO . DIVISOR NUMERO
    (115) seman_operacion -> NUMERO . MOD_DIVISION NUMERO
    (120) seman_operacion -> NUMERO . MAS FLOAT
    (121) seman_operacion -> NUMERO . MENOS FLOAT
    (122) seman_operacion -> NUMERO . MULTIPLICADOR FLOAT
    (123) seman_operacion -> NUMERO . DIVISOR FLOAT
    (77) factor -> NUMERO .
    (71) comparacion -> . IGUALDAD
    (72) comparacion -> . MAYOR
    (73) comparacion -> . MENOR
    (74) comparacion -> . MAYOR_IGU
    (75) comparacion -> . MENOR_IGU
    (76) comparacion -> . DESIGUALDAD

  ! shift/reduce conflict for MULTIPLICADOR resolved as shift
  ! shift/reduce conflict for DIVISOR resolved as shift
  ! shift/reduce conflict for MOD_DIVISION resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    MULTIPLICADOR   shift and go to state 58
    DIVISOR         shift and go to state 59
    MOD_DIVISION    shift and go to state 60
    $end            reduce using rule 77 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 77 (factor -> NUMERO .)
    DEFAULT         reduce using rule 77 (factor -> NUMERO .)
    CASE            reduce using rule 77 (factor -> NUMERO .)
    RETURN          reduce using rule 77 (factor -> NUMERO .)
    IGUALDAD        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYOR_IGU       shift and go to state 64
    MENOR_IGU       shift and go to state 65
    DESIGUALDAD     shift and go to state 66

  ! MULTIPLICADOR   [ reduce using rule 77 (factor -> NUMERO .) ]
  ! DIVISOR         [ reduce using rule 77 (factor -> NUMERO .) ]
  ! MOD_DIVISION    [ reduce using rule 77 (factor -> NUMERO .) ]
  ! MAS             [ reduce using rule 77 (factor -> NUMERO .) ]
  ! MENOS           [ reduce using rule 77 (factor -> NUMERO .) ]

    comparacion                    shift and go to state 55

state 35

    (70) sentencia -> IF . factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 67

state 36

    (69) term -> factor .

    MULTIPLICADOR   reduce using rule 69 (term -> factor .)
    DIVISOR         reduce using rule 69 (term -> factor .)
    MOD_DIVISION    reduce using rule 69 (term -> factor .)
    MAS             reduce using rule 69 (term -> factor .)
    MENOS           reduce using rule 69 (term -> factor .)
    $end            reduce using rule 69 (term -> factor .)
    PARENT_DER      reduce using rule 69 (term -> factor .)
    LLAVE_DER       reduce using rule 69 (term -> factor .)
    DEFAULT         reduce using rule 69 (term -> factor .)
    CASE            reduce using rule 69 (term -> factor .)
    RETURN          reduce using rule 69 (term -> factor .)


state 37

    (38) asignacion -> ID . ASIGNACION factor
    (34) longvariable -> ID . PARENT_IZQ CADENA PARENT_DER
    (35) longvariable -> ID . PARENT_IZQ ID PARENT_DER
    (37) compaid -> ID . comparacion ID
    (45) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (46) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (60) slice -> ID . ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> ID . ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (62) capslice -> ID . PARENT_IZQ ID PARENT_DER
    (89) map -> ID . ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (90) map -> ID . ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (102) asignar_valor_map -> ID . CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (104) obtener_valor_map -> ID . CORCHETE_IZQ valor CORCHETE_DER
    (42) incremento -> ID . INCREMENTO
    (43) incremento -> ID . ASIGNACION ID
    (44) incremento -> ID . DECREMENTO
    (48) error_arr -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER
    (78) factor -> ID .
    (71) comparacion -> . IGUALDAD
    (72) comparacion -> . MAYOR
    (73) comparacion -> . MENOR
    (74) comparacion -> . MAYOR_IGU
    (75) comparacion -> . MENOR_IGU
    (76) comparacion -> . DESIGUALDAD

    ASIGNACION      shift and go to state 68
    PARENT_IZQ      shift and go to state 69
    CORCHETE_IZQ    shift and go to state 71
    INCREMENTO      shift and go to state 72
    DECREMENTO      shift and go to state 73
    MULTIPLICADOR   reduce using rule 78 (factor -> ID .)
    DIVISOR         reduce using rule 78 (factor -> ID .)
    MOD_DIVISION    reduce using rule 78 (factor -> ID .)
    MAS             reduce using rule 78 (factor -> ID .)
    MENOS           reduce using rule 78 (factor -> ID .)
    $end            reduce using rule 78 (factor -> ID .)
    LLAVE_DER       reduce using rule 78 (factor -> ID .)
    DEFAULT         reduce using rule 78 (factor -> ID .)
    CASE            reduce using rule 78 (factor -> ID .)
    RETURN          reduce using rule 78 (factor -> ID .)
    IGUALDAD        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYOR_IGU       shift and go to state 64
    MENOR_IGU       shift and go to state 65
    DESIGUALDAD     shift and go to state 66

    comparacion                    shift and go to state 70

state 38

    (39) asignacion -> VAR . ID tipo_dato ASIGNACION factor
    (40) asignacion -> VAR . ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (88) map -> VAR . ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    ID              shift and go to state 74


state 39

    (128) boolcadena -> STRCONV . PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (129) cadenabool -> STRCONV . PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (134) enterocadena -> STRCONV . PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (135) cadenaentero -> STRCONV . PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (130) flotantecadena -> STRCONV . PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (132) cadenaflotante -> STRCONV . PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (131) errorflotantecadena -> STRCONV . PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (133) errorcadenaflotante -> STRCONV . PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER

    PUNTO           shift and go to state 75


state 40

    (41) sentenciafor -> FOR . ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ID              shift and go to state 76


state 41

    (82) switch -> SWITCH . ID LLAVE_IZQ cases LLAVE_DER

    ID              shift and go to state 77


state 42

    (103) eliminar_valor_map -> DELETE . PARENT_IZQ ID COMA valor PARENT_DER

    PARENT_IZQ      shift and go to state 78


state 43

    (105) funcion -> FUNC . ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> FUNC . ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> FUNC . ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER

    ID              shift and go to state 79


state 44

    (116) seman_operacion -> FLOAT . MAS NUMERO
    (117) seman_operacion -> FLOAT . MENOS NUMERO
    (118) seman_operacion -> FLOAT . MULTIPLICADOR NUMERO
    (119) seman_operacion -> FLOAT . DIVISOR NUMERO
    (124) seman_operacion -> FLOAT . MAS FLOAT
    (125) seman_operacion -> FLOAT . MENOS FLOAT
    (126) seman_operacion -> FLOAT . MULTIPLICADOR FLOAT
    (127) seman_operacion -> FLOAT . DIVISOR FLOAT
    (80) factor -> FLOAT .

  ! shift/reduce conflict for MULTIPLICADOR resolved as shift
  ! shift/reduce conflict for DIVISOR resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAS             shift and go to state 80
    MENOS           shift and go to state 81
    MULTIPLICADOR   shift and go to state 82
    DIVISOR         shift and go to state 83
    MOD_DIVISION    reduce using rule 80 (factor -> FLOAT .)
    $end            reduce using rule 80 (factor -> FLOAT .)
    LLAVE_DER       reduce using rule 80 (factor -> FLOAT .)
    DEFAULT         reduce using rule 80 (factor -> FLOAT .)
    CASE            reduce using rule 80 (factor -> FLOAT .)
    RETURN          reduce using rule 80 (factor -> FLOAT .)

  ! MULTIPLICADOR   [ reduce using rule 80 (factor -> FLOAT .) ]
  ! DIVISOR         [ reduce using rule 80 (factor -> FLOAT .) ]
  ! MAS             [ reduce using rule 80 (factor -> FLOAT .) ]
  ! MENOS           [ reduce using rule 80 (factor -> FLOAT .) ]


state 45

    (63) expression -> expression MAS . term
    (66) term -> . term MULTIPLICADOR factor
    (67) term -> . term DIVISOR factor
    (68) term -> . term MOD_DIVISION factor
    (69) term -> . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    term                           shift and go to state 84
    factor                         shift and go to state 36

state 46

    (64) expression -> expression MENOS . term
    (66) term -> . term MULTIPLICADOR factor
    (67) term -> . term DIVISOR factor
    (68) term -> . term MOD_DIVISION factor
    (69) term -> . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    term                           shift and go to state 85
    factor                         shift and go to state 36

state 47

    (66) term -> term MULTIPLICADOR . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 86

state 48

    (67) term -> term DIVISOR . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 87

state 49

    (68) term -> term MOD_DIVISION . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 88

state 50

    (29) impresion -> FMT PUNTO . PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (30) impresion -> FMT PUNTO . PRINTF PARENT_IZQ empty PARENT_DER
    (31) impresion -> FMT PUNTO . PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (32) impresion -> FMT PUNTO . PRINTLN PARENT_IZQ empty PARENT_DER
    (33) impresion -> FMT PUNTO . PRINTLN PARENT_IZQ CADENA PARENT_DER

    PRINTF          shift and go to state 89
    PRINTLN         shift and go to state 90


state 51

    (81) factor -> PARENT_IZQ expression . PARENT_DER
    (63) expression -> expression . MAS term
    (64) expression -> expression . MENOS term

    PARENT_DER      shift and go to state 91
    MAS             shift and go to state 45
    MENOS           shift and go to state 46


state 52

    (77) factor -> NUMERO .

    MULTIPLICADOR   reduce using rule 77 (factor -> NUMERO .)
    DIVISOR         reduce using rule 77 (factor -> NUMERO .)
    MOD_DIVISION    reduce using rule 77 (factor -> NUMERO .)
    PARENT_DER      reduce using rule 77 (factor -> NUMERO .)
    MAS             reduce using rule 77 (factor -> NUMERO .)
    MENOS           reduce using rule 77 (factor -> NUMERO .)
    IGUALDAD        reduce using rule 77 (factor -> NUMERO .)
    MAYOR           reduce using rule 77 (factor -> NUMERO .)
    MENOR           reduce using rule 77 (factor -> NUMERO .)
    MAYOR_IGU       reduce using rule 77 (factor -> NUMERO .)
    MENOR_IGU       reduce using rule 77 (factor -> NUMERO .)
    DESIGUALDAD     reduce using rule 77 (factor -> NUMERO .)
    $end            reduce using rule 77 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 77 (factor -> NUMERO .)
    DEFAULT         reduce using rule 77 (factor -> NUMERO .)
    CASE            reduce using rule 77 (factor -> NUMERO .)
    RETURN          reduce using rule 77 (factor -> NUMERO .)
    LLAVE_IZQ       reduce using rule 77 (factor -> NUMERO .)
    FIN_SENTENCIA   reduce using rule 77 (factor -> NUMERO .)
    DOS_PUNTOS      reduce using rule 77 (factor -> NUMERO .)
    COMA            reduce using rule 77 (factor -> NUMERO .)


state 53

    (78) factor -> ID .

    MULTIPLICADOR   reduce using rule 78 (factor -> ID .)
    DIVISOR         reduce using rule 78 (factor -> ID .)
    MOD_DIVISION    reduce using rule 78 (factor -> ID .)
    PARENT_DER      reduce using rule 78 (factor -> ID .)
    MAS             reduce using rule 78 (factor -> ID .)
    MENOS           reduce using rule 78 (factor -> ID .)
    IGUALDAD        reduce using rule 78 (factor -> ID .)
    MAYOR           reduce using rule 78 (factor -> ID .)
    MENOR           reduce using rule 78 (factor -> ID .)
    MAYOR_IGU       reduce using rule 78 (factor -> ID .)
    MENOR_IGU       reduce using rule 78 (factor -> ID .)
    DESIGUALDAD     reduce using rule 78 (factor -> ID .)
    $end            reduce using rule 78 (factor -> ID .)
    LLAVE_DER       reduce using rule 78 (factor -> ID .)
    DEFAULT         reduce using rule 78 (factor -> ID .)
    CASE            reduce using rule 78 (factor -> ID .)
    RETURN          reduce using rule 78 (factor -> ID .)
    LLAVE_IZQ       reduce using rule 78 (factor -> ID .)
    FIN_SENTENCIA   reduce using rule 78 (factor -> ID .)
    DOS_PUNTOS      reduce using rule 78 (factor -> ID .)
    COMA            reduce using rule 78 (factor -> ID .)


state 54

    (80) factor -> FLOAT .

    MULTIPLICADOR   reduce using rule 80 (factor -> FLOAT .)
    DIVISOR         reduce using rule 80 (factor -> FLOAT .)
    MOD_DIVISION    reduce using rule 80 (factor -> FLOAT .)
    PARENT_DER      reduce using rule 80 (factor -> FLOAT .)
    MAS             reduce using rule 80 (factor -> FLOAT .)
    MENOS           reduce using rule 80 (factor -> FLOAT .)
    IGUALDAD        reduce using rule 80 (factor -> FLOAT .)
    MAYOR           reduce using rule 80 (factor -> FLOAT .)
    MENOR           reduce using rule 80 (factor -> FLOAT .)
    MAYOR_IGU       reduce using rule 80 (factor -> FLOAT .)
    MENOR_IGU       reduce using rule 80 (factor -> FLOAT .)
    DESIGUALDAD     reduce using rule 80 (factor -> FLOAT .)
    $end            reduce using rule 80 (factor -> FLOAT .)
    LLAVE_DER       reduce using rule 80 (factor -> FLOAT .)
    DEFAULT         reduce using rule 80 (factor -> FLOAT .)
    CASE            reduce using rule 80 (factor -> FLOAT .)
    RETURN          reduce using rule 80 (factor -> FLOAT .)
    LLAVE_IZQ       reduce using rule 80 (factor -> FLOAT .)
    FIN_SENTENCIA   reduce using rule 80 (factor -> FLOAT .)
    DOS_PUNTOS      reduce using rule 80 (factor -> FLOAT .)
    COMA            reduce using rule 80 (factor -> FLOAT .)


state 55

    (36) companum -> NUMERO comparacion . NUMERO

    NUMERO          shift and go to state 92


state 56

    (111) seman_operacion -> NUMERO MAS . NUMERO
    (120) seman_operacion -> NUMERO MAS . FLOAT

    NUMERO          shift and go to state 93
    FLOAT           shift and go to state 94


state 57

    (112) seman_operacion -> NUMERO MENOS . NUMERO
    (121) seman_operacion -> NUMERO MENOS . FLOAT

    NUMERO          shift and go to state 95
    FLOAT           shift and go to state 96


state 58

    (113) seman_operacion -> NUMERO MULTIPLICADOR . NUMERO
    (122) seman_operacion -> NUMERO MULTIPLICADOR . FLOAT

    NUMERO          shift and go to state 97
    FLOAT           shift and go to state 98


state 59

    (114) seman_operacion -> NUMERO DIVISOR . NUMERO
    (123) seman_operacion -> NUMERO DIVISOR . FLOAT

    NUMERO          shift and go to state 99
    FLOAT           shift and go to state 100


state 60

    (115) seman_operacion -> NUMERO MOD_DIVISION . NUMERO

    NUMERO          shift and go to state 101


state 61

    (71) comparacion -> IGUALDAD .

    NUMERO          reduce using rule 71 (comparacion -> IGUALDAD .)
    ID              reduce using rule 71 (comparacion -> IGUALDAD .)
    CADENA          reduce using rule 71 (comparacion -> IGUALDAD .)
    FLOAT           reduce using rule 71 (comparacion -> IGUALDAD .)
    PARENT_IZQ      reduce using rule 71 (comparacion -> IGUALDAD .)


state 62

    (72) comparacion -> MAYOR .

    NUMERO          reduce using rule 72 (comparacion -> MAYOR .)
    ID              reduce using rule 72 (comparacion -> MAYOR .)
    CADENA          reduce using rule 72 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 72 (comparacion -> MAYOR .)
    PARENT_IZQ      reduce using rule 72 (comparacion -> MAYOR .)


state 63

    (73) comparacion -> MENOR .

    NUMERO          reduce using rule 73 (comparacion -> MENOR .)
    ID              reduce using rule 73 (comparacion -> MENOR .)
    CADENA          reduce using rule 73 (comparacion -> MENOR .)
    FLOAT           reduce using rule 73 (comparacion -> MENOR .)
    PARENT_IZQ      reduce using rule 73 (comparacion -> MENOR .)


state 64

    (74) comparacion -> MAYOR_IGU .

    NUMERO          reduce using rule 74 (comparacion -> MAYOR_IGU .)
    ID              reduce using rule 74 (comparacion -> MAYOR_IGU .)
    CADENA          reduce using rule 74 (comparacion -> MAYOR_IGU .)
    FLOAT           reduce using rule 74 (comparacion -> MAYOR_IGU .)
    PARENT_IZQ      reduce using rule 74 (comparacion -> MAYOR_IGU .)


state 65

    (75) comparacion -> MENOR_IGU .

    NUMERO          reduce using rule 75 (comparacion -> MENOR_IGU .)
    ID              reduce using rule 75 (comparacion -> MENOR_IGU .)
    CADENA          reduce using rule 75 (comparacion -> MENOR_IGU .)
    FLOAT           reduce using rule 75 (comparacion -> MENOR_IGU .)
    PARENT_IZQ      reduce using rule 75 (comparacion -> MENOR_IGU .)


state 66

    (76) comparacion -> DESIGUALDAD .

    NUMERO          reduce using rule 76 (comparacion -> DESIGUALDAD .)
    ID              reduce using rule 76 (comparacion -> DESIGUALDAD .)
    CADENA          reduce using rule 76 (comparacion -> DESIGUALDAD .)
    FLOAT           reduce using rule 76 (comparacion -> DESIGUALDAD .)
    PARENT_IZQ      reduce using rule 76 (comparacion -> DESIGUALDAD .)


state 67

    (70) sentencia -> IF factor . comparacion factor LLAVE_IZQ programa LLAVE_DER
    (71) comparacion -> . IGUALDAD
    (72) comparacion -> . MAYOR
    (73) comparacion -> . MENOR
    (74) comparacion -> . MAYOR_IGU
    (75) comparacion -> . MENOR_IGU
    (76) comparacion -> . DESIGUALDAD

    IGUALDAD        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYOR_IGU       shift and go to state 64
    MENOR_IGU       shift and go to state 65
    DESIGUALDAD     shift and go to state 66

    comparacion                    shift and go to state 102

state 68

    (38) asignacion -> ID ASIGNACION . factor
    (45) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (46) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER
    (60) slice -> ID ASIGNACION . MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> ID ASIGNACION . MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (89) map -> ID ASIGNACION . MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (90) map -> ID ASIGNACION . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (43) incremento -> ID ASIGNACION . ID
    (48) error_arr -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    CORCHETE_IZQ    shift and go to state 105
    MAKE            shift and go to state 106
    MAP             shift and go to state 107
    ID              shift and go to state 103
    NUMERO          shift and go to state 52
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 104

state 69

    (34) longvariable -> ID PARENT_IZQ . CADENA PARENT_DER
    (35) longvariable -> ID PARENT_IZQ . ID PARENT_DER
    (62) capslice -> ID PARENT_IZQ . ID PARENT_DER

    CADENA          shift and go to state 109
    ID              shift and go to state 108


state 70

    (37) compaid -> ID comparacion . ID

    ID              shift and go to state 110


state 71

    (102) asignar_valor_map -> ID CORCHETE_IZQ . valor CORCHETE_DER ASIGNACION valor
    (104) obtener_valor_map -> ID CORCHETE_IZQ . valor CORCHETE_DER
    (100) valor -> . CADENA
    (101) valor -> . NUMERO

    CADENA          shift and go to state 112
    NUMERO          shift and go to state 113

    valor                          shift and go to state 111

state 72

    (42) incremento -> ID INCREMENTO .

    $end            reduce using rule 42 (incremento -> ID INCREMENTO .)
    LLAVE_DER       reduce using rule 42 (incremento -> ID INCREMENTO .)
    DEFAULT         reduce using rule 42 (incremento -> ID INCREMENTO .)
    CASE            reduce using rule 42 (incremento -> ID INCREMENTO .)
    RETURN          reduce using rule 42 (incremento -> ID INCREMENTO .)
    LLAVE_IZQ       reduce using rule 42 (incremento -> ID INCREMENTO .)


state 73

    (44) incremento -> ID DECREMENTO .

    $end            reduce using rule 44 (incremento -> ID DECREMENTO .)
    LLAVE_DER       reduce using rule 44 (incremento -> ID DECREMENTO .)
    DEFAULT         reduce using rule 44 (incremento -> ID DECREMENTO .)
    CASE            reduce using rule 44 (incremento -> ID DECREMENTO .)
    RETURN          reduce using rule 44 (incremento -> ID DECREMENTO .)
    LLAVE_IZQ       reduce using rule 44 (incremento -> ID DECREMENTO .)


state 74

    (39) asignacion -> VAR ID . tipo_dato ASIGNACION factor
    (40) asignacion -> VAR ID . COMA ID tipo_dato ASIGNACION factor COMA factor
    (88) map -> VAR ID . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    COMA            shift and go to state 115
    MAP             shift and go to state 116
    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 114

state 75

    (128) boolcadena -> STRCONV PUNTO . FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (129) cadenabool -> STRCONV PUNTO . PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (134) enterocadena -> STRCONV PUNTO . FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (135) cadenaentero -> STRCONV PUNTO . PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (130) flotantecadena -> STRCONV PUNTO . FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (132) cadenaflotante -> STRCONV PUNTO . PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (131) errorflotantecadena -> STRCONV PUNTO . FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (133) errorcadenaflotante -> STRCONV PUNTO . FORMATFLOAT PARENT_IZQ CADENA PARENT_DER

    FORMATBOOL      shift and go to state 123
    PARSEBOOL       shift and go to state 124
    FORMATINT       shift and go to state 125
    PARSEINT        shift and go to state 126
    FORMATFLOAT     shift and go to state 127
    PARSEFLOAT      shift and go to state 128


state 76

    (41) sentenciafor -> FOR ID . ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ASIGNACION      shift and go to state 129


state 77

    (82) switch -> SWITCH ID . LLAVE_IZQ cases LLAVE_DER

    LLAVE_IZQ       shift and go to state 130


state 78

    (103) eliminar_valor_map -> DELETE PARENT_IZQ . ID COMA valor PARENT_DER

    ID              shift and go to state 131


state 79

    (105) funcion -> FUNC ID . PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> FUNC ID . PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> FUNC ID . PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER

    PARENT_IZQ      shift and go to state 132


state 80

    (116) seman_operacion -> FLOAT MAS . NUMERO
    (124) seman_operacion -> FLOAT MAS . FLOAT

    NUMERO          shift and go to state 134
    FLOAT           shift and go to state 133


state 81

    (117) seman_operacion -> FLOAT MENOS . NUMERO
    (125) seman_operacion -> FLOAT MENOS . FLOAT

    NUMERO          shift and go to state 136
    FLOAT           shift and go to state 135


state 82

    (118) seman_operacion -> FLOAT MULTIPLICADOR . NUMERO
    (126) seman_operacion -> FLOAT MULTIPLICADOR . FLOAT

    NUMERO          shift and go to state 138
    FLOAT           shift and go to state 137


state 83

    (119) seman_operacion -> FLOAT DIVISOR . NUMERO
    (127) seman_operacion -> FLOAT DIVISOR . FLOAT

    NUMERO          shift and go to state 140
    FLOAT           shift and go to state 139


state 84

    (63) expression -> expression MAS term .
    (66) term -> term . MULTIPLICADOR factor
    (67) term -> term . DIVISOR factor
    (68) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 63 (expression -> expression MAS term .)
    MENOS           reduce using rule 63 (expression -> expression MAS term .)
    $end            reduce using rule 63 (expression -> expression MAS term .)
    PARENT_DER      reduce using rule 63 (expression -> expression MAS term .)
    LLAVE_DER       reduce using rule 63 (expression -> expression MAS term .)
    DEFAULT         reduce using rule 63 (expression -> expression MAS term .)
    CASE            reduce using rule 63 (expression -> expression MAS term .)
    RETURN          reduce using rule 63 (expression -> expression MAS term .)
    MULTIPLICADOR   shift and go to state 47
    DIVISOR         shift and go to state 48
    MOD_DIVISION    shift and go to state 49


state 85

    (64) expression -> expression MENOS term .
    (66) term -> term . MULTIPLICADOR factor
    (67) term -> term . DIVISOR factor
    (68) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 64 (expression -> expression MENOS term .)
    MENOS           reduce using rule 64 (expression -> expression MENOS term .)
    $end            reduce using rule 64 (expression -> expression MENOS term .)
    PARENT_DER      reduce using rule 64 (expression -> expression MENOS term .)
    LLAVE_DER       reduce using rule 64 (expression -> expression MENOS term .)
    DEFAULT         reduce using rule 64 (expression -> expression MENOS term .)
    CASE            reduce using rule 64 (expression -> expression MENOS term .)
    RETURN          reduce using rule 64 (expression -> expression MENOS term .)
    MULTIPLICADOR   shift and go to state 47
    DIVISOR         shift and go to state 48
    MOD_DIVISION    shift and go to state 49


state 86

    (66) term -> term MULTIPLICADOR factor .

    MULTIPLICADOR   reduce using rule 66 (term -> term MULTIPLICADOR factor .)
    DIVISOR         reduce using rule 66 (term -> term MULTIPLICADOR factor .)
    MOD_DIVISION    reduce using rule 66 (term -> term MULTIPLICADOR factor .)
    MAS             reduce using rule 66 (term -> term MULTIPLICADOR factor .)
    MENOS           reduce using rule 66 (term -> term MULTIPLICADOR factor .)
    $end            reduce using rule 66 (term -> term MULTIPLICADOR factor .)
    PARENT_DER      reduce using rule 66 (term -> term MULTIPLICADOR factor .)
    LLAVE_DER       reduce using rule 66 (term -> term MULTIPLICADOR factor .)
    DEFAULT         reduce using rule 66 (term -> term MULTIPLICADOR factor .)
    CASE            reduce using rule 66 (term -> term MULTIPLICADOR factor .)
    RETURN          reduce using rule 66 (term -> term MULTIPLICADOR factor .)


state 87

    (67) term -> term DIVISOR factor .

    MULTIPLICADOR   reduce using rule 67 (term -> term DIVISOR factor .)
    DIVISOR         reduce using rule 67 (term -> term DIVISOR factor .)
    MOD_DIVISION    reduce using rule 67 (term -> term DIVISOR factor .)
    MAS             reduce using rule 67 (term -> term DIVISOR factor .)
    MENOS           reduce using rule 67 (term -> term DIVISOR factor .)
    $end            reduce using rule 67 (term -> term DIVISOR factor .)
    PARENT_DER      reduce using rule 67 (term -> term DIVISOR factor .)
    LLAVE_DER       reduce using rule 67 (term -> term DIVISOR factor .)
    DEFAULT         reduce using rule 67 (term -> term DIVISOR factor .)
    CASE            reduce using rule 67 (term -> term DIVISOR factor .)
    RETURN          reduce using rule 67 (term -> term DIVISOR factor .)


state 88

    (68) term -> term MOD_DIVISION factor .

    MULTIPLICADOR   reduce using rule 68 (term -> term MOD_DIVISION factor .)
    DIVISOR         reduce using rule 68 (term -> term MOD_DIVISION factor .)
    MOD_DIVISION    reduce using rule 68 (term -> term MOD_DIVISION factor .)
    MAS             reduce using rule 68 (term -> term MOD_DIVISION factor .)
    MENOS           reduce using rule 68 (term -> term MOD_DIVISION factor .)
    $end            reduce using rule 68 (term -> term MOD_DIVISION factor .)
    PARENT_DER      reduce using rule 68 (term -> term MOD_DIVISION factor .)
    LLAVE_DER       reduce using rule 68 (term -> term MOD_DIVISION factor .)
    DEFAULT         reduce using rule 68 (term -> term MOD_DIVISION factor .)
    CASE            reduce using rule 68 (term -> term MOD_DIVISION factor .)
    RETURN          reduce using rule 68 (term -> term MOD_DIVISION factor .)


state 89

    (29) impresion -> FMT PUNTO PRINTF . PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (30) impresion -> FMT PUNTO PRINTF . PARENT_IZQ empty PARENT_DER

    PARENT_IZQ      shift and go to state 141


state 90

    (31) impresion -> FMT PUNTO PRINTLN . PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (32) impresion -> FMT PUNTO PRINTLN . PARENT_IZQ empty PARENT_DER
    (33) impresion -> FMT PUNTO PRINTLN . PARENT_IZQ CADENA PARENT_DER

    PARENT_IZQ      shift and go to state 142


state 91

    (81) factor -> PARENT_IZQ expression PARENT_DER .

    MULTIPLICADOR   reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    DIVISOR         reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    MOD_DIVISION    reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAS             reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOS           reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    $end            reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    PARENT_DER      reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    IGUALDAD        reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAYOR           reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOR           reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAYOR_IGU       reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOR_IGU       reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    DESIGUALDAD     reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_DER       reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    DEFAULT         reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    CASE            reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    RETURN          reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_IZQ       reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    FIN_SENTENCIA   reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    DOS_PUNTOS      reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)
    COMA            reduce using rule 81 (factor -> PARENT_IZQ expression PARENT_DER .)


state 92

    (36) companum -> NUMERO comparacion NUMERO .

    $end            reduce using rule 36 (companum -> NUMERO comparacion NUMERO .)
    LLAVE_DER       reduce using rule 36 (companum -> NUMERO comparacion NUMERO .)
    DEFAULT         reduce using rule 36 (companum -> NUMERO comparacion NUMERO .)
    CASE            reduce using rule 36 (companum -> NUMERO comparacion NUMERO .)
    RETURN          reduce using rule 36 (companum -> NUMERO comparacion NUMERO .)


state 93

    (111) seman_operacion -> NUMERO MAS NUMERO .

    $end            reduce using rule 111 (seman_operacion -> NUMERO MAS NUMERO .)
    LLAVE_DER       reduce using rule 111 (seman_operacion -> NUMERO MAS NUMERO .)
    DEFAULT         reduce using rule 111 (seman_operacion -> NUMERO MAS NUMERO .)
    CASE            reduce using rule 111 (seman_operacion -> NUMERO MAS NUMERO .)
    RETURN          reduce using rule 111 (seman_operacion -> NUMERO MAS NUMERO .)


state 94

    (120) seman_operacion -> NUMERO MAS FLOAT .

    $end            reduce using rule 120 (seman_operacion -> NUMERO MAS FLOAT .)
    LLAVE_DER       reduce using rule 120 (seman_operacion -> NUMERO MAS FLOAT .)
    DEFAULT         reduce using rule 120 (seman_operacion -> NUMERO MAS FLOAT .)
    CASE            reduce using rule 120 (seman_operacion -> NUMERO MAS FLOAT .)
    RETURN          reduce using rule 120 (seman_operacion -> NUMERO MAS FLOAT .)


state 95

    (112) seman_operacion -> NUMERO MENOS NUMERO .

    $end            reduce using rule 112 (seman_operacion -> NUMERO MENOS NUMERO .)
    LLAVE_DER       reduce using rule 112 (seman_operacion -> NUMERO MENOS NUMERO .)
    DEFAULT         reduce using rule 112 (seman_operacion -> NUMERO MENOS NUMERO .)
    CASE            reduce using rule 112 (seman_operacion -> NUMERO MENOS NUMERO .)
    RETURN          reduce using rule 112 (seman_operacion -> NUMERO MENOS NUMERO .)


state 96

    (121) seman_operacion -> NUMERO MENOS FLOAT .

    $end            reduce using rule 121 (seman_operacion -> NUMERO MENOS FLOAT .)
    LLAVE_DER       reduce using rule 121 (seman_operacion -> NUMERO MENOS FLOAT .)
    DEFAULT         reduce using rule 121 (seman_operacion -> NUMERO MENOS FLOAT .)
    CASE            reduce using rule 121 (seman_operacion -> NUMERO MENOS FLOAT .)
    RETURN          reduce using rule 121 (seman_operacion -> NUMERO MENOS FLOAT .)


state 97

    (113) seman_operacion -> NUMERO MULTIPLICADOR NUMERO .

    $end            reduce using rule 113 (seman_operacion -> NUMERO MULTIPLICADOR NUMERO .)
    LLAVE_DER       reduce using rule 113 (seman_operacion -> NUMERO MULTIPLICADOR NUMERO .)
    DEFAULT         reduce using rule 113 (seman_operacion -> NUMERO MULTIPLICADOR NUMERO .)
    CASE            reduce using rule 113 (seman_operacion -> NUMERO MULTIPLICADOR NUMERO .)
    RETURN          reduce using rule 113 (seman_operacion -> NUMERO MULTIPLICADOR NUMERO .)


state 98

    (122) seman_operacion -> NUMERO MULTIPLICADOR FLOAT .

    $end            reduce using rule 122 (seman_operacion -> NUMERO MULTIPLICADOR FLOAT .)
    LLAVE_DER       reduce using rule 122 (seman_operacion -> NUMERO MULTIPLICADOR FLOAT .)
    DEFAULT         reduce using rule 122 (seman_operacion -> NUMERO MULTIPLICADOR FLOAT .)
    CASE            reduce using rule 122 (seman_operacion -> NUMERO MULTIPLICADOR FLOAT .)
    RETURN          reduce using rule 122 (seman_operacion -> NUMERO MULTIPLICADOR FLOAT .)


state 99

    (114) seman_operacion -> NUMERO DIVISOR NUMERO .

    $end            reduce using rule 114 (seman_operacion -> NUMERO DIVISOR NUMERO .)
    LLAVE_DER       reduce using rule 114 (seman_operacion -> NUMERO DIVISOR NUMERO .)
    DEFAULT         reduce using rule 114 (seman_operacion -> NUMERO DIVISOR NUMERO .)
    CASE            reduce using rule 114 (seman_operacion -> NUMERO DIVISOR NUMERO .)
    RETURN          reduce using rule 114 (seman_operacion -> NUMERO DIVISOR NUMERO .)


state 100

    (123) seman_operacion -> NUMERO DIVISOR FLOAT .

    $end            reduce using rule 123 (seman_operacion -> NUMERO DIVISOR FLOAT .)
    LLAVE_DER       reduce using rule 123 (seman_operacion -> NUMERO DIVISOR FLOAT .)
    DEFAULT         reduce using rule 123 (seman_operacion -> NUMERO DIVISOR FLOAT .)
    CASE            reduce using rule 123 (seman_operacion -> NUMERO DIVISOR FLOAT .)
    RETURN          reduce using rule 123 (seman_operacion -> NUMERO DIVISOR FLOAT .)


state 101

    (115) seman_operacion -> NUMERO MOD_DIVISION NUMERO .

    $end            reduce using rule 115 (seman_operacion -> NUMERO MOD_DIVISION NUMERO .)
    LLAVE_DER       reduce using rule 115 (seman_operacion -> NUMERO MOD_DIVISION NUMERO .)
    DEFAULT         reduce using rule 115 (seman_operacion -> NUMERO MOD_DIVISION NUMERO .)
    CASE            reduce using rule 115 (seman_operacion -> NUMERO MOD_DIVISION NUMERO .)
    RETURN          reduce using rule 115 (seman_operacion -> NUMERO MOD_DIVISION NUMERO .)


state 102

    (70) sentencia -> IF factor comparacion . factor LLAVE_IZQ programa LLAVE_DER
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 143

state 103

    (43) incremento -> ID ASIGNACION ID .
    (78) factor -> ID .

  ! reduce/reduce conflict for $end resolved using rule 43 (incremento -> ID ASIGNACION ID .)
  ! reduce/reduce conflict for LLAVE_DER resolved using rule 43 (incremento -> ID ASIGNACION ID .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 43 (incremento -> ID ASIGNACION ID .)
  ! reduce/reduce conflict for CASE resolved using rule 43 (incremento -> ID ASIGNACION ID .)
  ! reduce/reduce conflict for RETURN resolved using rule 43 (incremento -> ID ASIGNACION ID .)
    $end            reduce using rule 43 (incremento -> ID ASIGNACION ID .)
    LLAVE_DER       reduce using rule 43 (incremento -> ID ASIGNACION ID .)
    DEFAULT         reduce using rule 43 (incremento -> ID ASIGNACION ID .)
    CASE            reduce using rule 43 (incremento -> ID ASIGNACION ID .)
    RETURN          reduce using rule 43 (incremento -> ID ASIGNACION ID .)

  ! $end            [ reduce using rule 78 (factor -> ID .) ]
  ! LLAVE_DER       [ reduce using rule 78 (factor -> ID .) ]
  ! DEFAULT         [ reduce using rule 78 (factor -> ID .) ]
  ! CASE            [ reduce using rule 78 (factor -> ID .) ]
  ! RETURN          [ reduce using rule 78 (factor -> ID .) ]


state 104

    (38) asignacion -> ID ASIGNACION factor .

    $end            reduce using rule 38 (asignacion -> ID ASIGNACION factor .)
    LLAVE_DER       reduce using rule 38 (asignacion -> ID ASIGNACION factor .)
    DEFAULT         reduce using rule 38 (asignacion -> ID ASIGNACION factor .)
    CASE            reduce using rule 38 (asignacion -> ID ASIGNACION factor .)
    RETURN          reduce using rule 38 (asignacion -> ID ASIGNACION factor .)


state 105

    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER tipo_dato
    (46) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER
    (48) error_arr -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER
    (54) cantidad -> . NUMERO
    (55) cantidad -> . ARRPUNTOS

    NUMERO          shift and go to state 145
    ARRPUNTOS       shift and go to state 146

    cantidad                       shift and go to state 144

state 106

    (60) slice -> ID ASIGNACION MAKE . PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> ID ASIGNACION MAKE . PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (89) map -> ID ASIGNACION MAKE . PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    PARENT_IZQ      shift and go to state 147


state 107

    (90) map -> ID ASIGNACION MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_IZQ    shift and go to state 148


state 108

    (35) longvariable -> ID PARENT_IZQ ID . PARENT_DER
    (62) capslice -> ID PARENT_IZQ ID . PARENT_DER

    PARENT_DER      shift and go to state 149


state 109

    (34) longvariable -> ID PARENT_IZQ CADENA . PARENT_DER

    PARENT_DER      shift and go to state 150


state 110

    (37) compaid -> ID comparacion ID .

    $end            reduce using rule 37 (compaid -> ID comparacion ID .)
    LLAVE_DER       reduce using rule 37 (compaid -> ID comparacion ID .)
    DEFAULT         reduce using rule 37 (compaid -> ID comparacion ID .)
    CASE            reduce using rule 37 (compaid -> ID comparacion ID .)
    RETURN          reduce using rule 37 (compaid -> ID comparacion ID .)


state 111

    (102) asignar_valor_map -> ID CORCHETE_IZQ valor . CORCHETE_DER ASIGNACION valor
    (104) obtener_valor_map -> ID CORCHETE_IZQ valor . CORCHETE_DER

    CORCHETE_DER    shift and go to state 151


state 112

    (100) valor -> CADENA .

    CORCHETE_DER    reduce using rule 100 (valor -> CADENA .)
    PARENT_DER      reduce using rule 100 (valor -> CADENA .)
    $end            reduce using rule 100 (valor -> CADENA .)
    LLAVE_DER       reduce using rule 100 (valor -> CADENA .)
    DEFAULT         reduce using rule 100 (valor -> CADENA .)
    CASE            reduce using rule 100 (valor -> CADENA .)
    RETURN          reduce using rule 100 (valor -> CADENA .)
    COMA            reduce using rule 100 (valor -> CADENA .)


state 113

    (101) valor -> NUMERO .

    CORCHETE_DER    reduce using rule 101 (valor -> NUMERO .)
    PARENT_DER      reduce using rule 101 (valor -> NUMERO .)
    $end            reduce using rule 101 (valor -> NUMERO .)
    LLAVE_DER       reduce using rule 101 (valor -> NUMERO .)
    DEFAULT         reduce using rule 101 (valor -> NUMERO .)
    CASE            reduce using rule 101 (valor -> NUMERO .)
    RETURN          reduce using rule 101 (valor -> NUMERO .)
    COMA            reduce using rule 101 (valor -> NUMERO .)


state 114

    (39) asignacion -> VAR ID tipo_dato . ASIGNACION factor

    ASIGNACION      shift and go to state 152


state 115

    (40) asignacion -> VAR ID COMA . ID tipo_dato ASIGNACION factor COMA factor

    ID              shift and go to state 153


state 116

    (88) map -> VAR ID MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_IZQ    shift and go to state 154


state 117

    (91) tipo_dato -> INT .

    ASIGNACION      reduce using rule 91 (tipo_dato -> INT .)
    CORCHETE_DER    reduce using rule 91 (tipo_dato -> INT .)
    COMA            reduce using rule 91 (tipo_dato -> INT .)
    PARENT_DER      reduce using rule 91 (tipo_dato -> INT .)
    LLAVE_IZQ       reduce using rule 91 (tipo_dato -> INT .)


state 118

    (92) tipo_dato -> STRING .

    ASIGNACION      reduce using rule 92 (tipo_dato -> STRING .)
    CORCHETE_DER    reduce using rule 92 (tipo_dato -> STRING .)
    COMA            reduce using rule 92 (tipo_dato -> STRING .)
    PARENT_DER      reduce using rule 92 (tipo_dato -> STRING .)
    LLAVE_IZQ       reduce using rule 92 (tipo_dato -> STRING .)
    $end            reduce using rule 92 (tipo_dato -> STRING .)
    LLAVE_DER       reduce using rule 92 (tipo_dato -> STRING .)
    DEFAULT         reduce using rule 92 (tipo_dato -> STRING .)
    CASE            reduce using rule 92 (tipo_dato -> STRING .)
    RETURN          reduce using rule 92 (tipo_dato -> STRING .)


state 119

    (93) tipo_dato -> INT64 .

    ASIGNACION      reduce using rule 93 (tipo_dato -> INT64 .)
    CORCHETE_DER    reduce using rule 93 (tipo_dato -> INT64 .)
    COMA            reduce using rule 93 (tipo_dato -> INT64 .)
    PARENT_DER      reduce using rule 93 (tipo_dato -> INT64 .)
    LLAVE_IZQ       reduce using rule 93 (tipo_dato -> INT64 .)
    $end            reduce using rule 93 (tipo_dato -> INT64 .)
    LLAVE_DER       reduce using rule 93 (tipo_dato -> INT64 .)
    DEFAULT         reduce using rule 93 (tipo_dato -> INT64 .)
    CASE            reduce using rule 93 (tipo_dato -> INT64 .)
    RETURN          reduce using rule 93 (tipo_dato -> INT64 .)


state 120

    (94) tipo_dato -> FLOAT32 .

    ASIGNACION      reduce using rule 94 (tipo_dato -> FLOAT32 .)
    CORCHETE_DER    reduce using rule 94 (tipo_dato -> FLOAT32 .)
    COMA            reduce using rule 94 (tipo_dato -> FLOAT32 .)
    PARENT_DER      reduce using rule 94 (tipo_dato -> FLOAT32 .)
    LLAVE_IZQ       reduce using rule 94 (tipo_dato -> FLOAT32 .)
    $end            reduce using rule 94 (tipo_dato -> FLOAT32 .)
    LLAVE_DER       reduce using rule 94 (tipo_dato -> FLOAT32 .)
    DEFAULT         reduce using rule 94 (tipo_dato -> FLOAT32 .)
    CASE            reduce using rule 94 (tipo_dato -> FLOAT32 .)
    RETURN          reduce using rule 94 (tipo_dato -> FLOAT32 .)


state 121

    (95) tipo_dato -> FLOAT64 .

    ASIGNACION      reduce using rule 95 (tipo_dato -> FLOAT64 .)
    CORCHETE_DER    reduce using rule 95 (tipo_dato -> FLOAT64 .)
    COMA            reduce using rule 95 (tipo_dato -> FLOAT64 .)
    PARENT_DER      reduce using rule 95 (tipo_dato -> FLOAT64 .)
    LLAVE_IZQ       reduce using rule 95 (tipo_dato -> FLOAT64 .)
    $end            reduce using rule 95 (tipo_dato -> FLOAT64 .)
    LLAVE_DER       reduce using rule 95 (tipo_dato -> FLOAT64 .)
    DEFAULT         reduce using rule 95 (tipo_dato -> FLOAT64 .)
    CASE            reduce using rule 95 (tipo_dato -> FLOAT64 .)
    RETURN          reduce using rule 95 (tipo_dato -> FLOAT64 .)


state 122

    (96) tipo_dato -> INT32 .

    ASIGNACION      reduce using rule 96 (tipo_dato -> INT32 .)
    CORCHETE_DER    reduce using rule 96 (tipo_dato -> INT32 .)
    COMA            reduce using rule 96 (tipo_dato -> INT32 .)
    PARENT_DER      reduce using rule 96 (tipo_dato -> INT32 .)
    LLAVE_IZQ       reduce using rule 96 (tipo_dato -> INT32 .)
    $end            reduce using rule 96 (tipo_dato -> INT32 .)
    LLAVE_DER       reduce using rule 96 (tipo_dato -> INT32 .)
    DEFAULT         reduce using rule 96 (tipo_dato -> INT32 .)
    CASE            reduce using rule 96 (tipo_dato -> INT32 .)
    RETURN          reduce using rule 96 (tipo_dato -> INT32 .)


state 123

    (128) boolcadena -> STRCONV PUNTO FORMATBOOL . PARENT_IZQ BOOLEAN PARENT_DER

    PARENT_IZQ      shift and go to state 155


state 124

    (129) cadenabool -> STRCONV PUNTO PARSEBOOL . PARENT_IZQ CADENA PARENT_DER

    PARENT_IZQ      shift and go to state 156


state 125

    (134) enterocadena -> STRCONV PUNTO FORMATINT . PARENT_IZQ NUMERO COMA NUMERO PARENT_DER

    PARENT_IZQ      shift and go to state 157


state 126

    (135) cadenaentero -> STRCONV PUNTO PARSEINT . PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER

    PARENT_IZQ      shift and go to state 158


state 127

    (130) flotantecadena -> STRCONV PUNTO FORMATFLOAT . PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (131) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT . PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (133) errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT . PARENT_IZQ CADENA PARENT_DER

    PARENT_IZQ      shift and go to state 159


state 128

    (132) cadenaflotante -> STRCONV PUNTO PARSEFLOAT . PARENT_IZQ CADENA COMA NUMERO PARENT_DER

    PARENT_IZQ      shift and go to state 160


state 129

    (41) sentenciafor -> FOR ID ASIGNACION . factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 161

state 130

    (82) switch -> SWITCH ID LLAVE_IZQ . cases LLAVE_DER
    (83) cases -> . case
    (84) cases -> . case default
    (85) cases -> . case cases
    (86) case -> . CASE factor DOS_PUNTOS programa

    CASE            shift and go to state 164

    cases                          shift and go to state 162
    case                           shift and go to state 163

state 131

    (103) eliminar_valor_map -> DELETE PARENT_IZQ ID . COMA valor PARENT_DER

    COMA            shift and go to state 165


state 132

    (105) funcion -> FUNC ID PARENT_IZQ . argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> FUNC ID PARENT_IZQ . argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> FUNC ID PARENT_IZQ . argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (108) argumentos -> . ID tipo_dato
    (109) argumentos -> . ID tipo_dato COMA argumentos

    ID              shift and go to state 166

    argumentos                     shift and go to state 167

state 133

    (124) seman_operacion -> FLOAT MAS FLOAT .

    $end            reduce using rule 124 (seman_operacion -> FLOAT MAS FLOAT .)
    LLAVE_DER       reduce using rule 124 (seman_operacion -> FLOAT MAS FLOAT .)
    DEFAULT         reduce using rule 124 (seman_operacion -> FLOAT MAS FLOAT .)
    CASE            reduce using rule 124 (seman_operacion -> FLOAT MAS FLOAT .)
    RETURN          reduce using rule 124 (seman_operacion -> FLOAT MAS FLOAT .)


state 134

    (116) seman_operacion -> FLOAT MAS NUMERO .

    $end            reduce using rule 116 (seman_operacion -> FLOAT MAS NUMERO .)
    LLAVE_DER       reduce using rule 116 (seman_operacion -> FLOAT MAS NUMERO .)
    DEFAULT         reduce using rule 116 (seman_operacion -> FLOAT MAS NUMERO .)
    CASE            reduce using rule 116 (seman_operacion -> FLOAT MAS NUMERO .)
    RETURN          reduce using rule 116 (seman_operacion -> FLOAT MAS NUMERO .)


state 135

    (125) seman_operacion -> FLOAT MENOS FLOAT .

    $end            reduce using rule 125 (seman_operacion -> FLOAT MENOS FLOAT .)
    LLAVE_DER       reduce using rule 125 (seman_operacion -> FLOAT MENOS FLOAT .)
    DEFAULT         reduce using rule 125 (seman_operacion -> FLOAT MENOS FLOAT .)
    CASE            reduce using rule 125 (seman_operacion -> FLOAT MENOS FLOAT .)
    RETURN          reduce using rule 125 (seman_operacion -> FLOAT MENOS FLOAT .)


state 136

    (117) seman_operacion -> FLOAT MENOS NUMERO .

    $end            reduce using rule 117 (seman_operacion -> FLOAT MENOS NUMERO .)
    LLAVE_DER       reduce using rule 117 (seman_operacion -> FLOAT MENOS NUMERO .)
    DEFAULT         reduce using rule 117 (seman_operacion -> FLOAT MENOS NUMERO .)
    CASE            reduce using rule 117 (seman_operacion -> FLOAT MENOS NUMERO .)
    RETURN          reduce using rule 117 (seman_operacion -> FLOAT MENOS NUMERO .)


state 137

    (126) seman_operacion -> FLOAT MULTIPLICADOR FLOAT .

    $end            reduce using rule 126 (seman_operacion -> FLOAT MULTIPLICADOR FLOAT .)
    LLAVE_DER       reduce using rule 126 (seman_operacion -> FLOAT MULTIPLICADOR FLOAT .)
    DEFAULT         reduce using rule 126 (seman_operacion -> FLOAT MULTIPLICADOR FLOAT .)
    CASE            reduce using rule 126 (seman_operacion -> FLOAT MULTIPLICADOR FLOAT .)
    RETURN          reduce using rule 126 (seman_operacion -> FLOAT MULTIPLICADOR FLOAT .)


state 138

    (118) seman_operacion -> FLOAT MULTIPLICADOR NUMERO .

    $end            reduce using rule 118 (seman_operacion -> FLOAT MULTIPLICADOR NUMERO .)
    LLAVE_DER       reduce using rule 118 (seman_operacion -> FLOAT MULTIPLICADOR NUMERO .)
    DEFAULT         reduce using rule 118 (seman_operacion -> FLOAT MULTIPLICADOR NUMERO .)
    CASE            reduce using rule 118 (seman_operacion -> FLOAT MULTIPLICADOR NUMERO .)
    RETURN          reduce using rule 118 (seman_operacion -> FLOAT MULTIPLICADOR NUMERO .)


state 139

    (127) seman_operacion -> FLOAT DIVISOR FLOAT .

    $end            reduce using rule 127 (seman_operacion -> FLOAT DIVISOR FLOAT .)
    LLAVE_DER       reduce using rule 127 (seman_operacion -> FLOAT DIVISOR FLOAT .)
    DEFAULT         reduce using rule 127 (seman_operacion -> FLOAT DIVISOR FLOAT .)
    CASE            reduce using rule 127 (seman_operacion -> FLOAT DIVISOR FLOAT .)
    RETURN          reduce using rule 127 (seman_operacion -> FLOAT DIVISOR FLOAT .)


state 140

    (119) seman_operacion -> FLOAT DIVISOR NUMERO .

    $end            reduce using rule 119 (seman_operacion -> FLOAT DIVISOR NUMERO .)
    LLAVE_DER       reduce using rule 119 (seman_operacion -> FLOAT DIVISOR NUMERO .)
    DEFAULT         reduce using rule 119 (seman_operacion -> FLOAT DIVISOR NUMERO .)
    CASE            reduce using rule 119 (seman_operacion -> FLOAT DIVISOR NUMERO .)
    RETURN          reduce using rule 119 (seman_operacion -> FLOAT DIVISOR NUMERO .)


state 141

    (29) impresion -> FMT PUNTO PRINTF PARENT_IZQ . CADENA COMA NUMERO PARENT_DER
    (30) impresion -> FMT PUNTO PRINTF PARENT_IZQ . empty PARENT_DER
    (110) empty -> .

    CADENA          shift and go to state 168
    PARENT_DER      reduce using rule 110 (empty -> .)

    empty                          shift and go to state 169

state 142

    (31) impresion -> FMT PUNTO PRINTLN PARENT_IZQ . CADENA COMA NUMERO PARENT_DER
    (32) impresion -> FMT PUNTO PRINTLN PARENT_IZQ . empty PARENT_DER
    (33) impresion -> FMT PUNTO PRINTLN PARENT_IZQ . CADENA PARENT_DER
    (110) empty -> .

    CADENA          shift and go to state 170
    PARENT_DER      reduce using rule 110 (empty -> .)

    empty                          shift and go to state 171

state 143

    (70) sentencia -> IF factor comparacion factor . LLAVE_IZQ programa LLAVE_DER

    LLAVE_IZQ       shift and go to state 172


state 144

    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER tipo_dato
    (46) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER
    (48) error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER

    CORCHETE_DER    shift and go to state 173


state 145

    (54) cantidad -> NUMERO .

    CORCHETE_DER    reduce using rule 54 (cantidad -> NUMERO .)


state 146

    (55) cantidad -> ARRPUNTOS .

    CORCHETE_DER    reduce using rule 55 (cantidad -> ARRPUNTOS .)


state 147

    (60) slice -> ID ASIGNACION MAKE PARENT_IZQ . CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> ID ASIGNACION MAKE PARENT_IZQ . CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (89) map -> ID ASIGNACION MAKE PARENT_IZQ . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    CORCHETE_IZQ    shift and go to state 174
    MAP             shift and go to state 175


state 148

    (90) map -> ID ASIGNACION MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 176

state 149

    (35) longvariable -> ID PARENT_IZQ ID PARENT_DER .
    (62) capslice -> ID PARENT_IZQ ID PARENT_DER .

  ! reduce/reduce conflict for $end resolved using rule 35 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for LLAVE_DER resolved using rule 35 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 35 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for CASE resolved using rule 35 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for RETURN resolved using rule 35 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    $end            reduce using rule 35 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    LLAVE_DER       reduce using rule 35 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    DEFAULT         reduce using rule 35 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    CASE            reduce using rule 35 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    RETURN          reduce using rule 35 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)

  ! $end            [ reduce using rule 62 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! LLAVE_DER       [ reduce using rule 62 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! DEFAULT         [ reduce using rule 62 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! CASE            [ reduce using rule 62 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! RETURN          [ reduce using rule 62 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]


state 150

    (34) longvariable -> ID PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 34 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 34 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    DEFAULT         reduce using rule 34 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    CASE            reduce using rule 34 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    RETURN          reduce using rule 34 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)


state 151

    (102) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER . ASIGNACION valor
    (104) obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .

    ASIGNACION      shift and go to state 177
    $end            reduce using rule 104 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    LLAVE_DER       reduce using rule 104 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    DEFAULT         reduce using rule 104 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    CASE            reduce using rule 104 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    RETURN          reduce using rule 104 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)


state 152

    (39) asignacion -> VAR ID tipo_dato ASIGNACION . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 178

state 153

    (40) asignacion -> VAR ID COMA ID . tipo_dato ASIGNACION factor COMA factor
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 179

state 154

    (88) map -> VAR ID MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 180

state 155

    (128) boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ . BOOLEAN PARENT_DER

    BOOLEAN         shift and go to state 181


state 156

    (129) cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ . CADENA PARENT_DER

    CADENA          shift and go to state 182


state 157

    (134) enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ . NUMERO COMA NUMERO PARENT_DER

    NUMERO          shift and go to state 183


state 158

    (135) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ . CADENA COMA NUMERO COMA NUMERO PARENT_DER

    CADENA          shift and go to state 184


state 159

    (130) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ . FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (131) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ . FLOAT COMA NUMERO PARENT_DER
    (133) errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ . CADENA PARENT_DER

    FLOAT           shift and go to state 185
    CADENA          shift and go to state 186


state 160

    (132) cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ . CADENA COMA NUMERO PARENT_DER

    CADENA          shift and go to state 187


state 161

    (41) sentenciafor -> FOR ID ASIGNACION factor . FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    FIN_SENTENCIA   shift and go to state 188


state 162

    (82) switch -> SWITCH ID LLAVE_IZQ cases . LLAVE_DER

    LLAVE_DER       shift and go to state 189


state 163

    (83) cases -> case .
    (84) cases -> case . default
    (85) cases -> case . cases
    (87) default -> . DEFAULT DOS_PUNTOS programa
    (83) cases -> . case
    (84) cases -> . case default
    (85) cases -> . case cases
    (86) case -> . CASE factor DOS_PUNTOS programa

    LLAVE_DER       reduce using rule 83 (cases -> case .)
    DEFAULT         shift and go to state 192
    CASE            shift and go to state 164

    case                           shift and go to state 163
    default                        shift and go to state 190
    cases                          shift and go to state 191

state 164

    (86) case -> CASE . factor DOS_PUNTOS programa
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 193

state 165

    (103) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA . valor PARENT_DER
    (100) valor -> . CADENA
    (101) valor -> . NUMERO

    CADENA          shift and go to state 112
    NUMERO          shift and go to state 113

    valor                          shift and go to state 194

state 166

    (108) argumentos -> ID . tipo_dato
    (109) argumentos -> ID . tipo_dato COMA argumentos
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 195

state 167

    (105) funcion -> FUNC ID PARENT_IZQ argumentos . PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> FUNC ID PARENT_IZQ argumentos . PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> FUNC ID PARENT_IZQ argumentos . PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER

    PARENT_DER      shift and go to state 196


state 168

    (29) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA . COMA NUMERO PARENT_DER

    COMA            shift and go to state 197


state 169

    (30) impresion -> FMT PUNTO PRINTF PARENT_IZQ empty . PARENT_DER

    PARENT_DER      shift and go to state 198


state 170

    (31) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA . COMA NUMERO PARENT_DER
    (33) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA . PARENT_DER

    COMA            shift and go to state 199
    PARENT_DER      shift and go to state 200


state 171

    (32) impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty . PARENT_DER

    PARENT_DER      shift and go to state 201


state 172

    (70) sentencia -> IF factor comparacion factor LLAVE_IZQ . programa LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (28) programa -> . error_arr
    (63) expression -> . expression MAS term
    (64) expression -> . expression MENOS term
    (65) expression -> . term
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (33) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (70) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (38) asignacion -> . ID ASIGNACION factor
    (39) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (40) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (34) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (35) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (128) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (36) companum -> . NUMERO comparacion NUMERO
    (37) compaid -> . ID comparacion ID
    (41) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (60) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (62) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (82) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (88) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (89) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (90) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (102) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (103) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (104) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (105) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (129) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (134) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (135) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (130) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (132) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (111) seman_operacion -> . NUMERO MAS NUMERO
    (112) seman_operacion -> . NUMERO MENOS NUMERO
    (113) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (114) seman_operacion -> . NUMERO DIVISOR NUMERO
    (115) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (116) seman_operacion -> . FLOAT MAS NUMERO
    (117) seman_operacion -> . FLOAT MENOS NUMERO
    (118) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (119) seman_operacion -> . FLOAT DIVISOR NUMERO
    (120) seman_operacion -> . NUMERO MAS FLOAT
    (121) seman_operacion -> . NUMERO MENOS FLOAT
    (122) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (123) seman_operacion -> . NUMERO DIVISOR FLOAT
    (124) seman_operacion -> . FLOAT MAS FLOAT
    (125) seman_operacion -> . FLOAT MENOS FLOAT
    (126) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (127) seman_operacion -> . FLOAT DIVISOR FLOAT
    (42) incremento -> . ID INCREMENTO
    (43) incremento -> . ID ASIGNACION ID
    (44) incremento -> . ID DECREMENTO
    (131) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (133) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (48) error_arr -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER
    (66) term -> . term MULTIPLICADOR factor
    (67) term -> . term DIVISOR factor
    (68) term -> . term MOD_DIVISION factor
    (69) term -> . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 31
    IF              shift and go to state 35
    ID              shift and go to state 37
    VAR             shift and go to state 38
    STRCONV         shift and go to state 39
    NUMERO          shift and go to state 34
    FOR             shift and go to state 40
    SWITCH          shift and go to state 41
    DELETE          shift and go to state 42
    FUNC            shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 33
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 36
    programa                       shift and go to state 202
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    incremento                     shift and go to state 26
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    error_arr                      shift and go to state 29
    term                           shift and go to state 30

state 173

    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . tipo_dato
    (46) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .
    (48) error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . INT LLAVE_IZQ noenteros LLAVE_DER
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 204
    $end            reduce using rule 53 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .)
    LLAVE_DER       reduce using rule 53 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .)
    DEFAULT         reduce using rule 53 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .)
    CASE            reduce using rule 53 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .)
    RETURN          reduce using rule 53 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .)
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 203

state 174

    (60) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ . CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ . CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER

    CORCHETE_DER    shift and go to state 205


state 175

    (89) map -> ID ASIGNACION MAKE PARENT_IZQ MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    CORCHETE_IZQ    shift and go to state 206


state 176

    (90) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 207


state 177

    (102) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION . valor
    (100) valor -> . CADENA
    (101) valor -> . NUMERO

    CADENA          shift and go to state 112
    NUMERO          shift and go to state 113

    valor                          shift and go to state 208

state 178

    (39) asignacion -> VAR ID tipo_dato ASIGNACION factor .

    $end            reduce using rule 39 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    LLAVE_DER       reduce using rule 39 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    DEFAULT         reduce using rule 39 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    CASE            reduce using rule 39 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    RETURN          reduce using rule 39 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)


state 179

    (40) asignacion -> VAR ID COMA ID tipo_dato . ASIGNACION factor COMA factor

    ASIGNACION      shift and go to state 209


state 180

    (88) map -> VAR ID MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 210


state 181

    (128) boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN . PARENT_DER

    PARENT_DER      shift and go to state 211


state 182

    (129) cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA . PARENT_DER

    PARENT_DER      shift and go to state 212


state 183

    (134) enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO . COMA NUMERO PARENT_DER

    COMA            shift and go to state 213


state 184

    (135) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA . COMA NUMERO COMA NUMERO PARENT_DER

    COMA            shift and go to state 214


state 185

    (130) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT . COMA CADENA COMA NUMERO PARENT_DER
    (131) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT . COMA NUMERO PARENT_DER

    COMA            shift and go to state 215


state 186

    (133) errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA . PARENT_DER

    PARENT_DER      shift and go to state 216


state 187

    (132) cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA . COMA NUMERO PARENT_DER

    COMA            shift and go to state 217


state 188

    (41) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA . ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ID              shift and go to state 218


state 189

    (82) switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .

    $end            reduce using rule 82 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    LLAVE_DER       reduce using rule 82 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    DEFAULT         reduce using rule 82 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    CASE            reduce using rule 82 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    RETURN          reduce using rule 82 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)


state 190

    (84) cases -> case default .

    LLAVE_DER       reduce using rule 84 (cases -> case default .)


state 191

    (85) cases -> case cases .

    LLAVE_DER       reduce using rule 85 (cases -> case cases .)


state 192

    (87) default -> DEFAULT . DOS_PUNTOS programa

    DOS_PUNTOS      shift and go to state 219


state 193

    (86) case -> CASE factor . DOS_PUNTOS programa

    DOS_PUNTOS      shift and go to state 220


state 194

    (103) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor . PARENT_DER

    PARENT_DER      shift and go to state 221


state 195

    (108) argumentos -> ID tipo_dato .
    (109) argumentos -> ID tipo_dato . COMA argumentos

    PARENT_DER      reduce using rule 108 (argumentos -> ID tipo_dato .)
    COMA            shift and go to state 222


state 196

    (105) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER . tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER . tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER . tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 223

state 197

    (29) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 224


state 198

    (30) impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .

    $end            reduce using rule 30 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    LLAVE_DER       reduce using rule 30 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    DEFAULT         reduce using rule 30 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    CASE            reduce using rule 30 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    RETURN          reduce using rule 30 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)


state 199

    (31) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 225


state 200

    (33) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 33 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 33 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .)
    DEFAULT         reduce using rule 33 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .)
    CASE            reduce using rule 33 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .)
    RETURN          reduce using rule 33 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .)


state 201

    (32) impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .

    $end            reduce using rule 32 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    LLAVE_DER       reduce using rule 32 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    DEFAULT         reduce using rule 32 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    CASE            reduce using rule 32 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    RETURN          reduce using rule 32 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)


state 202

    (70) sentencia -> IF factor comparacion factor LLAVE_IZQ programa . LLAVE_DER

    LLAVE_DER       shift and go to state 226


state 203

    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .
    (46) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato . LLAVE_IZQ valores LLAVE_DER

    $end            reduce using rule 45 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .)
    LLAVE_DER       reduce using rule 45 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .)
    DEFAULT         reduce using rule 45 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .)
    CASE            reduce using rule 45 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .)
    RETURN          reduce using rule 45 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .)
    LLAVE_IZQ       shift and go to state 227


state 204

    (47) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT . LLAVE_IZQ enteros LLAVE_DER
    (48) error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT . LLAVE_IZQ noenteros LLAVE_DER
    (91) tipo_dato -> INT .

  ! shift/reduce conflict for LLAVE_IZQ resolved as shift
    LLAVE_IZQ       shift and go to state 228
    $end            reduce using rule 91 (tipo_dato -> INT .)
    LLAVE_DER       reduce using rule 91 (tipo_dato -> INT .)
    DEFAULT         reduce using rule 91 (tipo_dato -> INT .)
    CASE            reduce using rule 91 (tipo_dato -> INT .)
    RETURN          reduce using rule 91 (tipo_dato -> INT .)

  ! LLAVE_IZQ       [ reduce using rule 91 (tipo_dato -> INT .) ]


state 205

    (60) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER . tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER . tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 229

state 206

    (89) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 230

state 207

    (90) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato LLAVE_IZQ valores LLAVE_DER
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 231

state 208

    (102) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .

    $end            reduce using rule 102 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    LLAVE_DER       reduce using rule 102 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    DEFAULT         reduce using rule 102 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    CASE            reduce using rule 102 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    RETURN          reduce using rule 102 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)


state 209

    (40) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION . factor COMA factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 232

state 210

    (88) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato LLAVE_IZQ valores LLAVE_DER
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 233

state 211

    (128) boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .

    $end            reduce using rule 128 (boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .)
    LLAVE_DER       reduce using rule 128 (boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .)
    DEFAULT         reduce using rule 128 (boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .)
    CASE            reduce using rule 128 (boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .)
    RETURN          reduce using rule 128 (boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .)


state 212

    (129) cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 129 (cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 129 (cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .)
    DEFAULT         reduce using rule 129 (cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .)
    CASE            reduce using rule 129 (cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .)
    RETURN          reduce using rule 129 (cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .)


state 213

    (134) enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 234


state 214

    (135) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA . NUMERO COMA NUMERO PARENT_DER

    NUMERO          shift and go to state 235


state 215

    (130) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA . CADENA COMA NUMERO PARENT_DER
    (131) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA . NUMERO PARENT_DER

    CADENA          shift and go to state 236
    NUMERO          shift and go to state 237


state 216

    (133) errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 133 (errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 133 (errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .)
    DEFAULT         reduce using rule 133 (errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .)
    CASE            reduce using rule 133 (errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .)
    RETURN          reduce using rule 133 (errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .)


state 217

    (132) cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 238


state 218

    (41) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID . comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (71) comparacion -> . IGUALDAD
    (72) comparacion -> . MAYOR
    (73) comparacion -> . MENOR
    (74) comparacion -> . MAYOR_IGU
    (75) comparacion -> . MENOR_IGU
    (76) comparacion -> . DESIGUALDAD

    IGUALDAD        shift and go to state 61
    MAYOR           shift and go to state 62
    MENOR           shift and go to state 63
    MAYOR_IGU       shift and go to state 64
    MENOR_IGU       shift and go to state 65
    DESIGUALDAD     shift and go to state 66

    comparacion                    shift and go to state 239

state 219

    (87) default -> DEFAULT DOS_PUNTOS . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (28) programa -> . error_arr
    (63) expression -> . expression MAS term
    (64) expression -> . expression MENOS term
    (65) expression -> . term
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (33) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (70) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (38) asignacion -> . ID ASIGNACION factor
    (39) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (40) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (34) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (35) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (128) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (36) companum -> . NUMERO comparacion NUMERO
    (37) compaid -> . ID comparacion ID
    (41) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (60) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (62) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (82) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (88) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (89) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (90) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (102) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (103) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (104) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (105) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (129) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (134) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (135) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (130) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (132) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (111) seman_operacion -> . NUMERO MAS NUMERO
    (112) seman_operacion -> . NUMERO MENOS NUMERO
    (113) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (114) seman_operacion -> . NUMERO DIVISOR NUMERO
    (115) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (116) seman_operacion -> . FLOAT MAS NUMERO
    (117) seman_operacion -> . FLOAT MENOS NUMERO
    (118) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (119) seman_operacion -> . FLOAT DIVISOR NUMERO
    (120) seman_operacion -> . NUMERO MAS FLOAT
    (121) seman_operacion -> . NUMERO MENOS FLOAT
    (122) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (123) seman_operacion -> . NUMERO DIVISOR FLOAT
    (124) seman_operacion -> . FLOAT MAS FLOAT
    (125) seman_operacion -> . FLOAT MENOS FLOAT
    (126) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (127) seman_operacion -> . FLOAT DIVISOR FLOAT
    (42) incremento -> . ID INCREMENTO
    (43) incremento -> . ID ASIGNACION ID
    (44) incremento -> . ID DECREMENTO
    (131) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (133) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (48) error_arr -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER
    (66) term -> . term MULTIPLICADOR factor
    (67) term -> . term DIVISOR factor
    (68) term -> . term MOD_DIVISION factor
    (69) term -> . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 31
    IF              shift and go to state 35
    ID              shift and go to state 37
    VAR             shift and go to state 38
    STRCONV         shift and go to state 39
    NUMERO          shift and go to state 34
    FOR             shift and go to state 40
    SWITCH          shift and go to state 41
    DELETE          shift and go to state 42
    FUNC            shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 33
    PARENT_IZQ      shift and go to state 32

    programa                       shift and go to state 240
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    incremento                     shift and go to state 26
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    error_arr                      shift and go to state 29
    term                           shift and go to state 30
    factor                         shift and go to state 36

state 220

    (86) case -> CASE factor DOS_PUNTOS . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (28) programa -> . error_arr
    (63) expression -> . expression MAS term
    (64) expression -> . expression MENOS term
    (65) expression -> . term
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (33) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (70) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (38) asignacion -> . ID ASIGNACION factor
    (39) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (40) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (34) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (35) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (128) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (36) companum -> . NUMERO comparacion NUMERO
    (37) compaid -> . ID comparacion ID
    (41) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (60) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (62) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (82) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (88) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (89) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (90) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (102) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (103) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (104) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (105) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (129) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (134) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (135) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (130) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (132) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (111) seman_operacion -> . NUMERO MAS NUMERO
    (112) seman_operacion -> . NUMERO MENOS NUMERO
    (113) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (114) seman_operacion -> . NUMERO DIVISOR NUMERO
    (115) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (116) seman_operacion -> . FLOAT MAS NUMERO
    (117) seman_operacion -> . FLOAT MENOS NUMERO
    (118) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (119) seman_operacion -> . FLOAT DIVISOR NUMERO
    (120) seman_operacion -> . NUMERO MAS FLOAT
    (121) seman_operacion -> . NUMERO MENOS FLOAT
    (122) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (123) seman_operacion -> . NUMERO DIVISOR FLOAT
    (124) seman_operacion -> . FLOAT MAS FLOAT
    (125) seman_operacion -> . FLOAT MENOS FLOAT
    (126) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (127) seman_operacion -> . FLOAT DIVISOR FLOAT
    (42) incremento -> . ID INCREMENTO
    (43) incremento -> . ID ASIGNACION ID
    (44) incremento -> . ID DECREMENTO
    (131) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (133) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (48) error_arr -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER
    (66) term -> . term MULTIPLICADOR factor
    (67) term -> . term DIVISOR factor
    (68) term -> . term MOD_DIVISION factor
    (69) term -> . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 31
    IF              shift and go to state 35
    ID              shift and go to state 37
    VAR             shift and go to state 38
    STRCONV         shift and go to state 39
    NUMERO          shift and go to state 34
    FOR             shift and go to state 40
    SWITCH          shift and go to state 41
    DELETE          shift and go to state 42
    FUNC            shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 33
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 36
    programa                       shift and go to state 241
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    incremento                     shift and go to state 26
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    error_arr                      shift and go to state 29
    term                           shift and go to state 30

state 221

    (103) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .

    $end            reduce using rule 103 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    LLAVE_DER       reduce using rule 103 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    DEFAULT         reduce using rule 103 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    CASE            reduce using rule 103 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    RETURN          reduce using rule 103 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)


state 222

    (109) argumentos -> ID tipo_dato COMA . argumentos
    (108) argumentos -> . ID tipo_dato
    (109) argumentos -> . ID tipo_dato COMA argumentos

    ID              shift and go to state 166

    argumentos                     shift and go to state 242

state 223

    (105) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato . LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato . LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato . LLAVE_IZQ RETURN ID LLAVE_DER

    LLAVE_IZQ       shift and go to state 243


state 224

    (29) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 244


state 225

    (31) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 245


state 226

    (70) sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 70 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 70 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 70 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 70 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 70 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)


state 227

    (46) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ . valores LLAVE_DER
    (56) valores -> . factor
    (57) valores -> . factor COMA valores
    (97) valores -> . clave_valor
    (98) valores -> . clave_valor COMA valores
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER
    (99) clave_valor -> . valor DOS_PUNTOS valor
    (100) valor -> . CADENA
    (101) valor -> . NUMERO

    NUMERO          shift and go to state 249
    ID              shift and go to state 53
    CADENA          shift and go to state 250
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    valores                        shift and go to state 246
    factor                         shift and go to state 247
    clave_valor                    shift and go to state 248
    valor                          shift and go to state 251

state 228

    (47) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ . enteros LLAVE_DER
    (48) error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ . noenteros LLAVE_DER
    (58) enteros -> . NUMERO
    (59) enteros -> . NUMERO COMA enteros
    (49) noenteros -> . ID
    (50) noenteros -> . CADENA
    (51) noenteros -> . FLOAT
    (52) noenteros -> . noenteros COMA noenteros

    NUMERO          shift and go to state 255
    ID              shift and go to state 252
    CADENA          shift and go to state 256
    FLOAT           shift and go to state 257

    enteros                        shift and go to state 253
    noenteros                      shift and go to state 254

state 229

    (60) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato . COMA NUMERO PARENT_DER
    (61) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato . COMA NUMERO COMA NUMERO PARENT_DER

    COMA            shift and go to state 258


state 230

    (89) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato PARENT_DER

    CORCHETE_DER    shift and go to state 259


state 231

    (90) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . LLAVE_IZQ valores LLAVE_DER

    LLAVE_IZQ       shift and go to state 260


state 232

    (40) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor . COMA factor

    COMA            shift and go to state 261


state 233

    (88) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . LLAVE_IZQ valores LLAVE_DER

    LLAVE_IZQ       shift and go to state 262


state 234

    (134) enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 263


state 235

    (135) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO . COMA NUMERO PARENT_DER

    COMA            shift and go to state 264


state 236

    (130) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA . COMA NUMERO PARENT_DER

    COMA            shift and go to state 265


state 237

    (131) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 266


state 238

    (132) cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 267


state 239

    (41) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion . factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 268

state 240

    (87) default -> DEFAULT DOS_PUNTOS programa .

    LLAVE_DER       reduce using rule 87 (default -> DEFAULT DOS_PUNTOS programa .)


state 241

    (86) case -> CASE factor DOS_PUNTOS programa .

    DEFAULT         reduce using rule 86 (case -> CASE factor DOS_PUNTOS programa .)
    CASE            reduce using rule 86 (case -> CASE factor DOS_PUNTOS programa .)
    LLAVE_DER       reduce using rule 86 (case -> CASE factor DOS_PUNTOS programa .)


state 242

    (109) argumentos -> ID tipo_dato COMA argumentos .

    PARENT_DER      reduce using rule 109 (argumentos -> ID tipo_dato COMA argumentos .)


state 243

    (105) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ . programa LLAVE_DER
    (106) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ . programa RETURN ID LLAVE_DER
    (107) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ . RETURN ID LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (28) programa -> . error_arr
    (63) expression -> . expression MAS term
    (64) expression -> . expression MENOS term
    (65) expression -> . term
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (33) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (70) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (38) asignacion -> . ID ASIGNACION factor
    (39) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (40) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (34) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (35) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (128) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (36) companum -> . NUMERO comparacion NUMERO
    (37) compaid -> . ID comparacion ID
    (41) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (60) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (62) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (82) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (88) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (89) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (90) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (102) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (103) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (104) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (105) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (129) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (134) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (135) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (130) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (132) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (111) seman_operacion -> . NUMERO MAS NUMERO
    (112) seman_operacion -> . NUMERO MENOS NUMERO
    (113) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (114) seman_operacion -> . NUMERO DIVISOR NUMERO
    (115) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (116) seman_operacion -> . FLOAT MAS NUMERO
    (117) seman_operacion -> . FLOAT MENOS NUMERO
    (118) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (119) seman_operacion -> . FLOAT DIVISOR NUMERO
    (120) seman_operacion -> . NUMERO MAS FLOAT
    (121) seman_operacion -> . NUMERO MENOS FLOAT
    (122) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (123) seman_operacion -> . NUMERO DIVISOR FLOAT
    (124) seman_operacion -> . FLOAT MAS FLOAT
    (125) seman_operacion -> . FLOAT MENOS FLOAT
    (126) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (127) seman_operacion -> . FLOAT DIVISOR FLOAT
    (42) incremento -> . ID INCREMENTO
    (43) incremento -> . ID ASIGNACION ID
    (44) incremento -> . ID DECREMENTO
    (131) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (133) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (48) error_arr -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER
    (66) term -> . term MULTIPLICADOR factor
    (67) term -> . term DIVISOR factor
    (68) term -> . term MOD_DIVISION factor
    (69) term -> . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    RETURN          shift and go to state 270
    FMT             shift and go to state 31
    IF              shift and go to state 35
    ID              shift and go to state 37
    VAR             shift and go to state 38
    STRCONV         shift and go to state 39
    NUMERO          shift and go to state 34
    FOR             shift and go to state 40
    SWITCH          shift and go to state 41
    DELETE          shift and go to state 42
    FUNC            shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 33
    PARENT_IZQ      shift and go to state 32

    programa                       shift and go to state 269
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    incremento                     shift and go to state 26
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    error_arr                      shift and go to state 29
    term                           shift and go to state 30
    factor                         shift and go to state 36

state 244

    (29) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .

    $end            reduce using rule 29 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 29 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 29 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 29 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 29 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)


state 245

    (31) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .

    $end            reduce using rule 31 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 31 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 31 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 31 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 31 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)


state 246

    (46) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 271


state 247

    (56) valores -> factor .
    (57) valores -> factor . COMA valores

    LLAVE_DER       reduce using rule 56 (valores -> factor .)
    COMA            shift and go to state 272


state 248

    (97) valores -> clave_valor .
    (98) valores -> clave_valor . COMA valores

    LLAVE_DER       reduce using rule 97 (valores -> clave_valor .)
    COMA            shift and go to state 273


state 249

    (77) factor -> NUMERO .
    (101) valor -> NUMERO .

    COMA            reduce using rule 77 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 77 (factor -> NUMERO .)
    DOS_PUNTOS      reduce using rule 101 (valor -> NUMERO .)


state 250

    (79) factor -> CADENA .
    (100) valor -> CADENA .

    COMA            reduce using rule 79 (factor -> CADENA .)
    LLAVE_DER       reduce using rule 79 (factor -> CADENA .)
    DOS_PUNTOS      reduce using rule 100 (valor -> CADENA .)


state 251

    (99) clave_valor -> valor . DOS_PUNTOS valor

    DOS_PUNTOS      shift and go to state 274


state 252

    (49) noenteros -> ID .

    LLAVE_DER       reduce using rule 49 (noenteros -> ID .)
    COMA            reduce using rule 49 (noenteros -> ID .)


state 253

    (47) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros . LLAVE_DER

    LLAVE_DER       shift and go to state 275


state 254

    (48) error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros . LLAVE_DER
    (52) noenteros -> noenteros . COMA noenteros

    LLAVE_DER       shift and go to state 276
    COMA            shift and go to state 277


state 255

    (58) enteros -> NUMERO .
    (59) enteros -> NUMERO . COMA enteros

    LLAVE_DER       reduce using rule 58 (enteros -> NUMERO .)
    COMA            shift and go to state 278


state 256

    (50) noenteros -> CADENA .

    LLAVE_DER       reduce using rule 50 (noenteros -> CADENA .)
    COMA            reduce using rule 50 (noenteros -> CADENA .)


state 257

    (51) noenteros -> FLOAT .

    LLAVE_DER       reduce using rule 51 (noenteros -> FLOAT .)
    COMA            reduce using rule 51 (noenteros -> FLOAT .)


state 258

    (60) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA . NUMERO PARENT_DER
    (61) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA . NUMERO COMA NUMERO PARENT_DER

    NUMERO          shift and go to state 279


state 259

    (89) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato PARENT_DER
    (91) tipo_dato -> . INT
    (92) tipo_dato -> . STRING
    (93) tipo_dato -> . INT64
    (94) tipo_dato -> . FLOAT32
    (95) tipo_dato -> . FLOAT64
    (96) tipo_dato -> . INT32

    INT             shift and go to state 117
    STRING          shift and go to state 118
    INT64           shift and go to state 119
    FLOAT32         shift and go to state 120
    FLOAT64         shift and go to state 121
    INT32           shift and go to state 122

    tipo_dato                      shift and go to state 280

state 260

    (90) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ . valores LLAVE_DER
    (56) valores -> . factor
    (57) valores -> . factor COMA valores
    (97) valores -> . clave_valor
    (98) valores -> . clave_valor COMA valores
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER
    (99) clave_valor -> . valor DOS_PUNTOS valor
    (100) valor -> . CADENA
    (101) valor -> . NUMERO

    NUMERO          shift and go to state 249
    ID              shift and go to state 53
    CADENA          shift and go to state 250
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    valores                        shift and go to state 281
    factor                         shift and go to state 247
    clave_valor                    shift and go to state 248
    valor                          shift and go to state 251

state 261

    (40) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 52
    ID              shift and go to state 53
    CADENA          shift and go to state 33
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 282

state 262

    (88) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ . valores LLAVE_DER
    (56) valores -> . factor
    (57) valores -> . factor COMA valores
    (97) valores -> . clave_valor
    (98) valores -> . clave_valor COMA valores
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER
    (99) clave_valor -> . valor DOS_PUNTOS valor
    (100) valor -> . CADENA
    (101) valor -> . NUMERO

    NUMERO          shift and go to state 249
    ID              shift and go to state 53
    CADENA          shift and go to state 250
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    valores                        shift and go to state 283
    factor                         shift and go to state 247
    clave_valor                    shift and go to state 248
    valor                          shift and go to state 251

state 263

    (134) enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .

    $end            reduce using rule 134 (enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 134 (enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 134 (enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 134 (enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 134 (enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .)


state 264

    (135) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 284


state 265

    (130) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 285


state 266

    (131) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .

    $end            reduce using rule 131 (errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 131 (errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 131 (errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 131 (errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 131 (errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .)


state 267

    (132) cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .

    $end            reduce using rule 132 (cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 132 (cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 132 (cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 132 (cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 132 (cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)


state 268

    (41) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor . FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    FIN_SENTENCIA   shift and go to state 286


state 269

    (105) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa . LLAVE_DER
    (106) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa . RETURN ID LLAVE_DER

    LLAVE_DER       shift and go to state 287
    RETURN          shift and go to state 288


state 270

    (107) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN . ID LLAVE_DER

    ID              shift and go to state 289


state 271

    (46) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 46 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 46 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 46 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 46 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 46 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)


state 272

    (57) valores -> factor COMA . valores
    (56) valores -> . factor
    (57) valores -> . factor COMA valores
    (97) valores -> . clave_valor
    (98) valores -> . clave_valor COMA valores
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER
    (99) clave_valor -> . valor DOS_PUNTOS valor
    (100) valor -> . CADENA
    (101) valor -> . NUMERO

    NUMERO          shift and go to state 249
    ID              shift and go to state 53
    CADENA          shift and go to state 250
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 247
    valores                        shift and go to state 290
    clave_valor                    shift and go to state 248
    valor                          shift and go to state 251

state 273

    (98) valores -> clave_valor COMA . valores
    (56) valores -> . factor
    (57) valores -> . factor COMA valores
    (97) valores -> . clave_valor
    (98) valores -> . clave_valor COMA valores
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER
    (99) clave_valor -> . valor DOS_PUNTOS valor
    (100) valor -> . CADENA
    (101) valor -> . NUMERO

    NUMERO          shift and go to state 249
    ID              shift and go to state 53
    CADENA          shift and go to state 250
    FLOAT           shift and go to state 54
    PARENT_IZQ      shift and go to state 32

    clave_valor                    shift and go to state 248
    valores                        shift and go to state 291
    factor                         shift and go to state 247
    valor                          shift and go to state 251

state 274

    (99) clave_valor -> valor DOS_PUNTOS . valor
    (100) valor -> . CADENA
    (101) valor -> . NUMERO

    CADENA          shift and go to state 112
    NUMERO          shift and go to state 113

    valor                          shift and go to state 292

state 275

    (47) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER .

    $end            reduce using rule 47 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER .)
    LLAVE_DER       reduce using rule 47 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER .)
    DEFAULT         reduce using rule 47 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER .)
    CASE            reduce using rule 47 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER .)
    RETURN          reduce using rule 47 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER .)


state 276

    (48) error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER .

    $end            reduce using rule 48 (error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER .)
    LLAVE_DER       reduce using rule 48 (error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER .)
    DEFAULT         reduce using rule 48 (error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER .)
    CASE            reduce using rule 48 (error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER .)
    RETURN          reduce using rule 48 (error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER .)


state 277

    (52) noenteros -> noenteros COMA . noenteros
    (49) noenteros -> . ID
    (50) noenteros -> . CADENA
    (51) noenteros -> . FLOAT
    (52) noenteros -> . noenteros COMA noenteros

    ID              shift and go to state 252
    CADENA          shift and go to state 256
    FLOAT           shift and go to state 257

    noenteros                      shift and go to state 293

state 278

    (59) enteros -> NUMERO COMA . enteros
    (58) enteros -> . NUMERO
    (59) enteros -> . NUMERO COMA enteros

    NUMERO          shift and go to state 255

    enteros                        shift and go to state 294

state 279

    (60) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO . PARENT_DER
    (61) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO . COMA NUMERO PARENT_DER

    PARENT_DER      shift and go to state 296
    COMA            shift and go to state 295


state 280

    (89) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . PARENT_DER

    PARENT_DER      shift and go to state 297


state 281

    (90) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 298


state 282

    (40) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .

    $end            reduce using rule 40 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    LLAVE_DER       reduce using rule 40 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    DEFAULT         reduce using rule 40 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    CASE            reduce using rule 40 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    RETURN          reduce using rule 40 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)


state 283

    (88) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 299


state 284

    (135) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 300


state 285

    (130) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 301


state 286

    (41) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA . incremento LLAVE_IZQ programa LLAVE_DER
    (42) incremento -> . ID INCREMENTO
    (43) incremento -> . ID ASIGNACION ID
    (44) incremento -> . ID DECREMENTO

    ID              shift and go to state 302

    incremento                     shift and go to state 303

state 287

    (105) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 105 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 105 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 105 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 105 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 105 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)


state 288

    (106) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN . ID LLAVE_DER

    ID              shift and go to state 304


state 289

    (107) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID . LLAVE_DER

    LLAVE_DER       shift and go to state 305


state 290

    (57) valores -> factor COMA valores .

    LLAVE_DER       reduce using rule 57 (valores -> factor COMA valores .)


state 291

    (98) valores -> clave_valor COMA valores .

    LLAVE_DER       reduce using rule 98 (valores -> clave_valor COMA valores .)


state 292

    (99) clave_valor -> valor DOS_PUNTOS valor .

    COMA            reduce using rule 99 (clave_valor -> valor DOS_PUNTOS valor .)
    LLAVE_DER       reduce using rule 99 (clave_valor -> valor DOS_PUNTOS valor .)


state 293

    (52) noenteros -> noenteros COMA noenteros .
    (52) noenteros -> noenteros . COMA noenteros

  ! shift/reduce conflict for COMA resolved as shift
    LLAVE_DER       reduce using rule 52 (noenteros -> noenteros COMA noenteros .)
    COMA            shift and go to state 277

  ! COMA            [ reduce using rule 52 (noenteros -> noenteros COMA noenteros .) ]


state 294

    (59) enteros -> NUMERO COMA enteros .

    LLAVE_DER       reduce using rule 59 (enteros -> NUMERO COMA enteros .)


state 295

    (61) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 306


state 296

    (60) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .

    $end            reduce using rule 60 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 60 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 60 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 60 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 60 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .)


state 297

    (89) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .

    $end            reduce using rule 89 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    LLAVE_DER       reduce using rule 89 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    DEFAULT         reduce using rule 89 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    CASE            reduce using rule 89 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    RETURN          reduce using rule 89 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)


state 298

    (90) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 90 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 90 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 90 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 90 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 90 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)


state 299

    (88) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 88 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 88 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 88 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 88 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 88 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)


state 300

    (135) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .

    $end            reduce using rule 135 (cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 135 (cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 135 (cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 135 (cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 135 (cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .)


state 301

    (130) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .

    $end            reduce using rule 130 (flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 130 (flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 130 (flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 130 (flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 130 (flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .)


state 302

    (42) incremento -> ID . INCREMENTO
    (43) incremento -> ID . ASIGNACION ID
    (44) incremento -> ID . DECREMENTO

    INCREMENTO      shift and go to state 72
    ASIGNACION      shift and go to state 307
    DECREMENTO      shift and go to state 73


state 303

    (41) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento . LLAVE_IZQ programa LLAVE_DER

    LLAVE_IZQ       shift and go to state 308


state 304

    (106) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID . LLAVE_DER

    LLAVE_DER       shift and go to state 309


state 305

    (107) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .

    $end            reduce using rule 107 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .)
    LLAVE_DER       reduce using rule 107 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .)
    DEFAULT         reduce using rule 107 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .)
    CASE            reduce using rule 107 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .)
    RETURN          reduce using rule 107 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .)


state 306

    (61) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 310


state 307

    (43) incremento -> ID ASIGNACION . ID

    ID              shift and go to state 311


state 308

    (41) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ . programa LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (28) programa -> . error_arr
    (63) expression -> . expression MAS term
    (64) expression -> . expression MENOS term
    (65) expression -> . term
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (33) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (70) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (38) asignacion -> . ID ASIGNACION factor
    (39) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (40) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (34) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (35) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (128) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (36) companum -> . NUMERO comparacion NUMERO
    (37) compaid -> . ID comparacion ID
    (41) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (47) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER
    (53) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (60) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (61) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (62) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (82) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (88) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (89) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (90) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (102) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (103) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (104) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (105) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (106) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (107) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (129) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (134) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (135) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (130) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (132) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (111) seman_operacion -> . NUMERO MAS NUMERO
    (112) seman_operacion -> . NUMERO MENOS NUMERO
    (113) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (114) seman_operacion -> . NUMERO DIVISOR NUMERO
    (115) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (116) seman_operacion -> . FLOAT MAS NUMERO
    (117) seman_operacion -> . FLOAT MENOS NUMERO
    (118) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (119) seman_operacion -> . FLOAT DIVISOR NUMERO
    (120) seman_operacion -> . NUMERO MAS FLOAT
    (121) seman_operacion -> . NUMERO MENOS FLOAT
    (122) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (123) seman_operacion -> . NUMERO DIVISOR FLOAT
    (124) seman_operacion -> . FLOAT MAS FLOAT
    (125) seman_operacion -> . FLOAT MENOS FLOAT
    (126) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (127) seman_operacion -> . FLOAT DIVISOR FLOAT
    (42) incremento -> . ID INCREMENTO
    (43) incremento -> . ID ASIGNACION ID
    (44) incremento -> . ID DECREMENTO
    (131) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (133) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (48) error_arr -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER
    (66) term -> . term MULTIPLICADOR factor
    (67) term -> . term DIVISOR factor
    (68) term -> . term MOD_DIVISION factor
    (69) term -> . factor
    (77) factor -> . NUMERO
    (78) factor -> . ID
    (79) factor -> . CADENA
    (80) factor -> . FLOAT
    (81) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 31
    IF              shift and go to state 35
    ID              shift and go to state 37
    VAR             shift and go to state 38
    STRCONV         shift and go to state 39
    NUMERO          shift and go to state 34
    FOR             shift and go to state 40
    SWITCH          shift and go to state 41
    DELETE          shift and go to state 42
    FUNC            shift and go to state 43
    FLOAT           shift and go to state 44
    CADENA          shift and go to state 33
    PARENT_IZQ      shift and go to state 32

    factor                         shift and go to state 36
    incremento                     shift and go to state 26
    programa                       shift and go to state 312
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    error_arr                      shift and go to state 29
    term                           shift and go to state 30

state 309

    (106) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .

    $end            reduce using rule 106 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    LLAVE_DER       reduce using rule 106 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    DEFAULT         reduce using rule 106 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    CASE            reduce using rule 106 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    RETURN          reduce using rule 106 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)


state 310

    (61) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .

    $end            reduce using rule 61 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 61 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 61 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 61 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 61 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .)


state 311

    (43) incremento -> ID ASIGNACION ID .

    LLAVE_IZQ       reduce using rule 43 (incremento -> ID ASIGNACION ID .)


state 312

    (41) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa . LLAVE_DER

    LLAVE_DER       shift and go to state 313


state 313

    (41) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 41 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 41 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 41 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 41 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 41 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULTIPLICADOR in state 34 resolved as shift
WARNING: shift/reduce conflict for DIVISOR in state 34 resolved as shift
WARNING: shift/reduce conflict for MOD_DIVISION in state 34 resolved as shift
WARNING: shift/reduce conflict for MAS in state 34 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 34 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICADOR in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVISOR in state 44 resolved as shift
WARNING: shift/reduce conflict for MAS in state 44 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 44 resolved as shift
WARNING: shift/reduce conflict for LLAVE_IZQ in state 204 resolved as shift
WARNING: shift/reduce conflict for COMA in state 293 resolved as shift
WARNING: reduce/reduce conflict in state 103 resolved using rule (incremento -> ID ASIGNACION ID)
WARNING: rejected rule (factor -> ID) in state 103
WARNING: reduce/reduce conflict in state 149 resolved using rule (longvariable -> ID PARENT_IZQ ID PARENT_DER)
WARNING: rejected rule (capslice -> ID PARENT_IZQ ID PARENT_DER) in state 149
WARNING: Rule (capslice -> ID PARENT_IZQ ID PARENT_DER) is never reduced
