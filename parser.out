Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    BOOLEAN
    BREAK
    COMILLA
    COMMENT_BLOQUE_DER
    COMMENT_BLOQUE_IZQ
    COMMENT_LINEA
    CONST
    CONTINUE
    DEFER
    ELSE
    ESPACIADO
    FALLTHROUGH
    GO
    IGUAL
    IMPORT
    INTERFACE
    LEN
    PIPE
    PRINT
    Package
    RANGE
    SELECT
    STRUCT
    TYPE
    VACIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> expression
Rule 2     programa -> impresion
Rule 3     programa -> sentencia
Rule 4     programa -> asignacion
Rule 5     programa -> longvariable
Rule 6     programa -> boolcadena
Rule 7     programa -> companum
Rule 8     programa -> compaid
Rule 9     programa -> sentenciafor
Rule 10    programa -> arreglo
Rule 11    programa -> slice
Rule 12    programa -> capslice
Rule 13    programa -> switch
Rule 14    programa -> map
Rule 15    programa -> asignar_valor_map
Rule 16    programa -> eliminar_valor_map
Rule 17    programa -> obtener_valor_map
Rule 18    programa -> funcion
Rule 19    programa -> splitcadena
Rule 20    impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
Rule 21    impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
Rule 22    impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
Rule 23    impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
Rule 24    splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER
Rule 25    separador -> ID
Rule 26    longvariable -> ID PARENT_IZQ CADENA PARENT_DER
Rule 27    longvariable -> ID PARENT_IZQ ID PARENT_DER
Rule 28    boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER
Rule 29    companum -> NUMERO comparacion NUMERO
Rule 30    compaid -> ID comparacion ID
Rule 31    asignacion -> ID ASIGNACION factor
Rule 32    asignacion -> VAR ID tipo_dato ASIGNACION factor
Rule 33    asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
Rule 34    sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
Rule 35    incremento -> ID INCREMENTO
Rule 36    incremento -> ID ASIGNACION ID
Rule 37    incremento -> ID DECREMENTO
Rule 38    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
Rule 39    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
Rule 40    cantidad -> NUMERO
Rule 41    cantidad -> ARRPUNTOS
Rule 42    valores -> factor
Rule 43    valores -> factor COMA valores
Rule 44    slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
Rule 45    slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
Rule 46    capslice -> ID PARENT_IZQ ID PARENT_DER
Rule 47    expression -> expression MAS term
Rule 48    expression -> expression MENOS term
Rule 49    expression -> term
Rule 50    term -> term MULTIPLICADOR factor
Rule 51    term -> term DIVISOR factor
Rule 52    term -> term MOD_DIVISION factor
Rule 53    term -> factor
Rule 54    sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
Rule 55    comparacion -> IGUALDAD
Rule 56    comparacion -> MAYOR
Rule 57    comparacion -> MENOR
Rule 58    comparacion -> MAYOR_IGU
Rule 59    comparacion -> MENOR_IGU
Rule 60    comparacion -> DESIGUALDAD
Rule 61    factor -> NUMERO
Rule 62    factor -> ID
Rule 63    factor -> CADENA
Rule 64    factor -> PARENT_IZQ expression PARENT_DER
Rule 65    switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER
Rule 66    cases -> case
Rule 67    cases -> case default
Rule 68    cases -> case cases
Rule 69    case -> CASE factor DOS_PUNTOS programa
Rule 70    default -> DEFAULT DOS_PUNTOS programa
Rule 71    map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
Rule 72    map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
Rule 73    map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
Rule 74    tipo_dato -> INT
Rule 75    tipo_dato -> STRING
Rule 76    tipo_dato -> INT64
Rule 77    tipo_dato -> FLOAT32
Rule 78    tipo_dato -> FLOAT64
Rule 79    tipo_dato -> INT32
Rule 80    valores -> clave_valor
Rule 81    valores -> clave_valor COMA valores
Rule 82    clave_valor -> valor DOS_PUNTOS valor
Rule 83    valor -> CADENA
Rule 84    valor -> NUMERO
Rule 85    asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
Rule 86    eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER
Rule 87    obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER
Rule 88    funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
Rule 89    funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
Rule 90    argumentos -> ID tipo_dato
Rule 91    argumentos -> ID tipo_dato COMA argumentos
Rule 92    empty -> <empty>

Terminals, with rules where they appear

AMPERSAND            : 
ARRPUNTOS            : 41
ASIGNACION           : 31 32 33 34 36 38 39 44 45 72 73 85
BOOLEAN              : 
BREAK                : 
CADENA               : 20 22 24 26 63 83
CASE                 : 69
COMA                 : 20 22 24 33 33 43 44 45 45 81 86 91
COMILLA              : 
COMMENT_BLOQUE_DER   : 
COMMENT_BLOQUE_IZQ   : 
COMMENT_LINEA        : 
CONST                : 
CONTINUE             : 
CORCHETE_DER         : 38 39 44 45 71 72 73 85 87
CORCHETE_IZQ         : 38 39 44 45 71 72 73 85 87
DECREMENTO           : 37
DEFAULT              : 70
DEFER                : 
DELETE               : 86
DESIGUALDAD          : 60
DIVISOR              : 51
DOBLE_COMILLA        : 24
DOS_PUNTOS           : 69 70 82
ELSE                 : 
ESPACIADO            : 
FALLTHROUGH          : 
FIN_SENTENCIA        : 34 34
FLOAT32              : 77
FLOAT64              : 78
FMT                  : 20 21 22 23
FOR                  : 34
FUNC                 : 88 89
GO                   : 
ID                   : 25 26 27 27 28 28 30 30 31 32 33 33 34 34 35 36 36 37 38 38 39 39 44 44 44 45 45 45 46 46 62 65 71 72 73 85 86 87 88 89 89 90 91
IF                   : 54
IGUAL                : 
IGUALDAD             : 55
IMPORT               : 
INCREMENTO           : 35
INT                  : 74
INT32                : 79
INT64                : 76
INTERFACE            : 
LEN                  : 
LLAVE_DER            : 34 39 54 65 71 73 88 89
LLAVE_IZQ            : 34 39 54 65 71 73 88 89
MAKE                 : 72
MAP                  : 71 72 73
MAS                  : 47
MAYOR                : 56
MAYOR_IGU            : 58
MENOR                : 57
MENOR_IGU            : 59
MENOS                : 48
MOD_DIVISION         : 52
MULTIPLICADOR        : 50
NUMERO               : 20 22 29 29 40 44 45 45 61 84
PARENT_DER           : 20 21 22 23 24 26 27 28 44 45 46 64 72 86 88 89
PARENT_IZQ           : 20 21 22 23 24 26 27 28 44 45 46 64 72 86 88 89
PIPE                 : 
PRINT                : 
PRINTF               : 20 21
PRINTLN              : 22 23
PUNTO                : 20 21 22 23 24 28
Package              : 
RANGE                : 
RETURN               : 89
SELECT               : 
SPLIT                : 24
STRING               : 75
STRINGS              : 24
STRUCT               : 
SWITCH               : 65
TYPE                 : 
VACIO                : 
VAR                  : 32 33 71
error                : 

Nonterminals, with rules where they appear

argumentos           : 88 89 91
arreglo              : 10
asignacion           : 4
asignar_valor_map    : 15
boolcadena           : 6
cantidad             : 38 39
capslice             : 12
case                 : 66 67 68
cases                : 65 68
clave_valor          : 80 81
compaid              : 8
companum             : 7
comparacion          : 29 30 34 54
default              : 67
eliminar_valor_map   : 16
empty                : 21 23
expression           : 1 47 48 64
factor               : 28 31 32 33 33 34 34 42 43 50 51 52 53 54 54 69
funcion              : 18
impresion            : 2
incremento           : 34
longvariable         : 5
map                  : 14
obtener_valor_map    : 17
programa             : 34 54 69 70 88 89 0
sentencia            : 3
sentenciafor         : 9
separador            : 24
slice                : 11
splitcadena          : 19
switch               : 13
term                 : 47 48 49 50 51 52
tipo_dato            : 32 33 71 71 72 72 73 73 88 89 90 91
valor                : 82 82 85 85 86 87
valores              : 39 43 71 73 81

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . splitcadena
    (47) expression -> . expression MAS term
    (48) expression -> . expression MENOS term
    (49) expression -> . term
    (20) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (21) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (22) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (23) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (54) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (31) asignacion -> . ID ASIGNACION factor
    (32) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (33) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (26) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (27) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (28) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (29) companum -> . NUMERO comparacion NUMERO
    (30) compaid -> . ID comparacion ID
    (34) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (38) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (39) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (44) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (46) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (65) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (71) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (72) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (73) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (85) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (86) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (87) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (88) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (24) splitcadena -> . STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER
    (50) term -> . term MULTIPLICADOR factor
    (51) term -> . term DIVISOR factor
    (52) term -> . term MOD_DIVISION factor
    (53) term -> . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 22
    IF              shift and go to state 26
    ID              shift and go to state 28
    VAR             shift and go to state 29
    NUMERO          shift and go to state 25
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    DELETE          shift and go to state 32
    FUNC            shift and go to state 33
    STRINGS         shift and go to state 34
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    programa                       shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    splitcadena                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 27

state 1

    (0) S' -> programa .



state 2

    (1) programa -> expression .
    (47) expression -> expression . MAS term
    (48) expression -> expression . MENOS term

    $end            reduce using rule 1 (programa -> expression .)
    LLAVE_DER       reduce using rule 1 (programa -> expression .)
    DEFAULT         reduce using rule 1 (programa -> expression .)
    CASE            reduce using rule 1 (programa -> expression .)
    RETURN          reduce using rule 1 (programa -> expression .)
    MAS             shift and go to state 35
    MENOS           shift and go to state 36


state 3

    (2) programa -> impresion .

    $end            reduce using rule 2 (programa -> impresion .)
    LLAVE_DER       reduce using rule 2 (programa -> impresion .)
    DEFAULT         reduce using rule 2 (programa -> impresion .)
    CASE            reduce using rule 2 (programa -> impresion .)
    RETURN          reduce using rule 2 (programa -> impresion .)


state 4

    (3) programa -> sentencia .

    $end            reduce using rule 3 (programa -> sentencia .)
    LLAVE_DER       reduce using rule 3 (programa -> sentencia .)
    DEFAULT         reduce using rule 3 (programa -> sentencia .)
    CASE            reduce using rule 3 (programa -> sentencia .)
    RETURN          reduce using rule 3 (programa -> sentencia .)


state 5

    (4) programa -> asignacion .

    $end            reduce using rule 4 (programa -> asignacion .)
    LLAVE_DER       reduce using rule 4 (programa -> asignacion .)
    DEFAULT         reduce using rule 4 (programa -> asignacion .)
    CASE            reduce using rule 4 (programa -> asignacion .)
    RETURN          reduce using rule 4 (programa -> asignacion .)


state 6

    (5) programa -> longvariable .

    $end            reduce using rule 5 (programa -> longvariable .)
    LLAVE_DER       reduce using rule 5 (programa -> longvariable .)
    DEFAULT         reduce using rule 5 (programa -> longvariable .)
    CASE            reduce using rule 5 (programa -> longvariable .)
    RETURN          reduce using rule 5 (programa -> longvariable .)


state 7

    (6) programa -> boolcadena .

    $end            reduce using rule 6 (programa -> boolcadena .)
    LLAVE_DER       reduce using rule 6 (programa -> boolcadena .)
    DEFAULT         reduce using rule 6 (programa -> boolcadena .)
    CASE            reduce using rule 6 (programa -> boolcadena .)
    RETURN          reduce using rule 6 (programa -> boolcadena .)


state 8

    (7) programa -> companum .

    $end            reduce using rule 7 (programa -> companum .)
    LLAVE_DER       reduce using rule 7 (programa -> companum .)
    DEFAULT         reduce using rule 7 (programa -> companum .)
    CASE            reduce using rule 7 (programa -> companum .)
    RETURN          reduce using rule 7 (programa -> companum .)


state 9

    (8) programa -> compaid .

    $end            reduce using rule 8 (programa -> compaid .)
    LLAVE_DER       reduce using rule 8 (programa -> compaid .)
    DEFAULT         reduce using rule 8 (programa -> compaid .)
    CASE            reduce using rule 8 (programa -> compaid .)
    RETURN          reduce using rule 8 (programa -> compaid .)


state 10

    (9) programa -> sentenciafor .

    $end            reduce using rule 9 (programa -> sentenciafor .)
    LLAVE_DER       reduce using rule 9 (programa -> sentenciafor .)
    DEFAULT         reduce using rule 9 (programa -> sentenciafor .)
    CASE            reduce using rule 9 (programa -> sentenciafor .)
    RETURN          reduce using rule 9 (programa -> sentenciafor .)


state 11

    (10) programa -> arreglo .

    $end            reduce using rule 10 (programa -> arreglo .)
    LLAVE_DER       reduce using rule 10 (programa -> arreglo .)
    DEFAULT         reduce using rule 10 (programa -> arreglo .)
    CASE            reduce using rule 10 (programa -> arreglo .)
    RETURN          reduce using rule 10 (programa -> arreglo .)


state 12

    (11) programa -> slice .

    $end            reduce using rule 11 (programa -> slice .)
    LLAVE_DER       reduce using rule 11 (programa -> slice .)
    DEFAULT         reduce using rule 11 (programa -> slice .)
    CASE            reduce using rule 11 (programa -> slice .)
    RETURN          reduce using rule 11 (programa -> slice .)


state 13

    (12) programa -> capslice .

    $end            reduce using rule 12 (programa -> capslice .)
    LLAVE_DER       reduce using rule 12 (programa -> capslice .)
    DEFAULT         reduce using rule 12 (programa -> capslice .)
    CASE            reduce using rule 12 (programa -> capslice .)
    RETURN          reduce using rule 12 (programa -> capslice .)


state 14

    (13) programa -> switch .

    $end            reduce using rule 13 (programa -> switch .)
    LLAVE_DER       reduce using rule 13 (programa -> switch .)
    DEFAULT         reduce using rule 13 (programa -> switch .)
    CASE            reduce using rule 13 (programa -> switch .)
    RETURN          reduce using rule 13 (programa -> switch .)


state 15

    (14) programa -> map .

    $end            reduce using rule 14 (programa -> map .)
    LLAVE_DER       reduce using rule 14 (programa -> map .)
    DEFAULT         reduce using rule 14 (programa -> map .)
    CASE            reduce using rule 14 (programa -> map .)
    RETURN          reduce using rule 14 (programa -> map .)


state 16

    (15) programa -> asignar_valor_map .

    $end            reduce using rule 15 (programa -> asignar_valor_map .)
    LLAVE_DER       reduce using rule 15 (programa -> asignar_valor_map .)
    DEFAULT         reduce using rule 15 (programa -> asignar_valor_map .)
    CASE            reduce using rule 15 (programa -> asignar_valor_map .)
    RETURN          reduce using rule 15 (programa -> asignar_valor_map .)


state 17

    (16) programa -> eliminar_valor_map .

    $end            reduce using rule 16 (programa -> eliminar_valor_map .)
    LLAVE_DER       reduce using rule 16 (programa -> eliminar_valor_map .)
    DEFAULT         reduce using rule 16 (programa -> eliminar_valor_map .)
    CASE            reduce using rule 16 (programa -> eliminar_valor_map .)
    RETURN          reduce using rule 16 (programa -> eliminar_valor_map .)


state 18

    (17) programa -> obtener_valor_map .

    $end            reduce using rule 17 (programa -> obtener_valor_map .)
    LLAVE_DER       reduce using rule 17 (programa -> obtener_valor_map .)
    DEFAULT         reduce using rule 17 (programa -> obtener_valor_map .)
    CASE            reduce using rule 17 (programa -> obtener_valor_map .)
    RETURN          reduce using rule 17 (programa -> obtener_valor_map .)


state 19

    (18) programa -> funcion .

    $end            reduce using rule 18 (programa -> funcion .)
    LLAVE_DER       reduce using rule 18 (programa -> funcion .)
    DEFAULT         reduce using rule 18 (programa -> funcion .)
    CASE            reduce using rule 18 (programa -> funcion .)
    RETURN          reduce using rule 18 (programa -> funcion .)


state 20

    (19) programa -> splitcadena .

    $end            reduce using rule 19 (programa -> splitcadena .)
    LLAVE_DER       reduce using rule 19 (programa -> splitcadena .)
    DEFAULT         reduce using rule 19 (programa -> splitcadena .)
    CASE            reduce using rule 19 (programa -> splitcadena .)
    RETURN          reduce using rule 19 (programa -> splitcadena .)


state 21

    (49) expression -> term .
    (50) term -> term . MULTIPLICADOR factor
    (51) term -> term . DIVISOR factor
    (52) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 49 (expression -> term .)
    MENOS           reduce using rule 49 (expression -> term .)
    $end            reduce using rule 49 (expression -> term .)
    PARENT_DER      reduce using rule 49 (expression -> term .)
    LLAVE_DER       reduce using rule 49 (expression -> term .)
    DEFAULT         reduce using rule 49 (expression -> term .)
    CASE            reduce using rule 49 (expression -> term .)
    RETURN          reduce using rule 49 (expression -> term .)
    MULTIPLICADOR   shift and go to state 37
    DIVISOR         shift and go to state 38
    MOD_DIVISION    shift and go to state 39


state 22

    (20) impresion -> FMT . PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (21) impresion -> FMT . PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (22) impresion -> FMT . PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (23) impresion -> FMT . PUNTO PRINTLN PARENT_IZQ empty PARENT_DER

    PUNTO           shift and go to state 40


state 23

    (64) factor -> PARENT_IZQ . expression PARENT_DER
    (47) expression -> . expression MAS term
    (48) expression -> . expression MENOS term
    (49) expression -> . term
    (50) term -> . term MULTIPLICADOR factor
    (51) term -> . term DIVISOR factor
    (52) term -> . term MOD_DIVISION factor
    (53) term -> . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    expression                     shift and go to state 41
    term                           shift and go to state 21
    factor                         shift and go to state 27

state 24

    (63) factor -> CADENA .

    MULTIPLICADOR   reduce using rule 63 (factor -> CADENA .)
    DIVISOR         reduce using rule 63 (factor -> CADENA .)
    MOD_DIVISION    reduce using rule 63 (factor -> CADENA .)
    MAS             reduce using rule 63 (factor -> CADENA .)
    MENOS           reduce using rule 63 (factor -> CADENA .)
    $end            reduce using rule 63 (factor -> CADENA .)
    PARENT_DER      reduce using rule 63 (factor -> CADENA .)
    IGUALDAD        reduce using rule 63 (factor -> CADENA .)
    MAYOR           reduce using rule 63 (factor -> CADENA .)
    MENOR           reduce using rule 63 (factor -> CADENA .)
    MAYOR_IGU       reduce using rule 63 (factor -> CADENA .)
    MENOR_IGU       reduce using rule 63 (factor -> CADENA .)
    DESIGUALDAD     reduce using rule 63 (factor -> CADENA .)
    LLAVE_DER       reduce using rule 63 (factor -> CADENA .)
    DEFAULT         reduce using rule 63 (factor -> CADENA .)
    CASE            reduce using rule 63 (factor -> CADENA .)
    RETURN          reduce using rule 63 (factor -> CADENA .)
    LLAVE_IZQ       reduce using rule 63 (factor -> CADENA .)
    FIN_SENTENCIA   reduce using rule 63 (factor -> CADENA .)
    DOS_PUNTOS      reduce using rule 63 (factor -> CADENA .)
    COMA            reduce using rule 63 (factor -> CADENA .)


state 25

    (29) companum -> NUMERO . comparacion NUMERO
    (61) factor -> NUMERO .
    (55) comparacion -> . IGUALDAD
    (56) comparacion -> . MAYOR
    (57) comparacion -> . MENOR
    (58) comparacion -> . MAYOR_IGU
    (59) comparacion -> . MENOR_IGU
    (60) comparacion -> . DESIGUALDAD

    MULTIPLICADOR   reduce using rule 61 (factor -> NUMERO .)
    DIVISOR         reduce using rule 61 (factor -> NUMERO .)
    MOD_DIVISION    reduce using rule 61 (factor -> NUMERO .)
    MAS             reduce using rule 61 (factor -> NUMERO .)
    MENOS           reduce using rule 61 (factor -> NUMERO .)
    $end            reduce using rule 61 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 61 (factor -> NUMERO .)
    DEFAULT         reduce using rule 61 (factor -> NUMERO .)
    CASE            reduce using rule 61 (factor -> NUMERO .)
    RETURN          reduce using rule 61 (factor -> NUMERO .)
    IGUALDAD        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYOR_IGU       shift and go to state 48
    MENOR_IGU       shift and go to state 49
    DESIGUALDAD     shift and go to state 50

    comparacion                    shift and go to state 44

state 26

    (54) sentencia -> IF . factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 51

state 27

    (53) term -> factor .

    MULTIPLICADOR   reduce using rule 53 (term -> factor .)
    DIVISOR         reduce using rule 53 (term -> factor .)
    MOD_DIVISION    reduce using rule 53 (term -> factor .)
    MAS             reduce using rule 53 (term -> factor .)
    MENOS           reduce using rule 53 (term -> factor .)
    $end            reduce using rule 53 (term -> factor .)
    PARENT_DER      reduce using rule 53 (term -> factor .)
    LLAVE_DER       reduce using rule 53 (term -> factor .)
    DEFAULT         reduce using rule 53 (term -> factor .)
    CASE            reduce using rule 53 (term -> factor .)
    RETURN          reduce using rule 53 (term -> factor .)


state 28

    (31) asignacion -> ID . ASIGNACION factor
    (26) longvariable -> ID . PARENT_IZQ CADENA PARENT_DER
    (27) longvariable -> ID . PARENT_IZQ ID PARENT_DER
    (28) boolcadena -> ID . PUNTO ID PARENT_IZQ factor PARENT_DER
    (30) compaid -> ID . comparacion ID
    (38) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (39) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (44) slice -> ID . ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> ID . ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (46) capslice -> ID . PARENT_IZQ ID PARENT_DER
    (72) map -> ID . ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (73) map -> ID . ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (85) asignar_valor_map -> ID . CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (87) obtener_valor_map -> ID . CORCHETE_IZQ valor CORCHETE_DER
    (62) factor -> ID .
    (55) comparacion -> . IGUALDAD
    (56) comparacion -> . MAYOR
    (57) comparacion -> . MENOR
    (58) comparacion -> . MAYOR_IGU
    (59) comparacion -> . MENOR_IGU
    (60) comparacion -> . DESIGUALDAD

    ASIGNACION      shift and go to state 52
    PARENT_IZQ      shift and go to state 53
    PUNTO           shift and go to state 54
    CORCHETE_IZQ    shift and go to state 56
    MULTIPLICADOR   reduce using rule 62 (factor -> ID .)
    DIVISOR         reduce using rule 62 (factor -> ID .)
    MOD_DIVISION    reduce using rule 62 (factor -> ID .)
    MAS             reduce using rule 62 (factor -> ID .)
    MENOS           reduce using rule 62 (factor -> ID .)
    $end            reduce using rule 62 (factor -> ID .)
    LLAVE_DER       reduce using rule 62 (factor -> ID .)
    DEFAULT         reduce using rule 62 (factor -> ID .)
    CASE            reduce using rule 62 (factor -> ID .)
    RETURN          reduce using rule 62 (factor -> ID .)
    IGUALDAD        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYOR_IGU       shift and go to state 48
    MENOR_IGU       shift and go to state 49
    DESIGUALDAD     shift and go to state 50

    comparacion                    shift and go to state 55

state 29

    (32) asignacion -> VAR . ID tipo_dato ASIGNACION factor
    (33) asignacion -> VAR . ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (71) map -> VAR . ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    ID              shift and go to state 57


state 30

    (34) sentenciafor -> FOR . ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ID              shift and go to state 58


state 31

    (65) switch -> SWITCH . ID LLAVE_IZQ cases LLAVE_DER

    ID              shift and go to state 59


state 32

    (86) eliminar_valor_map -> DELETE . PARENT_IZQ ID COMA valor PARENT_DER

    PARENT_IZQ      shift and go to state 60


state 33

    (88) funcion -> FUNC . ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> FUNC . ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER

    ID              shift and go to state 61


state 34

    (24) splitcadena -> STRINGS . PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER

    PUNTO           shift and go to state 62


state 35

    (47) expression -> expression MAS . term
    (50) term -> . term MULTIPLICADOR factor
    (51) term -> . term DIVISOR factor
    (52) term -> . term MOD_DIVISION factor
    (53) term -> . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    term                           shift and go to state 63
    factor                         shift and go to state 27

state 36

    (48) expression -> expression MENOS . term
    (50) term -> . term MULTIPLICADOR factor
    (51) term -> . term DIVISOR factor
    (52) term -> . term MOD_DIVISION factor
    (53) term -> . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    term                           shift and go to state 64
    factor                         shift and go to state 27

state 37

    (50) term -> term MULTIPLICADOR . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 65

state 38

    (51) term -> term DIVISOR . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 66

state 39

    (52) term -> term MOD_DIVISION . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 67

state 40

    (20) impresion -> FMT PUNTO . PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (21) impresion -> FMT PUNTO . PRINTF PARENT_IZQ empty PARENT_DER
    (22) impresion -> FMT PUNTO . PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (23) impresion -> FMT PUNTO . PRINTLN PARENT_IZQ empty PARENT_DER

    PRINTF          shift and go to state 68
    PRINTLN         shift and go to state 69


state 41

    (64) factor -> PARENT_IZQ expression . PARENT_DER
    (47) expression -> expression . MAS term
    (48) expression -> expression . MENOS term

    PARENT_DER      shift and go to state 70
    MAS             shift and go to state 35
    MENOS           shift and go to state 36


state 42

    (61) factor -> NUMERO .

    MULTIPLICADOR   reduce using rule 61 (factor -> NUMERO .)
    DIVISOR         reduce using rule 61 (factor -> NUMERO .)
    MOD_DIVISION    reduce using rule 61 (factor -> NUMERO .)
    PARENT_DER      reduce using rule 61 (factor -> NUMERO .)
    MAS             reduce using rule 61 (factor -> NUMERO .)
    MENOS           reduce using rule 61 (factor -> NUMERO .)
    IGUALDAD        reduce using rule 61 (factor -> NUMERO .)
    MAYOR           reduce using rule 61 (factor -> NUMERO .)
    MENOR           reduce using rule 61 (factor -> NUMERO .)
    MAYOR_IGU       reduce using rule 61 (factor -> NUMERO .)
    MENOR_IGU       reduce using rule 61 (factor -> NUMERO .)
    DESIGUALDAD     reduce using rule 61 (factor -> NUMERO .)
    $end            reduce using rule 61 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 61 (factor -> NUMERO .)
    DEFAULT         reduce using rule 61 (factor -> NUMERO .)
    CASE            reduce using rule 61 (factor -> NUMERO .)
    RETURN          reduce using rule 61 (factor -> NUMERO .)
    LLAVE_IZQ       reduce using rule 61 (factor -> NUMERO .)
    FIN_SENTENCIA   reduce using rule 61 (factor -> NUMERO .)
    DOS_PUNTOS      reduce using rule 61 (factor -> NUMERO .)
    COMA            reduce using rule 61 (factor -> NUMERO .)


state 43

    (62) factor -> ID .

    MULTIPLICADOR   reduce using rule 62 (factor -> ID .)
    DIVISOR         reduce using rule 62 (factor -> ID .)
    MOD_DIVISION    reduce using rule 62 (factor -> ID .)
    PARENT_DER      reduce using rule 62 (factor -> ID .)
    MAS             reduce using rule 62 (factor -> ID .)
    MENOS           reduce using rule 62 (factor -> ID .)
    IGUALDAD        reduce using rule 62 (factor -> ID .)
    MAYOR           reduce using rule 62 (factor -> ID .)
    MENOR           reduce using rule 62 (factor -> ID .)
    MAYOR_IGU       reduce using rule 62 (factor -> ID .)
    MENOR_IGU       reduce using rule 62 (factor -> ID .)
    DESIGUALDAD     reduce using rule 62 (factor -> ID .)
    $end            reduce using rule 62 (factor -> ID .)
    LLAVE_DER       reduce using rule 62 (factor -> ID .)
    DEFAULT         reduce using rule 62 (factor -> ID .)
    CASE            reduce using rule 62 (factor -> ID .)
    RETURN          reduce using rule 62 (factor -> ID .)
    LLAVE_IZQ       reduce using rule 62 (factor -> ID .)
    FIN_SENTENCIA   reduce using rule 62 (factor -> ID .)
    DOS_PUNTOS      reduce using rule 62 (factor -> ID .)
    COMA            reduce using rule 62 (factor -> ID .)


state 44

    (29) companum -> NUMERO comparacion . NUMERO

    NUMERO          shift and go to state 71


state 45

    (55) comparacion -> IGUALDAD .

    NUMERO          reduce using rule 55 (comparacion -> IGUALDAD .)
    ID              reduce using rule 55 (comparacion -> IGUALDAD .)
    CADENA          reduce using rule 55 (comparacion -> IGUALDAD .)
    PARENT_IZQ      reduce using rule 55 (comparacion -> IGUALDAD .)


state 46

    (56) comparacion -> MAYOR .

    NUMERO          reduce using rule 56 (comparacion -> MAYOR .)
    ID              reduce using rule 56 (comparacion -> MAYOR .)
    CADENA          reduce using rule 56 (comparacion -> MAYOR .)
    PARENT_IZQ      reduce using rule 56 (comparacion -> MAYOR .)


state 47

    (57) comparacion -> MENOR .

    NUMERO          reduce using rule 57 (comparacion -> MENOR .)
    ID              reduce using rule 57 (comparacion -> MENOR .)
    CADENA          reduce using rule 57 (comparacion -> MENOR .)
    PARENT_IZQ      reduce using rule 57 (comparacion -> MENOR .)


state 48

    (58) comparacion -> MAYOR_IGU .

    NUMERO          reduce using rule 58 (comparacion -> MAYOR_IGU .)
    ID              reduce using rule 58 (comparacion -> MAYOR_IGU .)
    CADENA          reduce using rule 58 (comparacion -> MAYOR_IGU .)
    PARENT_IZQ      reduce using rule 58 (comparacion -> MAYOR_IGU .)


state 49

    (59) comparacion -> MENOR_IGU .

    NUMERO          reduce using rule 59 (comparacion -> MENOR_IGU .)
    ID              reduce using rule 59 (comparacion -> MENOR_IGU .)
    CADENA          reduce using rule 59 (comparacion -> MENOR_IGU .)
    PARENT_IZQ      reduce using rule 59 (comparacion -> MENOR_IGU .)


state 50

    (60) comparacion -> DESIGUALDAD .

    NUMERO          reduce using rule 60 (comparacion -> DESIGUALDAD .)
    ID              reduce using rule 60 (comparacion -> DESIGUALDAD .)
    CADENA          reduce using rule 60 (comparacion -> DESIGUALDAD .)
    PARENT_IZQ      reduce using rule 60 (comparacion -> DESIGUALDAD .)


state 51

    (54) sentencia -> IF factor . comparacion factor LLAVE_IZQ programa LLAVE_DER
    (55) comparacion -> . IGUALDAD
    (56) comparacion -> . MAYOR
    (57) comparacion -> . MENOR
    (58) comparacion -> . MAYOR_IGU
    (59) comparacion -> . MENOR_IGU
    (60) comparacion -> . DESIGUALDAD

    IGUALDAD        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYOR_IGU       shift and go to state 48
    MENOR_IGU       shift and go to state 49
    DESIGUALDAD     shift and go to state 50

    comparacion                    shift and go to state 72

state 52

    (31) asignacion -> ID ASIGNACION . factor
    (38) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER ID
    (39) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (44) slice -> ID ASIGNACION . ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> ID ASIGNACION . ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (72) map -> ID ASIGNACION . MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (73) map -> ID ASIGNACION . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    CORCHETE_IZQ    shift and go to state 75
    ID              shift and go to state 73
    MAKE            shift and go to state 76
    MAP             shift and go to state 77
    NUMERO          shift and go to state 42
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 74

state 53

    (26) longvariable -> ID PARENT_IZQ . CADENA PARENT_DER
    (27) longvariable -> ID PARENT_IZQ . ID PARENT_DER
    (46) capslice -> ID PARENT_IZQ . ID PARENT_DER

    CADENA          shift and go to state 79
    ID              shift and go to state 78


state 54

    (28) boolcadena -> ID PUNTO . ID PARENT_IZQ factor PARENT_DER

    ID              shift and go to state 80


state 55

    (30) compaid -> ID comparacion . ID

    ID              shift and go to state 81


state 56

    (85) asignar_valor_map -> ID CORCHETE_IZQ . valor CORCHETE_DER ASIGNACION valor
    (87) obtener_valor_map -> ID CORCHETE_IZQ . valor CORCHETE_DER
    (83) valor -> . CADENA
    (84) valor -> . NUMERO

    CADENA          shift and go to state 83
    NUMERO          shift and go to state 84

    valor                          shift and go to state 82

state 57

    (32) asignacion -> VAR ID . tipo_dato ASIGNACION factor
    (33) asignacion -> VAR ID . COMA ID tipo_dato ASIGNACION factor COMA factor
    (71) map -> VAR ID . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (74) tipo_dato -> . INT
    (75) tipo_dato -> . STRING
    (76) tipo_dato -> . INT64
    (77) tipo_dato -> . FLOAT32
    (78) tipo_dato -> . FLOAT64
    (79) tipo_dato -> . INT32

    COMA            shift and go to state 86
    MAP             shift and go to state 87
    INT             shift and go to state 88
    STRING          shift and go to state 89
    INT64           shift and go to state 90
    FLOAT32         shift and go to state 91
    FLOAT64         shift and go to state 92
    INT32           shift and go to state 93

    tipo_dato                      shift and go to state 85

state 58

    (34) sentenciafor -> FOR ID . ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ASIGNACION      shift and go to state 94


state 59

    (65) switch -> SWITCH ID . LLAVE_IZQ cases LLAVE_DER

    LLAVE_IZQ       shift and go to state 95


state 60

    (86) eliminar_valor_map -> DELETE PARENT_IZQ . ID COMA valor PARENT_DER

    ID              shift and go to state 96


state 61

    (88) funcion -> FUNC ID . PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> FUNC ID . PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER

    PARENT_IZQ      shift and go to state 97


state 62

    (24) splitcadena -> STRINGS PUNTO . SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER

    SPLIT           shift and go to state 98


state 63

    (47) expression -> expression MAS term .
    (50) term -> term . MULTIPLICADOR factor
    (51) term -> term . DIVISOR factor
    (52) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 47 (expression -> expression MAS term .)
    MENOS           reduce using rule 47 (expression -> expression MAS term .)
    $end            reduce using rule 47 (expression -> expression MAS term .)
    PARENT_DER      reduce using rule 47 (expression -> expression MAS term .)
    LLAVE_DER       reduce using rule 47 (expression -> expression MAS term .)
    DEFAULT         reduce using rule 47 (expression -> expression MAS term .)
    CASE            reduce using rule 47 (expression -> expression MAS term .)
    RETURN          reduce using rule 47 (expression -> expression MAS term .)
    MULTIPLICADOR   shift and go to state 37
    DIVISOR         shift and go to state 38
    MOD_DIVISION    shift and go to state 39


state 64

    (48) expression -> expression MENOS term .
    (50) term -> term . MULTIPLICADOR factor
    (51) term -> term . DIVISOR factor
    (52) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 48 (expression -> expression MENOS term .)
    MENOS           reduce using rule 48 (expression -> expression MENOS term .)
    $end            reduce using rule 48 (expression -> expression MENOS term .)
    PARENT_DER      reduce using rule 48 (expression -> expression MENOS term .)
    LLAVE_DER       reduce using rule 48 (expression -> expression MENOS term .)
    DEFAULT         reduce using rule 48 (expression -> expression MENOS term .)
    CASE            reduce using rule 48 (expression -> expression MENOS term .)
    RETURN          reduce using rule 48 (expression -> expression MENOS term .)
    MULTIPLICADOR   shift and go to state 37
    DIVISOR         shift and go to state 38
    MOD_DIVISION    shift and go to state 39


state 65

    (50) term -> term MULTIPLICADOR factor .

    MULTIPLICADOR   reduce using rule 50 (term -> term MULTIPLICADOR factor .)
    DIVISOR         reduce using rule 50 (term -> term MULTIPLICADOR factor .)
    MOD_DIVISION    reduce using rule 50 (term -> term MULTIPLICADOR factor .)
    MAS             reduce using rule 50 (term -> term MULTIPLICADOR factor .)
    MENOS           reduce using rule 50 (term -> term MULTIPLICADOR factor .)
    $end            reduce using rule 50 (term -> term MULTIPLICADOR factor .)
    PARENT_DER      reduce using rule 50 (term -> term MULTIPLICADOR factor .)
    LLAVE_DER       reduce using rule 50 (term -> term MULTIPLICADOR factor .)
    DEFAULT         reduce using rule 50 (term -> term MULTIPLICADOR factor .)
    CASE            reduce using rule 50 (term -> term MULTIPLICADOR factor .)
    RETURN          reduce using rule 50 (term -> term MULTIPLICADOR factor .)


state 66

    (51) term -> term DIVISOR factor .

    MULTIPLICADOR   reduce using rule 51 (term -> term DIVISOR factor .)
    DIVISOR         reduce using rule 51 (term -> term DIVISOR factor .)
    MOD_DIVISION    reduce using rule 51 (term -> term DIVISOR factor .)
    MAS             reduce using rule 51 (term -> term DIVISOR factor .)
    MENOS           reduce using rule 51 (term -> term DIVISOR factor .)
    $end            reduce using rule 51 (term -> term DIVISOR factor .)
    PARENT_DER      reduce using rule 51 (term -> term DIVISOR factor .)
    LLAVE_DER       reduce using rule 51 (term -> term DIVISOR factor .)
    DEFAULT         reduce using rule 51 (term -> term DIVISOR factor .)
    CASE            reduce using rule 51 (term -> term DIVISOR factor .)
    RETURN          reduce using rule 51 (term -> term DIVISOR factor .)


state 67

    (52) term -> term MOD_DIVISION factor .

    MULTIPLICADOR   reduce using rule 52 (term -> term MOD_DIVISION factor .)
    DIVISOR         reduce using rule 52 (term -> term MOD_DIVISION factor .)
    MOD_DIVISION    reduce using rule 52 (term -> term MOD_DIVISION factor .)
    MAS             reduce using rule 52 (term -> term MOD_DIVISION factor .)
    MENOS           reduce using rule 52 (term -> term MOD_DIVISION factor .)
    $end            reduce using rule 52 (term -> term MOD_DIVISION factor .)
    PARENT_DER      reduce using rule 52 (term -> term MOD_DIVISION factor .)
    LLAVE_DER       reduce using rule 52 (term -> term MOD_DIVISION factor .)
    DEFAULT         reduce using rule 52 (term -> term MOD_DIVISION factor .)
    CASE            reduce using rule 52 (term -> term MOD_DIVISION factor .)
    RETURN          reduce using rule 52 (term -> term MOD_DIVISION factor .)


state 68

    (20) impresion -> FMT PUNTO PRINTF . PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (21) impresion -> FMT PUNTO PRINTF . PARENT_IZQ empty PARENT_DER

    PARENT_IZQ      shift and go to state 99


state 69

    (22) impresion -> FMT PUNTO PRINTLN . PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (23) impresion -> FMT PUNTO PRINTLN . PARENT_IZQ empty PARENT_DER

    PARENT_IZQ      shift and go to state 100


state 70

    (64) factor -> PARENT_IZQ expression PARENT_DER .

    MULTIPLICADOR   reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    DIVISOR         reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    MOD_DIVISION    reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAS             reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOS           reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    $end            reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    PARENT_DER      reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    IGUALDAD        reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAYOR           reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOR           reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAYOR_IGU       reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOR_IGU       reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    DESIGUALDAD     reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_DER       reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    DEFAULT         reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    CASE            reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    RETURN          reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_IZQ       reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    FIN_SENTENCIA   reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    DOS_PUNTOS      reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)
    COMA            reduce using rule 64 (factor -> PARENT_IZQ expression PARENT_DER .)


state 71

    (29) companum -> NUMERO comparacion NUMERO .

    $end            reduce using rule 29 (companum -> NUMERO comparacion NUMERO .)
    LLAVE_DER       reduce using rule 29 (companum -> NUMERO comparacion NUMERO .)
    DEFAULT         reduce using rule 29 (companum -> NUMERO comparacion NUMERO .)
    CASE            reduce using rule 29 (companum -> NUMERO comparacion NUMERO .)
    RETURN          reduce using rule 29 (companum -> NUMERO comparacion NUMERO .)


state 72

    (54) sentencia -> IF factor comparacion . factor LLAVE_IZQ programa LLAVE_DER
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 101

state 73

    (44) slice -> ID ASIGNACION ID . PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> ID ASIGNACION ID . PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (62) factor -> ID .

    PARENT_IZQ      shift and go to state 102
    $end            reduce using rule 62 (factor -> ID .)
    LLAVE_DER       reduce using rule 62 (factor -> ID .)
    DEFAULT         reduce using rule 62 (factor -> ID .)
    CASE            reduce using rule 62 (factor -> ID .)
    RETURN          reduce using rule 62 (factor -> ID .)


state 74

    (31) asignacion -> ID ASIGNACION factor .

    $end            reduce using rule 31 (asignacion -> ID ASIGNACION factor .)
    LLAVE_DER       reduce using rule 31 (asignacion -> ID ASIGNACION factor .)
    DEFAULT         reduce using rule 31 (asignacion -> ID ASIGNACION factor .)
    CASE            reduce using rule 31 (asignacion -> ID ASIGNACION factor .)
    RETURN          reduce using rule 31 (asignacion -> ID ASIGNACION factor .)


state 75

    (38) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER ID
    (39) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (40) cantidad -> . NUMERO
    (41) cantidad -> . ARRPUNTOS

    NUMERO          shift and go to state 104
    ARRPUNTOS       shift and go to state 105

    cantidad                       shift and go to state 103

state 76

    (72) map -> ID ASIGNACION MAKE . PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    PARENT_IZQ      shift and go to state 106


state 77

    (73) map -> ID ASIGNACION MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_IZQ    shift and go to state 107


state 78

    (27) longvariable -> ID PARENT_IZQ ID . PARENT_DER
    (46) capslice -> ID PARENT_IZQ ID . PARENT_DER

    PARENT_DER      shift and go to state 108


state 79

    (26) longvariable -> ID PARENT_IZQ CADENA . PARENT_DER

    PARENT_DER      shift and go to state 109


state 80

    (28) boolcadena -> ID PUNTO ID . PARENT_IZQ factor PARENT_DER

    PARENT_IZQ      shift and go to state 110


state 81

    (30) compaid -> ID comparacion ID .

    $end            reduce using rule 30 (compaid -> ID comparacion ID .)
    LLAVE_DER       reduce using rule 30 (compaid -> ID comparacion ID .)
    DEFAULT         reduce using rule 30 (compaid -> ID comparacion ID .)
    CASE            reduce using rule 30 (compaid -> ID comparacion ID .)
    RETURN          reduce using rule 30 (compaid -> ID comparacion ID .)


state 82

    (85) asignar_valor_map -> ID CORCHETE_IZQ valor . CORCHETE_DER ASIGNACION valor
    (87) obtener_valor_map -> ID CORCHETE_IZQ valor . CORCHETE_DER

    CORCHETE_DER    shift and go to state 111


state 83

    (83) valor -> CADENA .

    CORCHETE_DER    reduce using rule 83 (valor -> CADENA .)
    PARENT_DER      reduce using rule 83 (valor -> CADENA .)
    $end            reduce using rule 83 (valor -> CADENA .)
    LLAVE_DER       reduce using rule 83 (valor -> CADENA .)
    DEFAULT         reduce using rule 83 (valor -> CADENA .)
    CASE            reduce using rule 83 (valor -> CADENA .)
    RETURN          reduce using rule 83 (valor -> CADENA .)
    COMA            reduce using rule 83 (valor -> CADENA .)


state 84

    (84) valor -> NUMERO .

    CORCHETE_DER    reduce using rule 84 (valor -> NUMERO .)
    PARENT_DER      reduce using rule 84 (valor -> NUMERO .)
    $end            reduce using rule 84 (valor -> NUMERO .)
    LLAVE_DER       reduce using rule 84 (valor -> NUMERO .)
    DEFAULT         reduce using rule 84 (valor -> NUMERO .)
    CASE            reduce using rule 84 (valor -> NUMERO .)
    RETURN          reduce using rule 84 (valor -> NUMERO .)
    COMA            reduce using rule 84 (valor -> NUMERO .)


state 85

    (32) asignacion -> VAR ID tipo_dato . ASIGNACION factor

    ASIGNACION      shift and go to state 112


state 86

    (33) asignacion -> VAR ID COMA . ID tipo_dato ASIGNACION factor COMA factor

    ID              shift and go to state 113


state 87

    (71) map -> VAR ID MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_IZQ    shift and go to state 114


state 88

    (74) tipo_dato -> INT .

    ASIGNACION      reduce using rule 74 (tipo_dato -> INT .)
    CORCHETE_DER    reduce using rule 74 (tipo_dato -> INT .)
    COMA            reduce using rule 74 (tipo_dato -> INT .)
    PARENT_DER      reduce using rule 74 (tipo_dato -> INT .)
    LLAVE_IZQ       reduce using rule 74 (tipo_dato -> INT .)


state 89

    (75) tipo_dato -> STRING .

    ASIGNACION      reduce using rule 75 (tipo_dato -> STRING .)
    CORCHETE_DER    reduce using rule 75 (tipo_dato -> STRING .)
    COMA            reduce using rule 75 (tipo_dato -> STRING .)
    PARENT_DER      reduce using rule 75 (tipo_dato -> STRING .)
    LLAVE_IZQ       reduce using rule 75 (tipo_dato -> STRING .)


state 90

    (76) tipo_dato -> INT64 .

    ASIGNACION      reduce using rule 76 (tipo_dato -> INT64 .)
    CORCHETE_DER    reduce using rule 76 (tipo_dato -> INT64 .)
    COMA            reduce using rule 76 (tipo_dato -> INT64 .)
    PARENT_DER      reduce using rule 76 (tipo_dato -> INT64 .)
    LLAVE_IZQ       reduce using rule 76 (tipo_dato -> INT64 .)


state 91

    (77) tipo_dato -> FLOAT32 .

    ASIGNACION      reduce using rule 77 (tipo_dato -> FLOAT32 .)
    CORCHETE_DER    reduce using rule 77 (tipo_dato -> FLOAT32 .)
    COMA            reduce using rule 77 (tipo_dato -> FLOAT32 .)
    PARENT_DER      reduce using rule 77 (tipo_dato -> FLOAT32 .)
    LLAVE_IZQ       reduce using rule 77 (tipo_dato -> FLOAT32 .)


state 92

    (78) tipo_dato -> FLOAT64 .

    ASIGNACION      reduce using rule 78 (tipo_dato -> FLOAT64 .)
    CORCHETE_DER    reduce using rule 78 (tipo_dato -> FLOAT64 .)
    COMA            reduce using rule 78 (tipo_dato -> FLOAT64 .)
    PARENT_DER      reduce using rule 78 (tipo_dato -> FLOAT64 .)
    LLAVE_IZQ       reduce using rule 78 (tipo_dato -> FLOAT64 .)


state 93

    (79) tipo_dato -> INT32 .

    ASIGNACION      reduce using rule 79 (tipo_dato -> INT32 .)
    CORCHETE_DER    reduce using rule 79 (tipo_dato -> INT32 .)
    COMA            reduce using rule 79 (tipo_dato -> INT32 .)
    PARENT_DER      reduce using rule 79 (tipo_dato -> INT32 .)
    LLAVE_IZQ       reduce using rule 79 (tipo_dato -> INT32 .)


state 94

    (34) sentenciafor -> FOR ID ASIGNACION . factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 115

state 95

    (65) switch -> SWITCH ID LLAVE_IZQ . cases LLAVE_DER
    (66) cases -> . case
    (67) cases -> . case default
    (68) cases -> . case cases
    (69) case -> . CASE factor DOS_PUNTOS programa

    CASE            shift and go to state 118

    cases                          shift and go to state 116
    case                           shift and go to state 117

state 96

    (86) eliminar_valor_map -> DELETE PARENT_IZQ ID . COMA valor PARENT_DER

    COMA            shift and go to state 119


state 97

    (88) funcion -> FUNC ID PARENT_IZQ . argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> FUNC ID PARENT_IZQ . argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (90) argumentos -> . ID tipo_dato
    (91) argumentos -> . ID tipo_dato COMA argumentos

    ID              shift and go to state 120

    argumentos                     shift and go to state 121

state 98

    (24) splitcadena -> STRINGS PUNTO SPLIT . PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER

    PARENT_IZQ      shift and go to state 122


state 99

    (20) impresion -> FMT PUNTO PRINTF PARENT_IZQ . CADENA COMA NUMERO PARENT_DER
    (21) impresion -> FMT PUNTO PRINTF PARENT_IZQ . empty PARENT_DER
    (92) empty -> .

    CADENA          shift and go to state 123
    PARENT_DER      reduce using rule 92 (empty -> .)

    empty                          shift and go to state 124

state 100

    (22) impresion -> FMT PUNTO PRINTLN PARENT_IZQ . CADENA COMA NUMERO PARENT_DER
    (23) impresion -> FMT PUNTO PRINTLN PARENT_IZQ . empty PARENT_DER
    (92) empty -> .

    CADENA          shift and go to state 125
    PARENT_DER      reduce using rule 92 (empty -> .)

    empty                          shift and go to state 126

state 101

    (54) sentencia -> IF factor comparacion factor . LLAVE_IZQ programa LLAVE_DER

    LLAVE_IZQ       shift and go to state 127


state 102

    (44) slice -> ID ASIGNACION ID PARENT_IZQ . CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> ID ASIGNACION ID PARENT_IZQ . CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER

    CORCHETE_IZQ    shift and go to state 128


state 103

    (38) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER ID
    (39) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 129


state 104

    (40) cantidad -> NUMERO .

    CORCHETE_DER    reduce using rule 40 (cantidad -> NUMERO .)


state 105

    (41) cantidad -> ARRPUNTOS .

    CORCHETE_DER    reduce using rule 41 (cantidad -> ARRPUNTOS .)


state 106

    (72) map -> ID ASIGNACION MAKE PARENT_IZQ . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    MAP             shift and go to state 130


state 107

    (73) map -> ID ASIGNACION MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (74) tipo_dato -> . INT
    (75) tipo_dato -> . STRING
    (76) tipo_dato -> . INT64
    (77) tipo_dato -> . FLOAT32
    (78) tipo_dato -> . FLOAT64
    (79) tipo_dato -> . INT32

    INT             shift and go to state 88
    STRING          shift and go to state 89
    INT64           shift and go to state 90
    FLOAT32         shift and go to state 91
    FLOAT64         shift and go to state 92
    INT32           shift and go to state 93

    tipo_dato                      shift and go to state 131

state 108

    (27) longvariable -> ID PARENT_IZQ ID PARENT_DER .
    (46) capslice -> ID PARENT_IZQ ID PARENT_DER .

  ! reduce/reduce conflict for $end resolved using rule 27 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for LLAVE_DER resolved using rule 27 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 27 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for CASE resolved using rule 27 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for RETURN resolved using rule 27 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    $end            reduce using rule 27 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    LLAVE_DER       reduce using rule 27 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    DEFAULT         reduce using rule 27 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    CASE            reduce using rule 27 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    RETURN          reduce using rule 27 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)

  ! $end            [ reduce using rule 46 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! LLAVE_DER       [ reduce using rule 46 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! DEFAULT         [ reduce using rule 46 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! CASE            [ reduce using rule 46 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! RETURN          [ reduce using rule 46 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]


state 109

    (26) longvariable -> ID PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 26 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 26 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    DEFAULT         reduce using rule 26 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    CASE            reduce using rule 26 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    RETURN          reduce using rule 26 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)


state 110

    (28) boolcadena -> ID PUNTO ID PARENT_IZQ . factor PARENT_DER
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 132

state 111

    (85) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER . ASIGNACION valor
    (87) obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .

    ASIGNACION      shift and go to state 133
    $end            reduce using rule 87 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    LLAVE_DER       reduce using rule 87 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    DEFAULT         reduce using rule 87 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    CASE            reduce using rule 87 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    RETURN          reduce using rule 87 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)


state 112

    (32) asignacion -> VAR ID tipo_dato ASIGNACION . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 134

state 113

    (33) asignacion -> VAR ID COMA ID . tipo_dato ASIGNACION factor COMA factor
    (74) tipo_dato -> . INT
    (75) tipo_dato -> . STRING
    (76) tipo_dato -> . INT64
    (77) tipo_dato -> . FLOAT32
    (78) tipo_dato -> . FLOAT64
    (79) tipo_dato -> . INT32

    INT             shift and go to state 88
    STRING          shift and go to state 89
    INT64           shift and go to state 90
    FLOAT32         shift and go to state 91
    FLOAT64         shift and go to state 92
    INT32           shift and go to state 93

    tipo_dato                      shift and go to state 135

state 114

    (71) map -> VAR ID MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (74) tipo_dato -> . INT
    (75) tipo_dato -> . STRING
    (76) tipo_dato -> . INT64
    (77) tipo_dato -> . FLOAT32
    (78) tipo_dato -> . FLOAT64
    (79) tipo_dato -> . INT32

    INT             shift and go to state 88
    STRING          shift and go to state 89
    INT64           shift and go to state 90
    FLOAT32         shift and go to state 91
    FLOAT64         shift and go to state 92
    INT32           shift and go to state 93

    tipo_dato                      shift and go to state 136

state 115

    (34) sentenciafor -> FOR ID ASIGNACION factor . FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    FIN_SENTENCIA   shift and go to state 137


state 116

    (65) switch -> SWITCH ID LLAVE_IZQ cases . LLAVE_DER

    LLAVE_DER       shift and go to state 138


state 117

    (66) cases -> case .
    (67) cases -> case . default
    (68) cases -> case . cases
    (70) default -> . DEFAULT DOS_PUNTOS programa
    (66) cases -> . case
    (67) cases -> . case default
    (68) cases -> . case cases
    (69) case -> . CASE factor DOS_PUNTOS programa

    LLAVE_DER       reduce using rule 66 (cases -> case .)
    DEFAULT         shift and go to state 141
    CASE            shift and go to state 118

    case                           shift and go to state 117
    default                        shift and go to state 139
    cases                          shift and go to state 140

state 118

    (69) case -> CASE . factor DOS_PUNTOS programa
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 142

state 119

    (86) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA . valor PARENT_DER
    (83) valor -> . CADENA
    (84) valor -> . NUMERO

    CADENA          shift and go to state 83
    NUMERO          shift and go to state 84

    valor                          shift and go to state 143

state 120

    (90) argumentos -> ID . tipo_dato
    (91) argumentos -> ID . tipo_dato COMA argumentos
    (74) tipo_dato -> . INT
    (75) tipo_dato -> . STRING
    (76) tipo_dato -> . INT64
    (77) tipo_dato -> . FLOAT32
    (78) tipo_dato -> . FLOAT64
    (79) tipo_dato -> . INT32

    INT             shift and go to state 88
    STRING          shift and go to state 89
    INT64           shift and go to state 90
    FLOAT32         shift and go to state 91
    FLOAT64         shift and go to state 92
    INT32           shift and go to state 93

    tipo_dato                      shift and go to state 144

state 121

    (88) funcion -> FUNC ID PARENT_IZQ argumentos . PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> FUNC ID PARENT_IZQ argumentos . PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER

    PARENT_DER      shift and go to state 145


state 122

    (24) splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ . CADENA COMA separador DOBLE_COMILLA PARENT_DER

    CADENA          shift and go to state 146


state 123

    (20) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA . COMA NUMERO PARENT_DER

    COMA            shift and go to state 147


state 124

    (21) impresion -> FMT PUNTO PRINTF PARENT_IZQ empty . PARENT_DER

    PARENT_DER      shift and go to state 148


state 125

    (22) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA . COMA NUMERO PARENT_DER

    COMA            shift and go to state 149


state 126

    (23) impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty . PARENT_DER

    PARENT_DER      shift and go to state 150


state 127

    (54) sentencia -> IF factor comparacion factor LLAVE_IZQ . programa LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . splitcadena
    (47) expression -> . expression MAS term
    (48) expression -> . expression MENOS term
    (49) expression -> . term
    (20) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (21) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (22) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (23) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (54) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (31) asignacion -> . ID ASIGNACION factor
    (32) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (33) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (26) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (27) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (28) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (29) companum -> . NUMERO comparacion NUMERO
    (30) compaid -> . ID comparacion ID
    (34) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (38) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (39) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (44) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (46) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (65) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (71) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (72) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (73) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (85) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (86) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (87) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (88) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (24) splitcadena -> . STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER
    (50) term -> . term MULTIPLICADOR factor
    (51) term -> . term DIVISOR factor
    (52) term -> . term MOD_DIVISION factor
    (53) term -> . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 22
    IF              shift and go to state 26
    ID              shift and go to state 28
    VAR             shift and go to state 29
    NUMERO          shift and go to state 25
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    DELETE          shift and go to state 32
    FUNC            shift and go to state 33
    STRINGS         shift and go to state 34
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 27
    programa                       shift and go to state 151
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    splitcadena                    shift and go to state 20
    term                           shift and go to state 21

state 128

    (44) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ . CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ . CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER

    CORCHETE_DER    shift and go to state 152


state 129

    (38) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . ID
    (39) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . ID LLAVE_IZQ valores LLAVE_DER

    ID              shift and go to state 153


state 130

    (72) map -> ID ASIGNACION MAKE PARENT_IZQ MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    CORCHETE_IZQ    shift and go to state 154


state 131

    (73) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 155


state 132

    (28) boolcadena -> ID PUNTO ID PARENT_IZQ factor . PARENT_DER

    PARENT_DER      shift and go to state 156


state 133

    (85) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION . valor
    (83) valor -> . CADENA
    (84) valor -> . NUMERO

    CADENA          shift and go to state 83
    NUMERO          shift and go to state 84

    valor                          shift and go to state 157

state 134

    (32) asignacion -> VAR ID tipo_dato ASIGNACION factor .

    $end            reduce using rule 32 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    LLAVE_DER       reduce using rule 32 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    DEFAULT         reduce using rule 32 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    CASE            reduce using rule 32 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    RETURN          reduce using rule 32 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)


state 135

    (33) asignacion -> VAR ID COMA ID tipo_dato . ASIGNACION factor COMA factor

    ASIGNACION      shift and go to state 158


state 136

    (71) map -> VAR ID MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 159


state 137

    (34) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA . ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ID              shift and go to state 160


state 138

    (65) switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .

    $end            reduce using rule 65 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    LLAVE_DER       reduce using rule 65 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    DEFAULT         reduce using rule 65 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    CASE            reduce using rule 65 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    RETURN          reduce using rule 65 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)


state 139

    (67) cases -> case default .

    LLAVE_DER       reduce using rule 67 (cases -> case default .)


state 140

    (68) cases -> case cases .

    LLAVE_DER       reduce using rule 68 (cases -> case cases .)


state 141

    (70) default -> DEFAULT . DOS_PUNTOS programa

    DOS_PUNTOS      shift and go to state 161


state 142

    (69) case -> CASE factor . DOS_PUNTOS programa

    DOS_PUNTOS      shift and go to state 162


state 143

    (86) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor . PARENT_DER

    PARENT_DER      shift and go to state 163


state 144

    (90) argumentos -> ID tipo_dato .
    (91) argumentos -> ID tipo_dato . COMA argumentos

    PARENT_DER      reduce using rule 90 (argumentos -> ID tipo_dato .)
    COMA            shift and go to state 164


state 145

    (88) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER . tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER . tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (74) tipo_dato -> . INT
    (75) tipo_dato -> . STRING
    (76) tipo_dato -> . INT64
    (77) tipo_dato -> . FLOAT32
    (78) tipo_dato -> . FLOAT64
    (79) tipo_dato -> . INT32

    INT             shift and go to state 88
    STRING          shift and go to state 89
    INT64           shift and go to state 90
    FLOAT32         shift and go to state 91
    FLOAT64         shift and go to state 92
    INT32           shift and go to state 93

    tipo_dato                      shift and go to state 165

state 146

    (24) splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA . COMA separador DOBLE_COMILLA PARENT_DER

    COMA            shift and go to state 166


state 147

    (20) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 167


state 148

    (21) impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .

    $end            reduce using rule 21 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    LLAVE_DER       reduce using rule 21 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    DEFAULT         reduce using rule 21 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    CASE            reduce using rule 21 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    RETURN          reduce using rule 21 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)


state 149

    (22) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 168


state 150

    (23) impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .

    $end            reduce using rule 23 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    LLAVE_DER       reduce using rule 23 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    DEFAULT         reduce using rule 23 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    CASE            reduce using rule 23 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    RETURN          reduce using rule 23 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)


state 151

    (54) sentencia -> IF factor comparacion factor LLAVE_IZQ programa . LLAVE_DER

    LLAVE_DER       shift and go to state 169


state 152

    (44) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER . ID COMA NUMERO PARENT_DER
    (45) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER . ID COMA NUMERO COMA NUMERO PARENT_DER

    ID              shift and go to state 170


state 153

    (38) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .
    (39) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID . LLAVE_IZQ valores LLAVE_DER

    $end            reduce using rule 38 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    LLAVE_DER       reduce using rule 38 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    DEFAULT         reduce using rule 38 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    CASE            reduce using rule 38 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    RETURN          reduce using rule 38 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID .)
    LLAVE_IZQ       shift and go to state 171


state 154

    (72) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (74) tipo_dato -> . INT
    (75) tipo_dato -> . STRING
    (76) tipo_dato -> . INT64
    (77) tipo_dato -> . FLOAT32
    (78) tipo_dato -> . FLOAT64
    (79) tipo_dato -> . INT32

    INT             shift and go to state 88
    STRING          shift and go to state 89
    INT64           shift and go to state 90
    FLOAT32         shift and go to state 91
    FLOAT64         shift and go to state 92
    INT32           shift and go to state 93

    tipo_dato                      shift and go to state 172

state 155

    (73) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato LLAVE_IZQ valores LLAVE_DER
    (74) tipo_dato -> . INT
    (75) tipo_dato -> . STRING
    (76) tipo_dato -> . INT64
    (77) tipo_dato -> . FLOAT32
    (78) tipo_dato -> . FLOAT64
    (79) tipo_dato -> . INT32

    INT             shift and go to state 88
    STRING          shift and go to state 89
    INT64           shift and go to state 90
    FLOAT32         shift and go to state 91
    FLOAT64         shift and go to state 92
    INT32           shift and go to state 93

    tipo_dato                      shift and go to state 173

state 156

    (28) boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .

    $end            reduce using rule 28 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)
    LLAVE_DER       reduce using rule 28 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)
    DEFAULT         reduce using rule 28 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)
    CASE            reduce using rule 28 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)
    RETURN          reduce using rule 28 (boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER .)


state 157

    (85) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .

    $end            reduce using rule 85 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    LLAVE_DER       reduce using rule 85 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    DEFAULT         reduce using rule 85 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    CASE            reduce using rule 85 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    RETURN          reduce using rule 85 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)


state 158

    (33) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION . factor COMA factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 174

state 159

    (71) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato LLAVE_IZQ valores LLAVE_DER
    (74) tipo_dato -> . INT
    (75) tipo_dato -> . STRING
    (76) tipo_dato -> . INT64
    (77) tipo_dato -> . FLOAT32
    (78) tipo_dato -> . FLOAT64
    (79) tipo_dato -> . INT32

    INT             shift and go to state 88
    STRING          shift and go to state 89
    INT64           shift and go to state 90
    FLOAT32         shift and go to state 91
    FLOAT64         shift and go to state 92
    INT32           shift and go to state 93

    tipo_dato                      shift and go to state 175

state 160

    (34) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID . comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (55) comparacion -> . IGUALDAD
    (56) comparacion -> . MAYOR
    (57) comparacion -> . MENOR
    (58) comparacion -> . MAYOR_IGU
    (59) comparacion -> . MENOR_IGU
    (60) comparacion -> . DESIGUALDAD

    IGUALDAD        shift and go to state 45
    MAYOR           shift and go to state 46
    MENOR           shift and go to state 47
    MAYOR_IGU       shift and go to state 48
    MENOR_IGU       shift and go to state 49
    DESIGUALDAD     shift and go to state 50

    comparacion                    shift and go to state 176

state 161

    (70) default -> DEFAULT DOS_PUNTOS . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . splitcadena
    (47) expression -> . expression MAS term
    (48) expression -> . expression MENOS term
    (49) expression -> . term
    (20) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (21) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (22) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (23) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (54) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (31) asignacion -> . ID ASIGNACION factor
    (32) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (33) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (26) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (27) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (28) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (29) companum -> . NUMERO comparacion NUMERO
    (30) compaid -> . ID comparacion ID
    (34) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (38) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (39) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (44) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (46) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (65) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (71) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (72) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (73) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (85) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (86) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (87) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (88) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (24) splitcadena -> . STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER
    (50) term -> . term MULTIPLICADOR factor
    (51) term -> . term DIVISOR factor
    (52) term -> . term MOD_DIVISION factor
    (53) term -> . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 22
    IF              shift and go to state 26
    ID              shift and go to state 28
    VAR             shift and go to state 29
    NUMERO          shift and go to state 25
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    DELETE          shift and go to state 32
    FUNC            shift and go to state 33
    STRINGS         shift and go to state 34
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    programa                       shift and go to state 177
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    splitcadena                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 27

state 162

    (69) case -> CASE factor DOS_PUNTOS . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . splitcadena
    (47) expression -> . expression MAS term
    (48) expression -> . expression MENOS term
    (49) expression -> . term
    (20) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (21) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (22) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (23) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (54) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (31) asignacion -> . ID ASIGNACION factor
    (32) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (33) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (26) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (27) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (28) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (29) companum -> . NUMERO comparacion NUMERO
    (30) compaid -> . ID comparacion ID
    (34) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (38) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (39) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (44) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (46) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (65) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (71) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (72) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (73) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (85) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (86) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (87) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (88) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (24) splitcadena -> . STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER
    (50) term -> . term MULTIPLICADOR factor
    (51) term -> . term DIVISOR factor
    (52) term -> . term MOD_DIVISION factor
    (53) term -> . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 22
    IF              shift and go to state 26
    ID              shift and go to state 28
    VAR             shift and go to state 29
    NUMERO          shift and go to state 25
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    DELETE          shift and go to state 32
    FUNC            shift and go to state 33
    STRINGS         shift and go to state 34
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 27
    programa                       shift and go to state 178
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    splitcadena                    shift and go to state 20
    term                           shift and go to state 21

state 163

    (86) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .

    $end            reduce using rule 86 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    LLAVE_DER       reduce using rule 86 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    DEFAULT         reduce using rule 86 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    CASE            reduce using rule 86 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    RETURN          reduce using rule 86 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)


state 164

    (91) argumentos -> ID tipo_dato COMA . argumentos
    (90) argumentos -> . ID tipo_dato
    (91) argumentos -> . ID tipo_dato COMA argumentos

    ID              shift and go to state 120

    argumentos                     shift and go to state 179

state 165

    (88) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato . LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato . LLAVE_IZQ programa RETURN ID LLAVE_DER

    LLAVE_IZQ       shift and go to state 180


state 166

    (24) splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA . separador DOBLE_COMILLA PARENT_DER
    (25) separador -> . ID

    ID              shift and go to state 182

    separador                      shift and go to state 181

state 167

    (20) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 183


state 168

    (22) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 184


state 169

    (54) sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 54 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 54 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 54 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 54 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 54 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)


state 170

    (44) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID . COMA NUMERO PARENT_DER
    (45) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID . COMA NUMERO COMA NUMERO PARENT_DER

    COMA            shift and go to state 185


state 171

    (39) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ . valores LLAVE_DER
    (42) valores -> . factor
    (43) valores -> . factor COMA valores
    (80) valores -> . clave_valor
    (81) valores -> . clave_valor COMA valores
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER
    (82) clave_valor -> . valor DOS_PUNTOS valor
    (83) valor -> . CADENA
    (84) valor -> . NUMERO

    NUMERO          shift and go to state 189
    ID              shift and go to state 43
    CADENA          shift and go to state 190
    PARENT_IZQ      shift and go to state 23

    valores                        shift and go to state 186
    factor                         shift and go to state 187
    clave_valor                    shift and go to state 188
    valor                          shift and go to state 191

state 172

    (72) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato PARENT_DER

    CORCHETE_DER    shift and go to state 192


state 173

    (73) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . LLAVE_IZQ valores LLAVE_DER

    LLAVE_IZQ       shift and go to state 193


state 174

    (33) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor . COMA factor

    COMA            shift and go to state 194


state 175

    (71) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . LLAVE_IZQ valores LLAVE_DER

    LLAVE_IZQ       shift and go to state 195


state 176

    (34) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion . factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 196

state 177

    (70) default -> DEFAULT DOS_PUNTOS programa .

    LLAVE_DER       reduce using rule 70 (default -> DEFAULT DOS_PUNTOS programa .)


state 178

    (69) case -> CASE factor DOS_PUNTOS programa .

    DEFAULT         reduce using rule 69 (case -> CASE factor DOS_PUNTOS programa .)
    CASE            reduce using rule 69 (case -> CASE factor DOS_PUNTOS programa .)
    LLAVE_DER       reduce using rule 69 (case -> CASE factor DOS_PUNTOS programa .)


state 179

    (91) argumentos -> ID tipo_dato COMA argumentos .

    PARENT_DER      reduce using rule 91 (argumentos -> ID tipo_dato COMA argumentos .)


state 180

    (88) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ . programa LLAVE_DER
    (89) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ . programa RETURN ID LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . splitcadena
    (47) expression -> . expression MAS term
    (48) expression -> . expression MENOS term
    (49) expression -> . term
    (20) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (21) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (22) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (23) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (54) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (31) asignacion -> . ID ASIGNACION factor
    (32) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (33) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (26) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (27) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (28) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (29) companum -> . NUMERO comparacion NUMERO
    (30) compaid -> . ID comparacion ID
    (34) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (38) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (39) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (44) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (46) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (65) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (71) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (72) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (73) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (85) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (86) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (87) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (88) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (24) splitcadena -> . STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER
    (50) term -> . term MULTIPLICADOR factor
    (51) term -> . term DIVISOR factor
    (52) term -> . term MOD_DIVISION factor
    (53) term -> . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 22
    IF              shift and go to state 26
    ID              shift and go to state 28
    VAR             shift and go to state 29
    NUMERO          shift and go to state 25
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    DELETE          shift and go to state 32
    FUNC            shift and go to state 33
    STRINGS         shift and go to state 34
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    programa                       shift and go to state 197
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    splitcadena                    shift and go to state 20
    term                           shift and go to state 21
    factor                         shift and go to state 27

state 181

    (24) splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador . DOBLE_COMILLA PARENT_DER

    DOBLE_COMILLA   shift and go to state 198


state 182

    (25) separador -> ID .

    DOBLE_COMILLA   reduce using rule 25 (separador -> ID .)


state 183

    (20) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .

    $end            reduce using rule 20 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 20 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 20 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 20 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 20 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)


state 184

    (22) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .

    $end            reduce using rule 22 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 22 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 22 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 22 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 22 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)


state 185

    (44) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA . NUMERO PARENT_DER
    (45) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA . NUMERO COMA NUMERO PARENT_DER

    NUMERO          shift and go to state 199


state 186

    (39) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 200


state 187

    (42) valores -> factor .
    (43) valores -> factor . COMA valores

    LLAVE_DER       reduce using rule 42 (valores -> factor .)
    COMA            shift and go to state 201


state 188

    (80) valores -> clave_valor .
    (81) valores -> clave_valor . COMA valores

    LLAVE_DER       reduce using rule 80 (valores -> clave_valor .)
    COMA            shift and go to state 202


state 189

    (61) factor -> NUMERO .
    (84) valor -> NUMERO .

    COMA            reduce using rule 61 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 61 (factor -> NUMERO .)
    DOS_PUNTOS      reduce using rule 84 (valor -> NUMERO .)


state 190

    (63) factor -> CADENA .
    (83) valor -> CADENA .

    COMA            reduce using rule 63 (factor -> CADENA .)
    LLAVE_DER       reduce using rule 63 (factor -> CADENA .)
    DOS_PUNTOS      reduce using rule 83 (valor -> CADENA .)


state 191

    (82) clave_valor -> valor . DOS_PUNTOS valor

    DOS_PUNTOS      shift and go to state 203


state 192

    (72) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato PARENT_DER
    (74) tipo_dato -> . INT
    (75) tipo_dato -> . STRING
    (76) tipo_dato -> . INT64
    (77) tipo_dato -> . FLOAT32
    (78) tipo_dato -> . FLOAT64
    (79) tipo_dato -> . INT32

    INT             shift and go to state 88
    STRING          shift and go to state 89
    INT64           shift and go to state 90
    FLOAT32         shift and go to state 91
    FLOAT64         shift and go to state 92
    INT32           shift and go to state 93

    tipo_dato                      shift and go to state 204

state 193

    (73) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ . valores LLAVE_DER
    (42) valores -> . factor
    (43) valores -> . factor COMA valores
    (80) valores -> . clave_valor
    (81) valores -> . clave_valor COMA valores
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER
    (82) clave_valor -> . valor DOS_PUNTOS valor
    (83) valor -> . CADENA
    (84) valor -> . NUMERO

    NUMERO          shift and go to state 189
    ID              shift and go to state 43
    CADENA          shift and go to state 190
    PARENT_IZQ      shift and go to state 23

    valores                        shift and go to state 205
    factor                         shift and go to state 187
    clave_valor                    shift and go to state 188
    valor                          shift and go to state 191

state 194

    (33) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 42
    ID              shift and go to state 43
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 206

state 195

    (71) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ . valores LLAVE_DER
    (42) valores -> . factor
    (43) valores -> . factor COMA valores
    (80) valores -> . clave_valor
    (81) valores -> . clave_valor COMA valores
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER
    (82) clave_valor -> . valor DOS_PUNTOS valor
    (83) valor -> . CADENA
    (84) valor -> . NUMERO

    NUMERO          shift and go to state 189
    ID              shift and go to state 43
    CADENA          shift and go to state 190
    PARENT_IZQ      shift and go to state 23

    valores                        shift and go to state 207
    factor                         shift and go to state 187
    clave_valor                    shift and go to state 188
    valor                          shift and go to state 191

state 196

    (34) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor . FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    FIN_SENTENCIA   shift and go to state 208


state 197

    (88) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa . LLAVE_DER
    (89) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa . RETURN ID LLAVE_DER

    LLAVE_DER       shift and go to state 209
    RETURN          shift and go to state 210


state 198

    (24) splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA . PARENT_DER

    PARENT_DER      shift and go to state 211


state 199

    (44) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO . PARENT_DER
    (45) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO . COMA NUMERO PARENT_DER

    PARENT_DER      shift and go to state 213
    COMA            shift and go to state 212


state 200

    (39) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 39 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 39 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 39 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 39 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 39 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER .)


state 201

    (43) valores -> factor COMA . valores
    (42) valores -> . factor
    (43) valores -> . factor COMA valores
    (80) valores -> . clave_valor
    (81) valores -> . clave_valor COMA valores
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER
    (82) clave_valor -> . valor DOS_PUNTOS valor
    (83) valor -> . CADENA
    (84) valor -> . NUMERO

    NUMERO          shift and go to state 189
    ID              shift and go to state 43
    CADENA          shift and go to state 190
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 187
    valores                        shift and go to state 214
    clave_valor                    shift and go to state 188
    valor                          shift and go to state 191

state 202

    (81) valores -> clave_valor COMA . valores
    (42) valores -> . factor
    (43) valores -> . factor COMA valores
    (80) valores -> . clave_valor
    (81) valores -> . clave_valor COMA valores
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER
    (82) clave_valor -> . valor DOS_PUNTOS valor
    (83) valor -> . CADENA
    (84) valor -> . NUMERO

    NUMERO          shift and go to state 189
    ID              shift and go to state 43
    CADENA          shift and go to state 190
    PARENT_IZQ      shift and go to state 23

    clave_valor                    shift and go to state 188
    valores                        shift and go to state 215
    factor                         shift and go to state 187
    valor                          shift and go to state 191

state 203

    (82) clave_valor -> valor DOS_PUNTOS . valor
    (83) valor -> . CADENA
    (84) valor -> . NUMERO

    CADENA          shift and go to state 83
    NUMERO          shift and go to state 84

    valor                          shift and go to state 216

state 204

    (72) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . PARENT_DER

    PARENT_DER      shift and go to state 217


state 205

    (73) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 218


state 206

    (33) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .

    $end            reduce using rule 33 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    LLAVE_DER       reduce using rule 33 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    DEFAULT         reduce using rule 33 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    CASE            reduce using rule 33 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    RETURN          reduce using rule 33 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)


state 207

    (71) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 219


state 208

    (34) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA . incremento LLAVE_IZQ programa LLAVE_DER
    (35) incremento -> . ID INCREMENTO
    (36) incremento -> . ID ASIGNACION ID
    (37) incremento -> . ID DECREMENTO

    ID              shift and go to state 220

    incremento                     shift and go to state 221

state 209

    (88) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 88 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 88 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 88 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 88 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 88 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)


state 210

    (89) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN . ID LLAVE_DER

    ID              shift and go to state 222


state 211

    (24) splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER .

    $end            reduce using rule 24 (splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER .)
    LLAVE_DER       reduce using rule 24 (splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER .)
    DEFAULT         reduce using rule 24 (splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER .)
    CASE            reduce using rule 24 (splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER .)
    RETURN          reduce using rule 24 (splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER .)


state 212

    (45) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 223


state 213

    (44) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .

    $end            reduce using rule 44 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 44 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 44 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 44 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 44 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER .)


state 214

    (43) valores -> factor COMA valores .

    LLAVE_DER       reduce using rule 43 (valores -> factor COMA valores .)


state 215

    (81) valores -> clave_valor COMA valores .

    LLAVE_DER       reduce using rule 81 (valores -> clave_valor COMA valores .)


state 216

    (82) clave_valor -> valor DOS_PUNTOS valor .

    COMA            reduce using rule 82 (clave_valor -> valor DOS_PUNTOS valor .)
    LLAVE_DER       reduce using rule 82 (clave_valor -> valor DOS_PUNTOS valor .)


state 217

    (72) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .

    $end            reduce using rule 72 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    LLAVE_DER       reduce using rule 72 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    DEFAULT         reduce using rule 72 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    CASE            reduce using rule 72 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    RETURN          reduce using rule 72 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)


state 218

    (73) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 73 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 73 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 73 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 73 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 73 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)


state 219

    (71) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 71 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 71 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 71 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 71 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 71 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)


state 220

    (35) incremento -> ID . INCREMENTO
    (36) incremento -> ID . ASIGNACION ID
    (37) incremento -> ID . DECREMENTO

    INCREMENTO      shift and go to state 224
    ASIGNACION      shift and go to state 225
    DECREMENTO      shift and go to state 226


state 221

    (34) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento . LLAVE_IZQ programa LLAVE_DER

    LLAVE_IZQ       shift and go to state 227


state 222

    (89) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID . LLAVE_DER

    LLAVE_DER       shift and go to state 228


state 223

    (45) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 229


state 224

    (35) incremento -> ID INCREMENTO .

    LLAVE_IZQ       reduce using rule 35 (incremento -> ID INCREMENTO .)


state 225

    (36) incremento -> ID ASIGNACION . ID

    ID              shift and go to state 230


state 226

    (37) incremento -> ID DECREMENTO .

    LLAVE_IZQ       reduce using rule 37 (incremento -> ID DECREMENTO .)


state 227

    (34) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ . programa LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . splitcadena
    (47) expression -> . expression MAS term
    (48) expression -> . expression MENOS term
    (49) expression -> . term
    (20) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (21) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (22) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (23) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (54) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (31) asignacion -> . ID ASIGNACION factor
    (32) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (33) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (26) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (27) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (28) boolcadena -> . ID PUNTO ID PARENT_IZQ factor PARENT_DER
    (29) companum -> . NUMERO comparacion NUMERO
    (30) compaid -> . ID comparacion ID
    (34) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (38) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID
    (39) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER
    (44) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER
    (45) slice -> . ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER
    (46) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (65) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (71) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (72) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (73) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (85) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (86) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (87) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (88) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (89) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (24) splitcadena -> . STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER
    (50) term -> . term MULTIPLICADOR factor
    (51) term -> . term DIVISOR factor
    (52) term -> . term MOD_DIVISION factor
    (53) term -> . factor
    (61) factor -> . NUMERO
    (62) factor -> . ID
    (63) factor -> . CADENA
    (64) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 22
    IF              shift and go to state 26
    ID              shift and go to state 28
    VAR             shift and go to state 29
    NUMERO          shift and go to state 25
    FOR             shift and go to state 30
    SWITCH          shift and go to state 31
    DELETE          shift and go to state 32
    FUNC            shift and go to state 33
    STRINGS         shift and go to state 34
    CADENA          shift and go to state 24
    PARENT_IZQ      shift and go to state 23

    factor                         shift and go to state 27
    programa                       shift and go to state 231
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    splitcadena                    shift and go to state 20
    term                           shift and go to state 21

state 228

    (89) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .

    $end            reduce using rule 89 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    LLAVE_DER       reduce using rule 89 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    DEFAULT         reduce using rule 89 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    CASE            reduce using rule 89 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    RETURN          reduce using rule 89 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)


state 229

    (45) slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .

    $end            reduce using rule 45 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 45 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 45 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 45 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 45 (slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER .)


state 230

    (36) incremento -> ID ASIGNACION ID .

    LLAVE_IZQ       reduce using rule 36 (incremento -> ID ASIGNACION ID .)


state 231

    (34) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa . LLAVE_DER

    LLAVE_DER       shift and go to state 232


state 232

    (34) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 34 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 34 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 34 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 34 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 34 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 108 resolved using rule (longvariable -> ID PARENT_IZQ ID PARENT_DER)
WARNING: rejected rule (capslice -> ID PARENT_IZQ ID PARENT_DER) in state 108
WARNING: Rule (capslice -> ID PARENT_IZQ ID PARENT_DER) is never reduced
