Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    BREAK
    COMILLA
    COMMENT_BLOQUE_DER
    COMMENT_BLOQUE_IZQ
    COMMENT_LINEA
    CONST
    CONTAINS
    CONTINUE
    DEFER
    DOBLE_COMILLA
    ELSE
    ESPACIADO
    FALLTHROUGH
    FALSE
    GO
    IGUAL
    IMPORT
    INTERFACE
    LEN
    PACKAGE
    PIPE
    RANGE
    SELECT
    SPLIT
    STRINGS
    STRUCT
    TRUE
    TYPE
    VACIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> expression
Rule 2     programa -> impresion
Rule 3     programa -> sentencia
Rule 4     programa -> asignacion
Rule 5     programa -> longvariable
Rule 6     programa -> boolcadena
Rule 7     programa -> companum
Rule 8     programa -> compaid
Rule 9     programa -> sentenciafor
Rule 10    programa -> arreglo
Rule 11    programa -> slice
Rule 12    programa -> capslice
Rule 13    programa -> switch
Rule 14    programa -> map
Rule 15    programa -> asignar_valor_map
Rule 16    programa -> eliminar_valor_map
Rule 17    programa -> obtener_valor_map
Rule 18    programa -> funcion
Rule 19    programa -> cadenabool
Rule 20    programa -> enterocadena
Rule 21    programa -> cadenaentero
Rule 22    programa -> flotantecadena
Rule 23    programa -> cadenaflotante
Rule 24    programa -> seman_operacion
Rule 25    programa -> incremento
Rule 26    programa -> errorflotantecadena
Rule 27    programa -> errorcadenaflotante
Rule 28    impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
Rule 29    impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
Rule 30    impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
Rule 31    impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
Rule 32    impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
Rule 33    longvariable -> ID PARENT_IZQ CADENA PARENT_DER
Rule 34    longvariable -> ID PARENT_IZQ ID PARENT_DER
Rule 35    companum -> NUMERO comparacion NUMERO
Rule 36    compaid -> ID comparacion ID
Rule 37    asignacion -> ID ASIGNACION factor
Rule 38    asignacion -> VAR ID tipo_dato ASIGNACION factor
Rule 39    asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
Rule 40    sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
Rule 41    incremento -> ID INCREMENTO
Rule 42    incremento -> ID ASIGNACION ID
Rule 43    incremento -> ID DECREMENTO
Rule 44    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
Rule 45    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
Rule 46    arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
Rule 47    cantidad -> NUMERO
Rule 48    cantidad -> ARRPUNTOS
Rule 49    valores -> factor
Rule 50    valores -> factor COMA valores
Rule 51    slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
Rule 52    slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
Rule 53    capslice -> ID PARENT_IZQ ID PARENT_DER
Rule 54    expression -> expression MAS term
Rule 55    expression -> expression MENOS term
Rule 56    expression -> term
Rule 57    term -> term MULTIPLICADOR factor
Rule 58    term -> term DIVISOR factor
Rule 59    term -> term MOD_DIVISION factor
Rule 60    term -> factor
Rule 61    sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
Rule 62    comparacion -> IGUALDAD
Rule 63    comparacion -> MAYOR
Rule 64    comparacion -> MENOR
Rule 65    comparacion -> MAYOR_IGU
Rule 66    comparacion -> MENOR_IGU
Rule 67    comparacion -> DESIGUALDAD
Rule 68    factor -> NUMERO
Rule 69    factor -> ID
Rule 70    factor -> CADENA
Rule 71    factor -> FLOAT
Rule 72    factor -> PARENT_IZQ expression PARENT_DER
Rule 73    switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER
Rule 74    cases -> case
Rule 75    cases -> case default
Rule 76    cases -> case cases
Rule 77    case -> CASE factor DOS_PUNTOS programa
Rule 78    default -> DEFAULT DOS_PUNTOS programa
Rule 79    map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
Rule 80    map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
Rule 81    map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
Rule 82    tipo_dato -> INT
Rule 83    tipo_dato -> STRING
Rule 84    tipo_dato -> INT64
Rule 85    tipo_dato -> FLOAT32
Rule 86    tipo_dato -> FLOAT64
Rule 87    tipo_dato -> INT32
Rule 88    valores -> clave_valor
Rule 89    valores -> clave_valor COMA valores
Rule 90    clave_valor -> valor DOS_PUNTOS valor
Rule 91    valor -> CADENA
Rule 92    valor -> NUMERO
Rule 93    asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
Rule 94    eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER
Rule 95    obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER
Rule 96    funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
Rule 97    funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
Rule 98    funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
Rule 99    argumentos -> ID tipo_dato
Rule 100   argumentos -> ID tipo_dato COMA argumentos
Rule 101   empty -> <empty>
Rule 102   seman_operacion -> NUMERO MAS NUMERO
Rule 103   seman_operacion -> NUMERO MENOS NUMERO
Rule 104   seman_operacion -> NUMERO MULTIPLICADOR NUMERO
Rule 105   seman_operacion -> NUMERO DIVISOR NUMERO
Rule 106   seman_operacion -> NUMERO MOD_DIVISION NUMERO
Rule 107   seman_operacion -> FLOAT MAS NUMERO
Rule 108   seman_operacion -> FLOAT MENOS NUMERO
Rule 109   seman_operacion -> FLOAT MULTIPLICADOR NUMERO
Rule 110   seman_operacion -> FLOAT DIVISOR NUMERO
Rule 111   seman_operacion -> NUMERO MAS FLOAT
Rule 112   seman_operacion -> NUMERO MENOS FLOAT
Rule 113   seman_operacion -> NUMERO MULTIPLICADOR FLOAT
Rule 114   seman_operacion -> NUMERO DIVISOR FLOAT
Rule 115   seman_operacion -> FLOAT MAS FLOAT
Rule 116   seman_operacion -> FLOAT MENOS FLOAT
Rule 117   seman_operacion -> FLOAT MULTIPLICADOR FLOAT
Rule 118   seman_operacion -> FLOAT DIVISOR FLOAT
Rule 119   boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
Rule 120   cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
Rule 121   flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
Rule 122   errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
Rule 123   cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
Rule 124   errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
Rule 125   enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
Rule 126   cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER

Terminals, with rules where they appear

AMPERSAND            : 
ARRPUNTOS            : 48
ASIGNACION           : 37 38 39 40 42 44 45 46 51 52 80 81 93
BOOLEAN              : 119
BREAK                : 
CADENA               : 28 30 32 33 70 91 120 121 123 124 126
CASE                 : 77
COMA                 : 28 30 39 39 50 51 52 52 89 94 100 121 121 122 123 125 126 126
COMILLA              : 
COMMENT_BLOQUE_DER   : 
COMMENT_BLOQUE_IZQ   : 
COMMENT_LINEA        : 
CONST                : 
CONTAINS             : 
CONTINUE             : 
CORCHETE_DER         : 44 45 46 51 52 79 80 81 93 95
CORCHETE_IZQ         : 44 45 46 51 52 79 80 81 93 95
DECREMENTO           : 43
DEFAULT              : 78
DEFER                : 
DELETE               : 94
DESIGUALDAD          : 67
DIVISOR              : 58 105 110 114 118
DOBLE_COMILLA        : 
DOS_PUNTOS           : 77 78 90
ELSE                 : 
ESPACIADO            : 
FALLTHROUGH          : 
FALSE                : 
FIN_SENTENCIA        : 40 40
FLOAT                : 71 107 108 109 110 111 112 113 114 115 115 116 116 117 117 118 118 121 122
FLOAT32              : 85
FLOAT64              : 86
FMT                  : 28 29 30 31 32
FOR                  : 40
FORMATBOOL           : 119
FORMATFLOAT          : 121 122 124
FORMATINT            : 125
FUNC                 : 96 97 98
GO                   : 
ID                   : 33 34 34 36 36 37 38 39 39 40 40 41 42 42 43 44 45 46 51 52 53 53 69 73 79 80 81 93 94 95 96 97 97 98 98 99 100
IF                   : 61
IGUAL                : 
IGUALDAD             : 62
IMPORT               : 
INCREMENTO           : 41
INT                  : 82
INT32                : 87
INT64                : 84
INTERFACE            : 
LEN                  : 
LLAVE_DER            : 40 45 61 73 79 81 96 97 98
LLAVE_IZQ            : 40 45 61 73 79 81 96 97 98
MAKE                 : 51 52 80
MAP                  : 79 80 81
MAS                  : 54 102 107 111 115
MAYOR                : 63
MAYOR_IGU            : 65
MENOR                : 64
MENOR_IGU            : 66
MENOS                : 55 103 108 112 116
MOD_DIVISION         : 59 106
MULTIPLICADOR        : 57 104 109 113 117
NUMERO               : 28 30 35 35 47 51 52 52 68 92 102 102 103 103 104 104 105 105 106 106 107 108 109 110 111 112 113 114 121 122 123 125 125 126 126
PACKAGE              : 
PARENT_DER           : 28 29 30 31 32 33 34 51 52 53 72 80 94 96 97 98 119 120 121 122 123 124 125 126
PARENT_IZQ           : 28 29 30 31 32 33 34 51 52 53 72 80 94 96 97 98 119 120 121 122 123 124 125 126
PARSEBOOL            : 120
PARSEFLOAT           : 123
PARSEINT             : 126
PIPE                 : 
PRINTF               : 28 29
PRINTLN              : 30 31 32
PUNTO                : 28 29 30 31 32 119 120 121 122 123 124 125 126
RANGE                : 
RETURN               : 97 98
SELECT               : 
SPLIT                : 
STRCONV              : 119 120 121 122 123 124 125 126
STRING               : 83
STRINGS              : 
STRUCT               : 
SWITCH               : 73
TRUE                 : 
TYPE                 : 
VACIO                : 
VAR                  : 38 39 79
error                : 

Nonterminals, with rules where they appear

argumentos           : 96 97 98 100
arreglo              : 10
asignacion           : 4
asignar_valor_map    : 15
boolcadena           : 6
cadenabool           : 19
cadenaentero         : 21
cadenaflotante       : 23
cantidad             : 44 45 46
capslice             : 12
case                 : 74 75 76
cases                : 73 76
clave_valor          : 88 89
compaid              : 8
companum             : 7
comparacion          : 35 36 40 61
default              : 75
eliminar_valor_map   : 16
empty                : 29 31
enterocadena         : 20
errorcadenaflotante  : 27
errorflotantecadena  : 26
expression           : 1 54 55 72
factor               : 37 38 39 39 40 40 49 50 57 58 59 60 61 61 77
flotantecadena       : 22
funcion              : 18
impresion            : 2
incremento           : 25 40
longvariable         : 5
map                  : 14
obtener_valor_map    : 17
programa             : 40 61 77 78 96 97 0
seman_operacion      : 24
sentencia            : 3
sentenciafor         : 9
slice                : 11
switch               : 13
term                 : 54 55 56 57 58 59
tipo_dato            : 38 39 44 45 51 52 79 79 80 80 81 81 96 97 98 99 100
valor                : 90 90 93 93 94 95
valores              : 45 50 79 81 89

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (54) expression -> . expression MAS term
    (55) expression -> . expression MENOS term
    (56) expression -> . term
    (28) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (61) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (37) asignacion -> . ID ASIGNACION factor
    (38) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (39) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (33) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (34) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (119) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (35) companum -> . NUMERO comparacion NUMERO
    (36) compaid -> . ID comparacion ID
    (40) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (44) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (51) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (53) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (73) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (79) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (81) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (93) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (94) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (95) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (96) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (120) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (125) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (126) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (121) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (123) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (102) seman_operacion -> . NUMERO MAS NUMERO
    (103) seman_operacion -> . NUMERO MENOS NUMERO
    (104) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (105) seman_operacion -> . NUMERO DIVISOR NUMERO
    (106) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (107) seman_operacion -> . FLOAT MAS NUMERO
    (108) seman_operacion -> . FLOAT MENOS NUMERO
    (109) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (110) seman_operacion -> . FLOAT DIVISOR NUMERO
    (111) seman_operacion -> . NUMERO MAS FLOAT
    (112) seman_operacion -> . NUMERO MENOS FLOAT
    (113) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (114) seman_operacion -> . NUMERO DIVISOR FLOAT
    (115) seman_operacion -> . FLOAT MAS FLOAT
    (116) seman_operacion -> . FLOAT MENOS FLOAT
    (117) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (118) seman_operacion -> . FLOAT DIVISOR FLOAT
    (41) incremento -> . ID INCREMENTO
    (42) incremento -> . ID ASIGNACION ID
    (43) incremento -> . ID DECREMENTO
    (122) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (124) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (57) term -> . term MULTIPLICADOR factor
    (58) term -> . term DIVISOR factor
    (59) term -> . term MOD_DIVISION factor
    (60) term -> . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 30
    IF              shift and go to state 34
    ID              shift and go to state 36
    VAR             shift and go to state 37
    STRCONV         shift and go to state 38
    NUMERO          shift and go to state 33
    FOR             shift and go to state 39
    SWITCH          shift and go to state 40
    DELETE          shift and go to state 41
    FUNC            shift and go to state 42
    FLOAT           shift and go to state 43
    CADENA          shift and go to state 32
    PARENT_IZQ      shift and go to state 31

    programa                       shift and go to state 1
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    incremento                     shift and go to state 26
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    term                           shift and go to state 29
    factor                         shift and go to state 35

state 1

    (0) S' -> programa .



state 2

    (1) programa -> expression .
    (54) expression -> expression . MAS term
    (55) expression -> expression . MENOS term

    $end            reduce using rule 1 (programa -> expression .)
    LLAVE_DER       reduce using rule 1 (programa -> expression .)
    DEFAULT         reduce using rule 1 (programa -> expression .)
    CASE            reduce using rule 1 (programa -> expression .)
    RETURN          reduce using rule 1 (programa -> expression .)
    MAS             shift and go to state 44
    MENOS           shift and go to state 45


state 3

    (2) programa -> impresion .

    $end            reduce using rule 2 (programa -> impresion .)
    LLAVE_DER       reduce using rule 2 (programa -> impresion .)
    DEFAULT         reduce using rule 2 (programa -> impresion .)
    CASE            reduce using rule 2 (programa -> impresion .)
    RETURN          reduce using rule 2 (programa -> impresion .)


state 4

    (3) programa -> sentencia .

    $end            reduce using rule 3 (programa -> sentencia .)
    LLAVE_DER       reduce using rule 3 (programa -> sentencia .)
    DEFAULT         reduce using rule 3 (programa -> sentencia .)
    CASE            reduce using rule 3 (programa -> sentencia .)
    RETURN          reduce using rule 3 (programa -> sentencia .)


state 5

    (4) programa -> asignacion .

    $end            reduce using rule 4 (programa -> asignacion .)
    LLAVE_DER       reduce using rule 4 (programa -> asignacion .)
    DEFAULT         reduce using rule 4 (programa -> asignacion .)
    CASE            reduce using rule 4 (programa -> asignacion .)
    RETURN          reduce using rule 4 (programa -> asignacion .)


state 6

    (5) programa -> longvariable .

    $end            reduce using rule 5 (programa -> longvariable .)
    LLAVE_DER       reduce using rule 5 (programa -> longvariable .)
    DEFAULT         reduce using rule 5 (programa -> longvariable .)
    CASE            reduce using rule 5 (programa -> longvariable .)
    RETURN          reduce using rule 5 (programa -> longvariable .)


state 7

    (6) programa -> boolcadena .

    $end            reduce using rule 6 (programa -> boolcadena .)
    LLAVE_DER       reduce using rule 6 (programa -> boolcadena .)
    DEFAULT         reduce using rule 6 (programa -> boolcadena .)
    CASE            reduce using rule 6 (programa -> boolcadena .)
    RETURN          reduce using rule 6 (programa -> boolcadena .)


state 8

    (7) programa -> companum .

    $end            reduce using rule 7 (programa -> companum .)
    LLAVE_DER       reduce using rule 7 (programa -> companum .)
    DEFAULT         reduce using rule 7 (programa -> companum .)
    CASE            reduce using rule 7 (programa -> companum .)
    RETURN          reduce using rule 7 (programa -> companum .)


state 9

    (8) programa -> compaid .

    $end            reduce using rule 8 (programa -> compaid .)
    LLAVE_DER       reduce using rule 8 (programa -> compaid .)
    DEFAULT         reduce using rule 8 (programa -> compaid .)
    CASE            reduce using rule 8 (programa -> compaid .)
    RETURN          reduce using rule 8 (programa -> compaid .)


state 10

    (9) programa -> sentenciafor .

    $end            reduce using rule 9 (programa -> sentenciafor .)
    LLAVE_DER       reduce using rule 9 (programa -> sentenciafor .)
    DEFAULT         reduce using rule 9 (programa -> sentenciafor .)
    CASE            reduce using rule 9 (programa -> sentenciafor .)
    RETURN          reduce using rule 9 (programa -> sentenciafor .)


state 11

    (10) programa -> arreglo .

    $end            reduce using rule 10 (programa -> arreglo .)
    LLAVE_DER       reduce using rule 10 (programa -> arreglo .)
    DEFAULT         reduce using rule 10 (programa -> arreglo .)
    CASE            reduce using rule 10 (programa -> arreglo .)
    RETURN          reduce using rule 10 (programa -> arreglo .)


state 12

    (11) programa -> slice .

    $end            reduce using rule 11 (programa -> slice .)
    LLAVE_DER       reduce using rule 11 (programa -> slice .)
    DEFAULT         reduce using rule 11 (programa -> slice .)
    CASE            reduce using rule 11 (programa -> slice .)
    RETURN          reduce using rule 11 (programa -> slice .)


state 13

    (12) programa -> capslice .

    $end            reduce using rule 12 (programa -> capslice .)
    LLAVE_DER       reduce using rule 12 (programa -> capslice .)
    DEFAULT         reduce using rule 12 (programa -> capslice .)
    CASE            reduce using rule 12 (programa -> capslice .)
    RETURN          reduce using rule 12 (programa -> capslice .)


state 14

    (13) programa -> switch .

    $end            reduce using rule 13 (programa -> switch .)
    LLAVE_DER       reduce using rule 13 (programa -> switch .)
    DEFAULT         reduce using rule 13 (programa -> switch .)
    CASE            reduce using rule 13 (programa -> switch .)
    RETURN          reduce using rule 13 (programa -> switch .)


state 15

    (14) programa -> map .

    $end            reduce using rule 14 (programa -> map .)
    LLAVE_DER       reduce using rule 14 (programa -> map .)
    DEFAULT         reduce using rule 14 (programa -> map .)
    CASE            reduce using rule 14 (programa -> map .)
    RETURN          reduce using rule 14 (programa -> map .)


state 16

    (15) programa -> asignar_valor_map .

    $end            reduce using rule 15 (programa -> asignar_valor_map .)
    LLAVE_DER       reduce using rule 15 (programa -> asignar_valor_map .)
    DEFAULT         reduce using rule 15 (programa -> asignar_valor_map .)
    CASE            reduce using rule 15 (programa -> asignar_valor_map .)
    RETURN          reduce using rule 15 (programa -> asignar_valor_map .)


state 17

    (16) programa -> eliminar_valor_map .

    $end            reduce using rule 16 (programa -> eliminar_valor_map .)
    LLAVE_DER       reduce using rule 16 (programa -> eliminar_valor_map .)
    DEFAULT         reduce using rule 16 (programa -> eliminar_valor_map .)
    CASE            reduce using rule 16 (programa -> eliminar_valor_map .)
    RETURN          reduce using rule 16 (programa -> eliminar_valor_map .)


state 18

    (17) programa -> obtener_valor_map .

    $end            reduce using rule 17 (programa -> obtener_valor_map .)
    LLAVE_DER       reduce using rule 17 (programa -> obtener_valor_map .)
    DEFAULT         reduce using rule 17 (programa -> obtener_valor_map .)
    CASE            reduce using rule 17 (programa -> obtener_valor_map .)
    RETURN          reduce using rule 17 (programa -> obtener_valor_map .)


state 19

    (18) programa -> funcion .

    $end            reduce using rule 18 (programa -> funcion .)
    LLAVE_DER       reduce using rule 18 (programa -> funcion .)
    DEFAULT         reduce using rule 18 (programa -> funcion .)
    CASE            reduce using rule 18 (programa -> funcion .)
    RETURN          reduce using rule 18 (programa -> funcion .)


state 20

    (19) programa -> cadenabool .

    $end            reduce using rule 19 (programa -> cadenabool .)
    LLAVE_DER       reduce using rule 19 (programa -> cadenabool .)
    DEFAULT         reduce using rule 19 (programa -> cadenabool .)
    CASE            reduce using rule 19 (programa -> cadenabool .)
    RETURN          reduce using rule 19 (programa -> cadenabool .)


state 21

    (20) programa -> enterocadena .

    $end            reduce using rule 20 (programa -> enterocadena .)
    LLAVE_DER       reduce using rule 20 (programa -> enterocadena .)
    DEFAULT         reduce using rule 20 (programa -> enterocadena .)
    CASE            reduce using rule 20 (programa -> enterocadena .)
    RETURN          reduce using rule 20 (programa -> enterocadena .)


state 22

    (21) programa -> cadenaentero .

    $end            reduce using rule 21 (programa -> cadenaentero .)
    LLAVE_DER       reduce using rule 21 (programa -> cadenaentero .)
    DEFAULT         reduce using rule 21 (programa -> cadenaentero .)
    CASE            reduce using rule 21 (programa -> cadenaentero .)
    RETURN          reduce using rule 21 (programa -> cadenaentero .)


state 23

    (22) programa -> flotantecadena .

    $end            reduce using rule 22 (programa -> flotantecadena .)
    LLAVE_DER       reduce using rule 22 (programa -> flotantecadena .)
    DEFAULT         reduce using rule 22 (programa -> flotantecadena .)
    CASE            reduce using rule 22 (programa -> flotantecadena .)
    RETURN          reduce using rule 22 (programa -> flotantecadena .)


state 24

    (23) programa -> cadenaflotante .

    $end            reduce using rule 23 (programa -> cadenaflotante .)
    LLAVE_DER       reduce using rule 23 (programa -> cadenaflotante .)
    DEFAULT         reduce using rule 23 (programa -> cadenaflotante .)
    CASE            reduce using rule 23 (programa -> cadenaflotante .)
    RETURN          reduce using rule 23 (programa -> cadenaflotante .)


state 25

    (24) programa -> seman_operacion .

    $end            reduce using rule 24 (programa -> seman_operacion .)
    LLAVE_DER       reduce using rule 24 (programa -> seman_operacion .)
    DEFAULT         reduce using rule 24 (programa -> seman_operacion .)
    CASE            reduce using rule 24 (programa -> seman_operacion .)
    RETURN          reduce using rule 24 (programa -> seman_operacion .)


state 26

    (25) programa -> incremento .

    $end            reduce using rule 25 (programa -> incremento .)
    LLAVE_DER       reduce using rule 25 (programa -> incremento .)
    DEFAULT         reduce using rule 25 (programa -> incremento .)
    CASE            reduce using rule 25 (programa -> incremento .)
    RETURN          reduce using rule 25 (programa -> incremento .)


state 27

    (26) programa -> errorflotantecadena .

    $end            reduce using rule 26 (programa -> errorflotantecadena .)
    LLAVE_DER       reduce using rule 26 (programa -> errorflotantecadena .)
    DEFAULT         reduce using rule 26 (programa -> errorflotantecadena .)
    CASE            reduce using rule 26 (programa -> errorflotantecadena .)
    RETURN          reduce using rule 26 (programa -> errorflotantecadena .)


state 28

    (27) programa -> errorcadenaflotante .

    $end            reduce using rule 27 (programa -> errorcadenaflotante .)
    LLAVE_DER       reduce using rule 27 (programa -> errorcadenaflotante .)
    DEFAULT         reduce using rule 27 (programa -> errorcadenaflotante .)
    CASE            reduce using rule 27 (programa -> errorcadenaflotante .)
    RETURN          reduce using rule 27 (programa -> errorcadenaflotante .)


state 29

    (56) expression -> term .
    (57) term -> term . MULTIPLICADOR factor
    (58) term -> term . DIVISOR factor
    (59) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 56 (expression -> term .)
    MENOS           reduce using rule 56 (expression -> term .)
    $end            reduce using rule 56 (expression -> term .)
    PARENT_DER      reduce using rule 56 (expression -> term .)
    LLAVE_DER       reduce using rule 56 (expression -> term .)
    DEFAULT         reduce using rule 56 (expression -> term .)
    CASE            reduce using rule 56 (expression -> term .)
    RETURN          reduce using rule 56 (expression -> term .)
    MULTIPLICADOR   shift and go to state 46
    DIVISOR         shift and go to state 47
    MOD_DIVISION    shift and go to state 48


state 30

    (28) impresion -> FMT . PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (29) impresion -> FMT . PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (30) impresion -> FMT . PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (31) impresion -> FMT . PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (32) impresion -> FMT . PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER

    PUNTO           shift and go to state 49


state 31

    (72) factor -> PARENT_IZQ . expression PARENT_DER
    (54) expression -> . expression MAS term
    (55) expression -> . expression MENOS term
    (56) expression -> . term
    (57) term -> . term MULTIPLICADOR factor
    (58) term -> . term DIVISOR factor
    (59) term -> . term MOD_DIVISION factor
    (60) term -> . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    expression                     shift and go to state 50
    term                           shift and go to state 29
    factor                         shift and go to state 35

state 32

    (70) factor -> CADENA .

    MULTIPLICADOR   reduce using rule 70 (factor -> CADENA .)
    DIVISOR         reduce using rule 70 (factor -> CADENA .)
    MOD_DIVISION    reduce using rule 70 (factor -> CADENA .)
    MAS             reduce using rule 70 (factor -> CADENA .)
    MENOS           reduce using rule 70 (factor -> CADENA .)
    $end            reduce using rule 70 (factor -> CADENA .)
    PARENT_DER      reduce using rule 70 (factor -> CADENA .)
    IGUALDAD        reduce using rule 70 (factor -> CADENA .)
    MAYOR           reduce using rule 70 (factor -> CADENA .)
    MENOR           reduce using rule 70 (factor -> CADENA .)
    MAYOR_IGU       reduce using rule 70 (factor -> CADENA .)
    MENOR_IGU       reduce using rule 70 (factor -> CADENA .)
    DESIGUALDAD     reduce using rule 70 (factor -> CADENA .)
    LLAVE_DER       reduce using rule 70 (factor -> CADENA .)
    DEFAULT         reduce using rule 70 (factor -> CADENA .)
    CASE            reduce using rule 70 (factor -> CADENA .)
    RETURN          reduce using rule 70 (factor -> CADENA .)
    LLAVE_IZQ       reduce using rule 70 (factor -> CADENA .)
    FIN_SENTENCIA   reduce using rule 70 (factor -> CADENA .)
    DOS_PUNTOS      reduce using rule 70 (factor -> CADENA .)
    COMA            reduce using rule 70 (factor -> CADENA .)


state 33

    (35) companum -> NUMERO . comparacion NUMERO
    (102) seman_operacion -> NUMERO . MAS NUMERO
    (103) seman_operacion -> NUMERO . MENOS NUMERO
    (104) seman_operacion -> NUMERO . MULTIPLICADOR NUMERO
    (105) seman_operacion -> NUMERO . DIVISOR NUMERO
    (106) seman_operacion -> NUMERO . MOD_DIVISION NUMERO
    (111) seman_operacion -> NUMERO . MAS FLOAT
    (112) seman_operacion -> NUMERO . MENOS FLOAT
    (113) seman_operacion -> NUMERO . MULTIPLICADOR FLOAT
    (114) seman_operacion -> NUMERO . DIVISOR FLOAT
    (68) factor -> NUMERO .
    (62) comparacion -> . IGUALDAD
    (63) comparacion -> . MAYOR
    (64) comparacion -> . MENOR
    (65) comparacion -> . MAYOR_IGU
    (66) comparacion -> . MENOR_IGU
    (67) comparacion -> . DESIGUALDAD

  ! shift/reduce conflict for MULTIPLICADOR resolved as shift
  ! shift/reduce conflict for DIVISOR resolved as shift
  ! shift/reduce conflict for MOD_DIVISION resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    MULTIPLICADOR   shift and go to state 57
    DIVISOR         shift and go to state 58
    MOD_DIVISION    shift and go to state 59
    $end            reduce using rule 68 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 68 (factor -> NUMERO .)
    DEFAULT         reduce using rule 68 (factor -> NUMERO .)
    CASE            reduce using rule 68 (factor -> NUMERO .)
    RETURN          reduce using rule 68 (factor -> NUMERO .)
    IGUALDAD        shift and go to state 60
    MAYOR           shift and go to state 61
    MENOR           shift and go to state 62
    MAYOR_IGU       shift and go to state 63
    MENOR_IGU       shift and go to state 64
    DESIGUALDAD     shift and go to state 65

  ! MULTIPLICADOR   [ reduce using rule 68 (factor -> NUMERO .) ]
  ! DIVISOR         [ reduce using rule 68 (factor -> NUMERO .) ]
  ! MOD_DIVISION    [ reduce using rule 68 (factor -> NUMERO .) ]
  ! MAS             [ reduce using rule 68 (factor -> NUMERO .) ]
  ! MENOS           [ reduce using rule 68 (factor -> NUMERO .) ]

    comparacion                    shift and go to state 54

state 34

    (61) sentencia -> IF . factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 66

state 35

    (60) term -> factor .

    MULTIPLICADOR   reduce using rule 60 (term -> factor .)
    DIVISOR         reduce using rule 60 (term -> factor .)
    MOD_DIVISION    reduce using rule 60 (term -> factor .)
    MAS             reduce using rule 60 (term -> factor .)
    MENOS           reduce using rule 60 (term -> factor .)
    $end            reduce using rule 60 (term -> factor .)
    PARENT_DER      reduce using rule 60 (term -> factor .)
    LLAVE_DER       reduce using rule 60 (term -> factor .)
    DEFAULT         reduce using rule 60 (term -> factor .)
    CASE            reduce using rule 60 (term -> factor .)
    RETURN          reduce using rule 60 (term -> factor .)


state 36

    (37) asignacion -> ID . ASIGNACION factor
    (33) longvariable -> ID . PARENT_IZQ CADENA PARENT_DER
    (34) longvariable -> ID . PARENT_IZQ ID PARENT_DER
    (36) compaid -> ID . comparacion ID
    (44) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (45) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> ID . ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (51) slice -> ID . ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> ID . ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (53) capslice -> ID . PARENT_IZQ ID PARENT_DER
    (80) map -> ID . ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (81) map -> ID . ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (93) asignar_valor_map -> ID . CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (95) obtener_valor_map -> ID . CORCHETE_IZQ valor CORCHETE_DER
    (41) incremento -> ID . INCREMENTO
    (42) incremento -> ID . ASIGNACION ID
    (43) incremento -> ID . DECREMENTO
    (69) factor -> ID .
    (62) comparacion -> . IGUALDAD
    (63) comparacion -> . MAYOR
    (64) comparacion -> . MENOR
    (65) comparacion -> . MAYOR_IGU
    (66) comparacion -> . MENOR_IGU
    (67) comparacion -> . DESIGUALDAD

    ASIGNACION      shift and go to state 67
    PARENT_IZQ      shift and go to state 68
    CORCHETE_IZQ    shift and go to state 70
    INCREMENTO      shift and go to state 71
    DECREMENTO      shift and go to state 72
    MULTIPLICADOR   reduce using rule 69 (factor -> ID .)
    DIVISOR         reduce using rule 69 (factor -> ID .)
    MOD_DIVISION    reduce using rule 69 (factor -> ID .)
    MAS             reduce using rule 69 (factor -> ID .)
    MENOS           reduce using rule 69 (factor -> ID .)
    $end            reduce using rule 69 (factor -> ID .)
    LLAVE_DER       reduce using rule 69 (factor -> ID .)
    DEFAULT         reduce using rule 69 (factor -> ID .)
    CASE            reduce using rule 69 (factor -> ID .)
    RETURN          reduce using rule 69 (factor -> ID .)
    IGUALDAD        shift and go to state 60
    MAYOR           shift and go to state 61
    MENOR           shift and go to state 62
    MAYOR_IGU       shift and go to state 63
    MENOR_IGU       shift and go to state 64
    DESIGUALDAD     shift and go to state 65

    comparacion                    shift and go to state 69

state 37

    (38) asignacion -> VAR . ID tipo_dato ASIGNACION factor
    (39) asignacion -> VAR . ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (79) map -> VAR . ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    ID              shift and go to state 73


state 38

    (119) boolcadena -> STRCONV . PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (120) cadenabool -> STRCONV . PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (125) enterocadena -> STRCONV . PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (126) cadenaentero -> STRCONV . PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (121) flotantecadena -> STRCONV . PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (123) cadenaflotante -> STRCONV . PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (122) errorflotantecadena -> STRCONV . PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (124) errorcadenaflotante -> STRCONV . PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER

    PUNTO           shift and go to state 74


state 39

    (40) sentenciafor -> FOR . ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ID              shift and go to state 75


state 40

    (73) switch -> SWITCH . ID LLAVE_IZQ cases LLAVE_DER

    ID              shift and go to state 76


state 41

    (94) eliminar_valor_map -> DELETE . PARENT_IZQ ID COMA valor PARENT_DER

    PARENT_IZQ      shift and go to state 77


state 42

    (96) funcion -> FUNC . ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> FUNC . ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> FUNC . ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER

    ID              shift and go to state 78


state 43

    (107) seman_operacion -> FLOAT . MAS NUMERO
    (108) seman_operacion -> FLOAT . MENOS NUMERO
    (109) seman_operacion -> FLOAT . MULTIPLICADOR NUMERO
    (110) seman_operacion -> FLOAT . DIVISOR NUMERO
    (115) seman_operacion -> FLOAT . MAS FLOAT
    (116) seman_operacion -> FLOAT . MENOS FLOAT
    (117) seman_operacion -> FLOAT . MULTIPLICADOR FLOAT
    (118) seman_operacion -> FLOAT . DIVISOR FLOAT
    (71) factor -> FLOAT .

  ! shift/reduce conflict for MULTIPLICADOR resolved as shift
  ! shift/reduce conflict for DIVISOR resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
    MAS             shift and go to state 79
    MENOS           shift and go to state 80
    MULTIPLICADOR   shift and go to state 81
    DIVISOR         shift and go to state 82
    MOD_DIVISION    reduce using rule 71 (factor -> FLOAT .)
    $end            reduce using rule 71 (factor -> FLOAT .)
    LLAVE_DER       reduce using rule 71 (factor -> FLOAT .)
    DEFAULT         reduce using rule 71 (factor -> FLOAT .)
    CASE            reduce using rule 71 (factor -> FLOAT .)
    RETURN          reduce using rule 71 (factor -> FLOAT .)

  ! MULTIPLICADOR   [ reduce using rule 71 (factor -> FLOAT .) ]
  ! DIVISOR         [ reduce using rule 71 (factor -> FLOAT .) ]
  ! MAS             [ reduce using rule 71 (factor -> FLOAT .) ]
  ! MENOS           [ reduce using rule 71 (factor -> FLOAT .) ]


state 44

    (54) expression -> expression MAS . term
    (57) term -> . term MULTIPLICADOR factor
    (58) term -> . term DIVISOR factor
    (59) term -> . term MOD_DIVISION factor
    (60) term -> . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    term                           shift and go to state 83
    factor                         shift and go to state 35

state 45

    (55) expression -> expression MENOS . term
    (57) term -> . term MULTIPLICADOR factor
    (58) term -> . term DIVISOR factor
    (59) term -> . term MOD_DIVISION factor
    (60) term -> . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    term                           shift and go to state 84
    factor                         shift and go to state 35

state 46

    (57) term -> term MULTIPLICADOR . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 85

state 47

    (58) term -> term DIVISOR . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 86

state 48

    (59) term -> term MOD_DIVISION . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 87

state 49

    (28) impresion -> FMT PUNTO . PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (29) impresion -> FMT PUNTO . PRINTF PARENT_IZQ empty PARENT_DER
    (30) impresion -> FMT PUNTO . PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (31) impresion -> FMT PUNTO . PRINTLN PARENT_IZQ empty PARENT_DER
    (32) impresion -> FMT PUNTO . PRINTLN PARENT_IZQ CADENA PARENT_DER

    PRINTF          shift and go to state 88
    PRINTLN         shift and go to state 89


state 50

    (72) factor -> PARENT_IZQ expression . PARENT_DER
    (54) expression -> expression . MAS term
    (55) expression -> expression . MENOS term

    PARENT_DER      shift and go to state 90
    MAS             shift and go to state 44
    MENOS           shift and go to state 45


state 51

    (68) factor -> NUMERO .

    MULTIPLICADOR   reduce using rule 68 (factor -> NUMERO .)
    DIVISOR         reduce using rule 68 (factor -> NUMERO .)
    MOD_DIVISION    reduce using rule 68 (factor -> NUMERO .)
    PARENT_DER      reduce using rule 68 (factor -> NUMERO .)
    MAS             reduce using rule 68 (factor -> NUMERO .)
    MENOS           reduce using rule 68 (factor -> NUMERO .)
    IGUALDAD        reduce using rule 68 (factor -> NUMERO .)
    MAYOR           reduce using rule 68 (factor -> NUMERO .)
    MENOR           reduce using rule 68 (factor -> NUMERO .)
    MAYOR_IGU       reduce using rule 68 (factor -> NUMERO .)
    MENOR_IGU       reduce using rule 68 (factor -> NUMERO .)
    DESIGUALDAD     reduce using rule 68 (factor -> NUMERO .)
    $end            reduce using rule 68 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 68 (factor -> NUMERO .)
    DEFAULT         reduce using rule 68 (factor -> NUMERO .)
    CASE            reduce using rule 68 (factor -> NUMERO .)
    RETURN          reduce using rule 68 (factor -> NUMERO .)
    LLAVE_IZQ       reduce using rule 68 (factor -> NUMERO .)
    FIN_SENTENCIA   reduce using rule 68 (factor -> NUMERO .)
    DOS_PUNTOS      reduce using rule 68 (factor -> NUMERO .)
    COMA            reduce using rule 68 (factor -> NUMERO .)


state 52

    (69) factor -> ID .

    MULTIPLICADOR   reduce using rule 69 (factor -> ID .)
    DIVISOR         reduce using rule 69 (factor -> ID .)
    MOD_DIVISION    reduce using rule 69 (factor -> ID .)
    PARENT_DER      reduce using rule 69 (factor -> ID .)
    MAS             reduce using rule 69 (factor -> ID .)
    MENOS           reduce using rule 69 (factor -> ID .)
    IGUALDAD        reduce using rule 69 (factor -> ID .)
    MAYOR           reduce using rule 69 (factor -> ID .)
    MENOR           reduce using rule 69 (factor -> ID .)
    MAYOR_IGU       reduce using rule 69 (factor -> ID .)
    MENOR_IGU       reduce using rule 69 (factor -> ID .)
    DESIGUALDAD     reduce using rule 69 (factor -> ID .)
    $end            reduce using rule 69 (factor -> ID .)
    LLAVE_DER       reduce using rule 69 (factor -> ID .)
    DEFAULT         reduce using rule 69 (factor -> ID .)
    CASE            reduce using rule 69 (factor -> ID .)
    RETURN          reduce using rule 69 (factor -> ID .)
    LLAVE_IZQ       reduce using rule 69 (factor -> ID .)
    FIN_SENTENCIA   reduce using rule 69 (factor -> ID .)
    DOS_PUNTOS      reduce using rule 69 (factor -> ID .)
    COMA            reduce using rule 69 (factor -> ID .)


state 53

    (71) factor -> FLOAT .

    MULTIPLICADOR   reduce using rule 71 (factor -> FLOAT .)
    DIVISOR         reduce using rule 71 (factor -> FLOAT .)
    MOD_DIVISION    reduce using rule 71 (factor -> FLOAT .)
    PARENT_DER      reduce using rule 71 (factor -> FLOAT .)
    MAS             reduce using rule 71 (factor -> FLOAT .)
    MENOS           reduce using rule 71 (factor -> FLOAT .)
    IGUALDAD        reduce using rule 71 (factor -> FLOAT .)
    MAYOR           reduce using rule 71 (factor -> FLOAT .)
    MENOR           reduce using rule 71 (factor -> FLOAT .)
    MAYOR_IGU       reduce using rule 71 (factor -> FLOAT .)
    MENOR_IGU       reduce using rule 71 (factor -> FLOAT .)
    DESIGUALDAD     reduce using rule 71 (factor -> FLOAT .)
    $end            reduce using rule 71 (factor -> FLOAT .)
    LLAVE_DER       reduce using rule 71 (factor -> FLOAT .)
    DEFAULT         reduce using rule 71 (factor -> FLOAT .)
    CASE            reduce using rule 71 (factor -> FLOAT .)
    RETURN          reduce using rule 71 (factor -> FLOAT .)
    LLAVE_IZQ       reduce using rule 71 (factor -> FLOAT .)
    FIN_SENTENCIA   reduce using rule 71 (factor -> FLOAT .)
    DOS_PUNTOS      reduce using rule 71 (factor -> FLOAT .)
    COMA            reduce using rule 71 (factor -> FLOAT .)


state 54

    (35) companum -> NUMERO comparacion . NUMERO

    NUMERO          shift and go to state 91


state 55

    (102) seman_operacion -> NUMERO MAS . NUMERO
    (111) seman_operacion -> NUMERO MAS . FLOAT

    NUMERO          shift and go to state 92
    FLOAT           shift and go to state 93


state 56

    (103) seman_operacion -> NUMERO MENOS . NUMERO
    (112) seman_operacion -> NUMERO MENOS . FLOAT

    NUMERO          shift and go to state 94
    FLOAT           shift and go to state 95


state 57

    (104) seman_operacion -> NUMERO MULTIPLICADOR . NUMERO
    (113) seman_operacion -> NUMERO MULTIPLICADOR . FLOAT

    NUMERO          shift and go to state 96
    FLOAT           shift and go to state 97


state 58

    (105) seman_operacion -> NUMERO DIVISOR . NUMERO
    (114) seman_operacion -> NUMERO DIVISOR . FLOAT

    NUMERO          shift and go to state 98
    FLOAT           shift and go to state 99


state 59

    (106) seman_operacion -> NUMERO MOD_DIVISION . NUMERO

    NUMERO          shift and go to state 100


state 60

    (62) comparacion -> IGUALDAD .

    NUMERO          reduce using rule 62 (comparacion -> IGUALDAD .)
    ID              reduce using rule 62 (comparacion -> IGUALDAD .)
    CADENA          reduce using rule 62 (comparacion -> IGUALDAD .)
    FLOAT           reduce using rule 62 (comparacion -> IGUALDAD .)
    PARENT_IZQ      reduce using rule 62 (comparacion -> IGUALDAD .)


state 61

    (63) comparacion -> MAYOR .

    NUMERO          reduce using rule 63 (comparacion -> MAYOR .)
    ID              reduce using rule 63 (comparacion -> MAYOR .)
    CADENA          reduce using rule 63 (comparacion -> MAYOR .)
    FLOAT           reduce using rule 63 (comparacion -> MAYOR .)
    PARENT_IZQ      reduce using rule 63 (comparacion -> MAYOR .)


state 62

    (64) comparacion -> MENOR .

    NUMERO          reduce using rule 64 (comparacion -> MENOR .)
    ID              reduce using rule 64 (comparacion -> MENOR .)
    CADENA          reduce using rule 64 (comparacion -> MENOR .)
    FLOAT           reduce using rule 64 (comparacion -> MENOR .)
    PARENT_IZQ      reduce using rule 64 (comparacion -> MENOR .)


state 63

    (65) comparacion -> MAYOR_IGU .

    NUMERO          reduce using rule 65 (comparacion -> MAYOR_IGU .)
    ID              reduce using rule 65 (comparacion -> MAYOR_IGU .)
    CADENA          reduce using rule 65 (comparacion -> MAYOR_IGU .)
    FLOAT           reduce using rule 65 (comparacion -> MAYOR_IGU .)
    PARENT_IZQ      reduce using rule 65 (comparacion -> MAYOR_IGU .)


state 64

    (66) comparacion -> MENOR_IGU .

    NUMERO          reduce using rule 66 (comparacion -> MENOR_IGU .)
    ID              reduce using rule 66 (comparacion -> MENOR_IGU .)
    CADENA          reduce using rule 66 (comparacion -> MENOR_IGU .)
    FLOAT           reduce using rule 66 (comparacion -> MENOR_IGU .)
    PARENT_IZQ      reduce using rule 66 (comparacion -> MENOR_IGU .)


state 65

    (67) comparacion -> DESIGUALDAD .

    NUMERO          reduce using rule 67 (comparacion -> DESIGUALDAD .)
    ID              reduce using rule 67 (comparacion -> DESIGUALDAD .)
    CADENA          reduce using rule 67 (comparacion -> DESIGUALDAD .)
    FLOAT           reduce using rule 67 (comparacion -> DESIGUALDAD .)
    PARENT_IZQ      reduce using rule 67 (comparacion -> DESIGUALDAD .)


state 66

    (61) sentencia -> IF factor . comparacion factor LLAVE_IZQ programa LLAVE_DER
    (62) comparacion -> . IGUALDAD
    (63) comparacion -> . MAYOR
    (64) comparacion -> . MENOR
    (65) comparacion -> . MAYOR_IGU
    (66) comparacion -> . MENOR_IGU
    (67) comparacion -> . DESIGUALDAD

    IGUALDAD        shift and go to state 60
    MAYOR           shift and go to state 61
    MENOR           shift and go to state 62
    MAYOR_IGU       shift and go to state 63
    MENOR_IGU       shift and go to state 64
    DESIGUALDAD     shift and go to state 65

    comparacion                    shift and go to state 101

state 67

    (37) asignacion -> ID ASIGNACION . factor
    (44) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (45) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> ID ASIGNACION . CORCHETE_IZQ cantidad CORCHETE_DER
    (51) slice -> ID ASIGNACION . MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> ID ASIGNACION . MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (80) map -> ID ASIGNACION . MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (81) map -> ID ASIGNACION . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (42) incremento -> ID ASIGNACION . ID
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    CORCHETE_IZQ    shift and go to state 104
    MAKE            shift and go to state 105
    MAP             shift and go to state 106
    ID              shift and go to state 102
    NUMERO          shift and go to state 51
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 103

state 68

    (33) longvariable -> ID PARENT_IZQ . CADENA PARENT_DER
    (34) longvariable -> ID PARENT_IZQ . ID PARENT_DER
    (53) capslice -> ID PARENT_IZQ . ID PARENT_DER

    CADENA          shift and go to state 108
    ID              shift and go to state 107


state 69

    (36) compaid -> ID comparacion . ID

    ID              shift and go to state 109


state 70

    (93) asignar_valor_map -> ID CORCHETE_IZQ . valor CORCHETE_DER ASIGNACION valor
    (95) obtener_valor_map -> ID CORCHETE_IZQ . valor CORCHETE_DER
    (91) valor -> . CADENA
    (92) valor -> . NUMERO

    CADENA          shift and go to state 111
    NUMERO          shift and go to state 112

    valor                          shift and go to state 110

state 71

    (41) incremento -> ID INCREMENTO .

    $end            reduce using rule 41 (incremento -> ID INCREMENTO .)
    LLAVE_DER       reduce using rule 41 (incremento -> ID INCREMENTO .)
    DEFAULT         reduce using rule 41 (incremento -> ID INCREMENTO .)
    CASE            reduce using rule 41 (incremento -> ID INCREMENTO .)
    RETURN          reduce using rule 41 (incremento -> ID INCREMENTO .)
    LLAVE_IZQ       reduce using rule 41 (incremento -> ID INCREMENTO .)


state 72

    (43) incremento -> ID DECREMENTO .

    $end            reduce using rule 43 (incremento -> ID DECREMENTO .)
    LLAVE_DER       reduce using rule 43 (incremento -> ID DECREMENTO .)
    DEFAULT         reduce using rule 43 (incremento -> ID DECREMENTO .)
    CASE            reduce using rule 43 (incremento -> ID DECREMENTO .)
    RETURN          reduce using rule 43 (incremento -> ID DECREMENTO .)
    LLAVE_IZQ       reduce using rule 43 (incremento -> ID DECREMENTO .)


state 73

    (38) asignacion -> VAR ID . tipo_dato ASIGNACION factor
    (39) asignacion -> VAR ID . COMA ID tipo_dato ASIGNACION factor COMA factor
    (79) map -> VAR ID . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    COMA            shift and go to state 114
    MAP             shift and go to state 115
    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 113

state 74

    (119) boolcadena -> STRCONV PUNTO . FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (120) cadenabool -> STRCONV PUNTO . PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (125) enterocadena -> STRCONV PUNTO . FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (126) cadenaentero -> STRCONV PUNTO . PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (121) flotantecadena -> STRCONV PUNTO . FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (123) cadenaflotante -> STRCONV PUNTO . PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (122) errorflotantecadena -> STRCONV PUNTO . FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (124) errorcadenaflotante -> STRCONV PUNTO . FORMATFLOAT PARENT_IZQ CADENA PARENT_DER

    FORMATBOOL      shift and go to state 122
    PARSEBOOL       shift and go to state 123
    FORMATINT       shift and go to state 124
    PARSEINT        shift and go to state 125
    FORMATFLOAT     shift and go to state 126
    PARSEFLOAT      shift and go to state 127


state 75

    (40) sentenciafor -> FOR ID . ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ASIGNACION      shift and go to state 128


state 76

    (73) switch -> SWITCH ID . LLAVE_IZQ cases LLAVE_DER

    LLAVE_IZQ       shift and go to state 129


state 77

    (94) eliminar_valor_map -> DELETE PARENT_IZQ . ID COMA valor PARENT_DER

    ID              shift and go to state 130


state 78

    (96) funcion -> FUNC ID . PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> FUNC ID . PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> FUNC ID . PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER

    PARENT_IZQ      shift and go to state 131


state 79

    (107) seman_operacion -> FLOAT MAS . NUMERO
    (115) seman_operacion -> FLOAT MAS . FLOAT

    NUMERO          shift and go to state 133
    FLOAT           shift and go to state 132


state 80

    (108) seman_operacion -> FLOAT MENOS . NUMERO
    (116) seman_operacion -> FLOAT MENOS . FLOAT

    NUMERO          shift and go to state 135
    FLOAT           shift and go to state 134


state 81

    (109) seman_operacion -> FLOAT MULTIPLICADOR . NUMERO
    (117) seman_operacion -> FLOAT MULTIPLICADOR . FLOAT

    NUMERO          shift and go to state 137
    FLOAT           shift and go to state 136


state 82

    (110) seman_operacion -> FLOAT DIVISOR . NUMERO
    (118) seman_operacion -> FLOAT DIVISOR . FLOAT

    NUMERO          shift and go to state 139
    FLOAT           shift and go to state 138


state 83

    (54) expression -> expression MAS term .
    (57) term -> term . MULTIPLICADOR factor
    (58) term -> term . DIVISOR factor
    (59) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 54 (expression -> expression MAS term .)
    MENOS           reduce using rule 54 (expression -> expression MAS term .)
    $end            reduce using rule 54 (expression -> expression MAS term .)
    PARENT_DER      reduce using rule 54 (expression -> expression MAS term .)
    LLAVE_DER       reduce using rule 54 (expression -> expression MAS term .)
    DEFAULT         reduce using rule 54 (expression -> expression MAS term .)
    CASE            reduce using rule 54 (expression -> expression MAS term .)
    RETURN          reduce using rule 54 (expression -> expression MAS term .)
    MULTIPLICADOR   shift and go to state 46
    DIVISOR         shift and go to state 47
    MOD_DIVISION    shift and go to state 48


state 84

    (55) expression -> expression MENOS term .
    (57) term -> term . MULTIPLICADOR factor
    (58) term -> term . DIVISOR factor
    (59) term -> term . MOD_DIVISION factor

    MAS             reduce using rule 55 (expression -> expression MENOS term .)
    MENOS           reduce using rule 55 (expression -> expression MENOS term .)
    $end            reduce using rule 55 (expression -> expression MENOS term .)
    PARENT_DER      reduce using rule 55 (expression -> expression MENOS term .)
    LLAVE_DER       reduce using rule 55 (expression -> expression MENOS term .)
    DEFAULT         reduce using rule 55 (expression -> expression MENOS term .)
    CASE            reduce using rule 55 (expression -> expression MENOS term .)
    RETURN          reduce using rule 55 (expression -> expression MENOS term .)
    MULTIPLICADOR   shift and go to state 46
    DIVISOR         shift and go to state 47
    MOD_DIVISION    shift and go to state 48


state 85

    (57) term -> term MULTIPLICADOR factor .

    MULTIPLICADOR   reduce using rule 57 (term -> term MULTIPLICADOR factor .)
    DIVISOR         reduce using rule 57 (term -> term MULTIPLICADOR factor .)
    MOD_DIVISION    reduce using rule 57 (term -> term MULTIPLICADOR factor .)
    MAS             reduce using rule 57 (term -> term MULTIPLICADOR factor .)
    MENOS           reduce using rule 57 (term -> term MULTIPLICADOR factor .)
    $end            reduce using rule 57 (term -> term MULTIPLICADOR factor .)
    PARENT_DER      reduce using rule 57 (term -> term MULTIPLICADOR factor .)
    LLAVE_DER       reduce using rule 57 (term -> term MULTIPLICADOR factor .)
    DEFAULT         reduce using rule 57 (term -> term MULTIPLICADOR factor .)
    CASE            reduce using rule 57 (term -> term MULTIPLICADOR factor .)
    RETURN          reduce using rule 57 (term -> term MULTIPLICADOR factor .)


state 86

    (58) term -> term DIVISOR factor .

    MULTIPLICADOR   reduce using rule 58 (term -> term DIVISOR factor .)
    DIVISOR         reduce using rule 58 (term -> term DIVISOR factor .)
    MOD_DIVISION    reduce using rule 58 (term -> term DIVISOR factor .)
    MAS             reduce using rule 58 (term -> term DIVISOR factor .)
    MENOS           reduce using rule 58 (term -> term DIVISOR factor .)
    $end            reduce using rule 58 (term -> term DIVISOR factor .)
    PARENT_DER      reduce using rule 58 (term -> term DIVISOR factor .)
    LLAVE_DER       reduce using rule 58 (term -> term DIVISOR factor .)
    DEFAULT         reduce using rule 58 (term -> term DIVISOR factor .)
    CASE            reduce using rule 58 (term -> term DIVISOR factor .)
    RETURN          reduce using rule 58 (term -> term DIVISOR factor .)


state 87

    (59) term -> term MOD_DIVISION factor .

    MULTIPLICADOR   reduce using rule 59 (term -> term MOD_DIVISION factor .)
    DIVISOR         reduce using rule 59 (term -> term MOD_DIVISION factor .)
    MOD_DIVISION    reduce using rule 59 (term -> term MOD_DIVISION factor .)
    MAS             reduce using rule 59 (term -> term MOD_DIVISION factor .)
    MENOS           reduce using rule 59 (term -> term MOD_DIVISION factor .)
    $end            reduce using rule 59 (term -> term MOD_DIVISION factor .)
    PARENT_DER      reduce using rule 59 (term -> term MOD_DIVISION factor .)
    LLAVE_DER       reduce using rule 59 (term -> term MOD_DIVISION factor .)
    DEFAULT         reduce using rule 59 (term -> term MOD_DIVISION factor .)
    CASE            reduce using rule 59 (term -> term MOD_DIVISION factor .)
    RETURN          reduce using rule 59 (term -> term MOD_DIVISION factor .)


state 88

    (28) impresion -> FMT PUNTO PRINTF . PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (29) impresion -> FMT PUNTO PRINTF . PARENT_IZQ empty PARENT_DER

    PARENT_IZQ      shift and go to state 140


state 89

    (30) impresion -> FMT PUNTO PRINTLN . PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (31) impresion -> FMT PUNTO PRINTLN . PARENT_IZQ empty PARENT_DER
    (32) impresion -> FMT PUNTO PRINTLN . PARENT_IZQ CADENA PARENT_DER

    PARENT_IZQ      shift and go to state 141


state 90

    (72) factor -> PARENT_IZQ expression PARENT_DER .

    MULTIPLICADOR   reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    DIVISOR         reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    MOD_DIVISION    reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAS             reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOS           reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    $end            reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    PARENT_DER      reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    IGUALDAD        reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAYOR           reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOR           reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    MAYOR_IGU       reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    MENOR_IGU       reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    DESIGUALDAD     reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_DER       reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    DEFAULT         reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    CASE            reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    RETURN          reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    LLAVE_IZQ       reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    FIN_SENTENCIA   reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    DOS_PUNTOS      reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)
    COMA            reduce using rule 72 (factor -> PARENT_IZQ expression PARENT_DER .)


state 91

    (35) companum -> NUMERO comparacion NUMERO .

    $end            reduce using rule 35 (companum -> NUMERO comparacion NUMERO .)
    LLAVE_DER       reduce using rule 35 (companum -> NUMERO comparacion NUMERO .)
    DEFAULT         reduce using rule 35 (companum -> NUMERO comparacion NUMERO .)
    CASE            reduce using rule 35 (companum -> NUMERO comparacion NUMERO .)
    RETURN          reduce using rule 35 (companum -> NUMERO comparacion NUMERO .)


state 92

    (102) seman_operacion -> NUMERO MAS NUMERO .

    $end            reduce using rule 102 (seman_operacion -> NUMERO MAS NUMERO .)
    LLAVE_DER       reduce using rule 102 (seman_operacion -> NUMERO MAS NUMERO .)
    DEFAULT         reduce using rule 102 (seman_operacion -> NUMERO MAS NUMERO .)
    CASE            reduce using rule 102 (seman_operacion -> NUMERO MAS NUMERO .)
    RETURN          reduce using rule 102 (seman_operacion -> NUMERO MAS NUMERO .)


state 93

    (111) seman_operacion -> NUMERO MAS FLOAT .

    $end            reduce using rule 111 (seman_operacion -> NUMERO MAS FLOAT .)
    LLAVE_DER       reduce using rule 111 (seman_operacion -> NUMERO MAS FLOAT .)
    DEFAULT         reduce using rule 111 (seman_operacion -> NUMERO MAS FLOAT .)
    CASE            reduce using rule 111 (seman_operacion -> NUMERO MAS FLOAT .)
    RETURN          reduce using rule 111 (seman_operacion -> NUMERO MAS FLOAT .)


state 94

    (103) seman_operacion -> NUMERO MENOS NUMERO .

    $end            reduce using rule 103 (seman_operacion -> NUMERO MENOS NUMERO .)
    LLAVE_DER       reduce using rule 103 (seman_operacion -> NUMERO MENOS NUMERO .)
    DEFAULT         reduce using rule 103 (seman_operacion -> NUMERO MENOS NUMERO .)
    CASE            reduce using rule 103 (seman_operacion -> NUMERO MENOS NUMERO .)
    RETURN          reduce using rule 103 (seman_operacion -> NUMERO MENOS NUMERO .)


state 95

    (112) seman_operacion -> NUMERO MENOS FLOAT .

    $end            reduce using rule 112 (seman_operacion -> NUMERO MENOS FLOAT .)
    LLAVE_DER       reduce using rule 112 (seman_operacion -> NUMERO MENOS FLOAT .)
    DEFAULT         reduce using rule 112 (seman_operacion -> NUMERO MENOS FLOAT .)
    CASE            reduce using rule 112 (seman_operacion -> NUMERO MENOS FLOAT .)
    RETURN          reduce using rule 112 (seman_operacion -> NUMERO MENOS FLOAT .)


state 96

    (104) seman_operacion -> NUMERO MULTIPLICADOR NUMERO .

    $end            reduce using rule 104 (seman_operacion -> NUMERO MULTIPLICADOR NUMERO .)
    LLAVE_DER       reduce using rule 104 (seman_operacion -> NUMERO MULTIPLICADOR NUMERO .)
    DEFAULT         reduce using rule 104 (seman_operacion -> NUMERO MULTIPLICADOR NUMERO .)
    CASE            reduce using rule 104 (seman_operacion -> NUMERO MULTIPLICADOR NUMERO .)
    RETURN          reduce using rule 104 (seman_operacion -> NUMERO MULTIPLICADOR NUMERO .)


state 97

    (113) seman_operacion -> NUMERO MULTIPLICADOR FLOAT .

    $end            reduce using rule 113 (seman_operacion -> NUMERO MULTIPLICADOR FLOAT .)
    LLAVE_DER       reduce using rule 113 (seman_operacion -> NUMERO MULTIPLICADOR FLOAT .)
    DEFAULT         reduce using rule 113 (seman_operacion -> NUMERO MULTIPLICADOR FLOAT .)
    CASE            reduce using rule 113 (seman_operacion -> NUMERO MULTIPLICADOR FLOAT .)
    RETURN          reduce using rule 113 (seman_operacion -> NUMERO MULTIPLICADOR FLOAT .)


state 98

    (105) seman_operacion -> NUMERO DIVISOR NUMERO .

    $end            reduce using rule 105 (seman_operacion -> NUMERO DIVISOR NUMERO .)
    LLAVE_DER       reduce using rule 105 (seman_operacion -> NUMERO DIVISOR NUMERO .)
    DEFAULT         reduce using rule 105 (seman_operacion -> NUMERO DIVISOR NUMERO .)
    CASE            reduce using rule 105 (seman_operacion -> NUMERO DIVISOR NUMERO .)
    RETURN          reduce using rule 105 (seman_operacion -> NUMERO DIVISOR NUMERO .)


state 99

    (114) seman_operacion -> NUMERO DIVISOR FLOAT .

    $end            reduce using rule 114 (seman_operacion -> NUMERO DIVISOR FLOAT .)
    LLAVE_DER       reduce using rule 114 (seman_operacion -> NUMERO DIVISOR FLOAT .)
    DEFAULT         reduce using rule 114 (seman_operacion -> NUMERO DIVISOR FLOAT .)
    CASE            reduce using rule 114 (seman_operacion -> NUMERO DIVISOR FLOAT .)
    RETURN          reduce using rule 114 (seman_operacion -> NUMERO DIVISOR FLOAT .)


state 100

    (106) seman_operacion -> NUMERO MOD_DIVISION NUMERO .

    $end            reduce using rule 106 (seman_operacion -> NUMERO MOD_DIVISION NUMERO .)
    LLAVE_DER       reduce using rule 106 (seman_operacion -> NUMERO MOD_DIVISION NUMERO .)
    DEFAULT         reduce using rule 106 (seman_operacion -> NUMERO MOD_DIVISION NUMERO .)
    CASE            reduce using rule 106 (seman_operacion -> NUMERO MOD_DIVISION NUMERO .)
    RETURN          reduce using rule 106 (seman_operacion -> NUMERO MOD_DIVISION NUMERO .)


state 101

    (61) sentencia -> IF factor comparacion . factor LLAVE_IZQ programa LLAVE_DER
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 142

state 102

    (42) incremento -> ID ASIGNACION ID .
    (69) factor -> ID .

  ! reduce/reduce conflict for $end resolved using rule 42 (incremento -> ID ASIGNACION ID .)
  ! reduce/reduce conflict for LLAVE_DER resolved using rule 42 (incremento -> ID ASIGNACION ID .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 42 (incremento -> ID ASIGNACION ID .)
  ! reduce/reduce conflict for CASE resolved using rule 42 (incremento -> ID ASIGNACION ID .)
  ! reduce/reduce conflict for RETURN resolved using rule 42 (incremento -> ID ASIGNACION ID .)
    $end            reduce using rule 42 (incremento -> ID ASIGNACION ID .)
    LLAVE_DER       reduce using rule 42 (incremento -> ID ASIGNACION ID .)
    DEFAULT         reduce using rule 42 (incremento -> ID ASIGNACION ID .)
    CASE            reduce using rule 42 (incremento -> ID ASIGNACION ID .)
    RETURN          reduce using rule 42 (incremento -> ID ASIGNACION ID .)

  ! $end            [ reduce using rule 69 (factor -> ID .) ]
  ! LLAVE_DER       [ reduce using rule 69 (factor -> ID .) ]
  ! DEFAULT         [ reduce using rule 69 (factor -> ID .) ]
  ! CASE            [ reduce using rule 69 (factor -> ID .) ]
  ! RETURN          [ reduce using rule 69 (factor -> ID .) ]


state 103

    (37) asignacion -> ID ASIGNACION factor .

    $end            reduce using rule 37 (asignacion -> ID ASIGNACION factor .)
    LLAVE_DER       reduce using rule 37 (asignacion -> ID ASIGNACION factor .)
    DEFAULT         reduce using rule 37 (asignacion -> ID ASIGNACION factor .)
    CASE            reduce using rule 37 (asignacion -> ID ASIGNACION factor .)
    RETURN          reduce using rule 37 (asignacion -> ID ASIGNACION factor .)


state 104

    (44) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER tipo_dato
    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> ID ASIGNACION CORCHETE_IZQ . cantidad CORCHETE_DER
    (47) cantidad -> . NUMERO
    (48) cantidad -> . ARRPUNTOS

    NUMERO          shift and go to state 144
    ARRPUNTOS       shift and go to state 145

    cantidad                       shift and go to state 143

state 105

    (51) slice -> ID ASIGNACION MAKE . PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> ID ASIGNACION MAKE . PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (80) map -> ID ASIGNACION MAKE . PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    PARENT_IZQ      shift and go to state 146


state 106

    (81) map -> ID ASIGNACION MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_IZQ    shift and go to state 147


state 107

    (34) longvariable -> ID PARENT_IZQ ID . PARENT_DER
    (53) capslice -> ID PARENT_IZQ ID . PARENT_DER

    PARENT_DER      shift and go to state 148


state 108

    (33) longvariable -> ID PARENT_IZQ CADENA . PARENT_DER

    PARENT_DER      shift and go to state 149


state 109

    (36) compaid -> ID comparacion ID .

    $end            reduce using rule 36 (compaid -> ID comparacion ID .)
    LLAVE_DER       reduce using rule 36 (compaid -> ID comparacion ID .)
    DEFAULT         reduce using rule 36 (compaid -> ID comparacion ID .)
    CASE            reduce using rule 36 (compaid -> ID comparacion ID .)
    RETURN          reduce using rule 36 (compaid -> ID comparacion ID .)


state 110

    (93) asignar_valor_map -> ID CORCHETE_IZQ valor . CORCHETE_DER ASIGNACION valor
    (95) obtener_valor_map -> ID CORCHETE_IZQ valor . CORCHETE_DER

    CORCHETE_DER    shift and go to state 150


state 111

    (91) valor -> CADENA .

    CORCHETE_DER    reduce using rule 91 (valor -> CADENA .)
    PARENT_DER      reduce using rule 91 (valor -> CADENA .)
    $end            reduce using rule 91 (valor -> CADENA .)
    LLAVE_DER       reduce using rule 91 (valor -> CADENA .)
    DEFAULT         reduce using rule 91 (valor -> CADENA .)
    CASE            reduce using rule 91 (valor -> CADENA .)
    RETURN          reduce using rule 91 (valor -> CADENA .)
    COMA            reduce using rule 91 (valor -> CADENA .)


state 112

    (92) valor -> NUMERO .

    CORCHETE_DER    reduce using rule 92 (valor -> NUMERO .)
    PARENT_DER      reduce using rule 92 (valor -> NUMERO .)
    $end            reduce using rule 92 (valor -> NUMERO .)
    LLAVE_DER       reduce using rule 92 (valor -> NUMERO .)
    DEFAULT         reduce using rule 92 (valor -> NUMERO .)
    CASE            reduce using rule 92 (valor -> NUMERO .)
    RETURN          reduce using rule 92 (valor -> NUMERO .)
    COMA            reduce using rule 92 (valor -> NUMERO .)


state 113

    (38) asignacion -> VAR ID tipo_dato . ASIGNACION factor

    ASIGNACION      shift and go to state 151


state 114

    (39) asignacion -> VAR ID COMA . ID tipo_dato ASIGNACION factor COMA factor

    ID              shift and go to state 152


state 115

    (79) map -> VAR ID MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_IZQ    shift and go to state 153


state 116

    (82) tipo_dato -> INT .

    ASIGNACION      reduce using rule 82 (tipo_dato -> INT .)
    CORCHETE_DER    reduce using rule 82 (tipo_dato -> INT .)
    COMA            reduce using rule 82 (tipo_dato -> INT .)
    PARENT_DER      reduce using rule 82 (tipo_dato -> INT .)
    LLAVE_IZQ       reduce using rule 82 (tipo_dato -> INT .)
    $end            reduce using rule 82 (tipo_dato -> INT .)
    LLAVE_DER       reduce using rule 82 (tipo_dato -> INT .)
    DEFAULT         reduce using rule 82 (tipo_dato -> INT .)
    CASE            reduce using rule 82 (tipo_dato -> INT .)
    RETURN          reduce using rule 82 (tipo_dato -> INT .)


state 117

    (83) tipo_dato -> STRING .

    ASIGNACION      reduce using rule 83 (tipo_dato -> STRING .)
    CORCHETE_DER    reduce using rule 83 (tipo_dato -> STRING .)
    COMA            reduce using rule 83 (tipo_dato -> STRING .)
    PARENT_DER      reduce using rule 83 (tipo_dato -> STRING .)
    LLAVE_IZQ       reduce using rule 83 (tipo_dato -> STRING .)
    $end            reduce using rule 83 (tipo_dato -> STRING .)
    LLAVE_DER       reduce using rule 83 (tipo_dato -> STRING .)
    DEFAULT         reduce using rule 83 (tipo_dato -> STRING .)
    CASE            reduce using rule 83 (tipo_dato -> STRING .)
    RETURN          reduce using rule 83 (tipo_dato -> STRING .)


state 118

    (84) tipo_dato -> INT64 .

    ASIGNACION      reduce using rule 84 (tipo_dato -> INT64 .)
    CORCHETE_DER    reduce using rule 84 (tipo_dato -> INT64 .)
    COMA            reduce using rule 84 (tipo_dato -> INT64 .)
    PARENT_DER      reduce using rule 84 (tipo_dato -> INT64 .)
    LLAVE_IZQ       reduce using rule 84 (tipo_dato -> INT64 .)
    $end            reduce using rule 84 (tipo_dato -> INT64 .)
    LLAVE_DER       reduce using rule 84 (tipo_dato -> INT64 .)
    DEFAULT         reduce using rule 84 (tipo_dato -> INT64 .)
    CASE            reduce using rule 84 (tipo_dato -> INT64 .)
    RETURN          reduce using rule 84 (tipo_dato -> INT64 .)


state 119

    (85) tipo_dato -> FLOAT32 .

    ASIGNACION      reduce using rule 85 (tipo_dato -> FLOAT32 .)
    CORCHETE_DER    reduce using rule 85 (tipo_dato -> FLOAT32 .)
    COMA            reduce using rule 85 (tipo_dato -> FLOAT32 .)
    PARENT_DER      reduce using rule 85 (tipo_dato -> FLOAT32 .)
    LLAVE_IZQ       reduce using rule 85 (tipo_dato -> FLOAT32 .)
    $end            reduce using rule 85 (tipo_dato -> FLOAT32 .)
    LLAVE_DER       reduce using rule 85 (tipo_dato -> FLOAT32 .)
    DEFAULT         reduce using rule 85 (tipo_dato -> FLOAT32 .)
    CASE            reduce using rule 85 (tipo_dato -> FLOAT32 .)
    RETURN          reduce using rule 85 (tipo_dato -> FLOAT32 .)


state 120

    (86) tipo_dato -> FLOAT64 .

    ASIGNACION      reduce using rule 86 (tipo_dato -> FLOAT64 .)
    CORCHETE_DER    reduce using rule 86 (tipo_dato -> FLOAT64 .)
    COMA            reduce using rule 86 (tipo_dato -> FLOAT64 .)
    PARENT_DER      reduce using rule 86 (tipo_dato -> FLOAT64 .)
    LLAVE_IZQ       reduce using rule 86 (tipo_dato -> FLOAT64 .)
    $end            reduce using rule 86 (tipo_dato -> FLOAT64 .)
    LLAVE_DER       reduce using rule 86 (tipo_dato -> FLOAT64 .)
    DEFAULT         reduce using rule 86 (tipo_dato -> FLOAT64 .)
    CASE            reduce using rule 86 (tipo_dato -> FLOAT64 .)
    RETURN          reduce using rule 86 (tipo_dato -> FLOAT64 .)


state 121

    (87) tipo_dato -> INT32 .

    ASIGNACION      reduce using rule 87 (tipo_dato -> INT32 .)
    CORCHETE_DER    reduce using rule 87 (tipo_dato -> INT32 .)
    COMA            reduce using rule 87 (tipo_dato -> INT32 .)
    PARENT_DER      reduce using rule 87 (tipo_dato -> INT32 .)
    LLAVE_IZQ       reduce using rule 87 (tipo_dato -> INT32 .)
    $end            reduce using rule 87 (tipo_dato -> INT32 .)
    LLAVE_DER       reduce using rule 87 (tipo_dato -> INT32 .)
    DEFAULT         reduce using rule 87 (tipo_dato -> INT32 .)
    CASE            reduce using rule 87 (tipo_dato -> INT32 .)
    RETURN          reduce using rule 87 (tipo_dato -> INT32 .)


state 122

    (119) boolcadena -> STRCONV PUNTO FORMATBOOL . PARENT_IZQ BOOLEAN PARENT_DER

    PARENT_IZQ      shift and go to state 154


state 123

    (120) cadenabool -> STRCONV PUNTO PARSEBOOL . PARENT_IZQ CADENA PARENT_DER

    PARENT_IZQ      shift and go to state 155


state 124

    (125) enterocadena -> STRCONV PUNTO FORMATINT . PARENT_IZQ NUMERO COMA NUMERO PARENT_DER

    PARENT_IZQ      shift and go to state 156


state 125

    (126) cadenaentero -> STRCONV PUNTO PARSEINT . PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER

    PARENT_IZQ      shift and go to state 157


state 126

    (121) flotantecadena -> STRCONV PUNTO FORMATFLOAT . PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (122) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT . PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (124) errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT . PARENT_IZQ CADENA PARENT_DER

    PARENT_IZQ      shift and go to state 158


state 127

    (123) cadenaflotante -> STRCONV PUNTO PARSEFLOAT . PARENT_IZQ CADENA COMA NUMERO PARENT_DER

    PARENT_IZQ      shift and go to state 159


state 128

    (40) sentenciafor -> FOR ID ASIGNACION . factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 160

state 129

    (73) switch -> SWITCH ID LLAVE_IZQ . cases LLAVE_DER
    (74) cases -> . case
    (75) cases -> . case default
    (76) cases -> . case cases
    (77) case -> . CASE factor DOS_PUNTOS programa

    CASE            shift and go to state 163

    cases                          shift and go to state 161
    case                           shift and go to state 162

state 130

    (94) eliminar_valor_map -> DELETE PARENT_IZQ ID . COMA valor PARENT_DER

    COMA            shift and go to state 164


state 131

    (96) funcion -> FUNC ID PARENT_IZQ . argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> FUNC ID PARENT_IZQ . argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> FUNC ID PARENT_IZQ . argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (99) argumentos -> . ID tipo_dato
    (100) argumentos -> . ID tipo_dato COMA argumentos

    ID              shift and go to state 165

    argumentos                     shift and go to state 166

state 132

    (115) seman_operacion -> FLOAT MAS FLOAT .

    $end            reduce using rule 115 (seman_operacion -> FLOAT MAS FLOAT .)
    LLAVE_DER       reduce using rule 115 (seman_operacion -> FLOAT MAS FLOAT .)
    DEFAULT         reduce using rule 115 (seman_operacion -> FLOAT MAS FLOAT .)
    CASE            reduce using rule 115 (seman_operacion -> FLOAT MAS FLOAT .)
    RETURN          reduce using rule 115 (seman_operacion -> FLOAT MAS FLOAT .)


state 133

    (107) seman_operacion -> FLOAT MAS NUMERO .

    $end            reduce using rule 107 (seman_operacion -> FLOAT MAS NUMERO .)
    LLAVE_DER       reduce using rule 107 (seman_operacion -> FLOAT MAS NUMERO .)
    DEFAULT         reduce using rule 107 (seman_operacion -> FLOAT MAS NUMERO .)
    CASE            reduce using rule 107 (seman_operacion -> FLOAT MAS NUMERO .)
    RETURN          reduce using rule 107 (seman_operacion -> FLOAT MAS NUMERO .)


state 134

    (116) seman_operacion -> FLOAT MENOS FLOAT .

    $end            reduce using rule 116 (seman_operacion -> FLOAT MENOS FLOAT .)
    LLAVE_DER       reduce using rule 116 (seman_operacion -> FLOAT MENOS FLOAT .)
    DEFAULT         reduce using rule 116 (seman_operacion -> FLOAT MENOS FLOAT .)
    CASE            reduce using rule 116 (seman_operacion -> FLOAT MENOS FLOAT .)
    RETURN          reduce using rule 116 (seman_operacion -> FLOAT MENOS FLOAT .)


state 135

    (108) seman_operacion -> FLOAT MENOS NUMERO .

    $end            reduce using rule 108 (seman_operacion -> FLOAT MENOS NUMERO .)
    LLAVE_DER       reduce using rule 108 (seman_operacion -> FLOAT MENOS NUMERO .)
    DEFAULT         reduce using rule 108 (seman_operacion -> FLOAT MENOS NUMERO .)
    CASE            reduce using rule 108 (seman_operacion -> FLOAT MENOS NUMERO .)
    RETURN          reduce using rule 108 (seman_operacion -> FLOAT MENOS NUMERO .)


state 136

    (117) seman_operacion -> FLOAT MULTIPLICADOR FLOAT .

    $end            reduce using rule 117 (seman_operacion -> FLOAT MULTIPLICADOR FLOAT .)
    LLAVE_DER       reduce using rule 117 (seman_operacion -> FLOAT MULTIPLICADOR FLOAT .)
    DEFAULT         reduce using rule 117 (seman_operacion -> FLOAT MULTIPLICADOR FLOAT .)
    CASE            reduce using rule 117 (seman_operacion -> FLOAT MULTIPLICADOR FLOAT .)
    RETURN          reduce using rule 117 (seman_operacion -> FLOAT MULTIPLICADOR FLOAT .)


state 137

    (109) seman_operacion -> FLOAT MULTIPLICADOR NUMERO .

    $end            reduce using rule 109 (seman_operacion -> FLOAT MULTIPLICADOR NUMERO .)
    LLAVE_DER       reduce using rule 109 (seman_operacion -> FLOAT MULTIPLICADOR NUMERO .)
    DEFAULT         reduce using rule 109 (seman_operacion -> FLOAT MULTIPLICADOR NUMERO .)
    CASE            reduce using rule 109 (seman_operacion -> FLOAT MULTIPLICADOR NUMERO .)
    RETURN          reduce using rule 109 (seman_operacion -> FLOAT MULTIPLICADOR NUMERO .)


state 138

    (118) seman_operacion -> FLOAT DIVISOR FLOAT .

    $end            reduce using rule 118 (seman_operacion -> FLOAT DIVISOR FLOAT .)
    LLAVE_DER       reduce using rule 118 (seman_operacion -> FLOAT DIVISOR FLOAT .)
    DEFAULT         reduce using rule 118 (seman_operacion -> FLOAT DIVISOR FLOAT .)
    CASE            reduce using rule 118 (seman_operacion -> FLOAT DIVISOR FLOAT .)
    RETURN          reduce using rule 118 (seman_operacion -> FLOAT DIVISOR FLOAT .)


state 139

    (110) seman_operacion -> FLOAT DIVISOR NUMERO .

    $end            reduce using rule 110 (seman_operacion -> FLOAT DIVISOR NUMERO .)
    LLAVE_DER       reduce using rule 110 (seman_operacion -> FLOAT DIVISOR NUMERO .)
    DEFAULT         reduce using rule 110 (seman_operacion -> FLOAT DIVISOR NUMERO .)
    CASE            reduce using rule 110 (seman_operacion -> FLOAT DIVISOR NUMERO .)
    RETURN          reduce using rule 110 (seman_operacion -> FLOAT DIVISOR NUMERO .)


state 140

    (28) impresion -> FMT PUNTO PRINTF PARENT_IZQ . CADENA COMA NUMERO PARENT_DER
    (29) impresion -> FMT PUNTO PRINTF PARENT_IZQ . empty PARENT_DER
    (101) empty -> .

    CADENA          shift and go to state 167
    PARENT_DER      reduce using rule 101 (empty -> .)

    empty                          shift and go to state 168

state 141

    (30) impresion -> FMT PUNTO PRINTLN PARENT_IZQ . CADENA COMA NUMERO PARENT_DER
    (31) impresion -> FMT PUNTO PRINTLN PARENT_IZQ . empty PARENT_DER
    (32) impresion -> FMT PUNTO PRINTLN PARENT_IZQ . CADENA PARENT_DER
    (101) empty -> .

    CADENA          shift and go to state 169
    PARENT_DER      reduce using rule 101 (empty -> .)

    empty                          shift and go to state 170

state 142

    (61) sentencia -> IF factor comparacion factor . LLAVE_IZQ programa LLAVE_DER

    LLAVE_IZQ       shift and go to state 171


state 143

    (44) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER tipo_dato
    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad . CORCHETE_DER

    CORCHETE_DER    shift and go to state 172


state 144

    (47) cantidad -> NUMERO .

    CORCHETE_DER    reduce using rule 47 (cantidad -> NUMERO .)


state 145

    (48) cantidad -> ARRPUNTOS .

    CORCHETE_DER    reduce using rule 48 (cantidad -> ARRPUNTOS .)


state 146

    (51) slice -> ID ASIGNACION MAKE PARENT_IZQ . CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> ID ASIGNACION MAKE PARENT_IZQ . CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (80) map -> ID ASIGNACION MAKE PARENT_IZQ . MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    CORCHETE_IZQ    shift and go to state 173
    MAP             shift and go to state 174


state 147

    (81) map -> ID ASIGNACION MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 175

state 148

    (34) longvariable -> ID PARENT_IZQ ID PARENT_DER .
    (53) capslice -> ID PARENT_IZQ ID PARENT_DER .

  ! reduce/reduce conflict for $end resolved using rule 34 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for LLAVE_DER resolved using rule 34 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 34 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for CASE resolved using rule 34 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
  ! reduce/reduce conflict for RETURN resolved using rule 34 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    $end            reduce using rule 34 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    LLAVE_DER       reduce using rule 34 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    DEFAULT         reduce using rule 34 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    CASE            reduce using rule 34 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)
    RETURN          reduce using rule 34 (longvariable -> ID PARENT_IZQ ID PARENT_DER .)

  ! $end            [ reduce using rule 53 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! LLAVE_DER       [ reduce using rule 53 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! DEFAULT         [ reduce using rule 53 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! CASE            [ reduce using rule 53 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]
  ! RETURN          [ reduce using rule 53 (capslice -> ID PARENT_IZQ ID PARENT_DER .) ]


state 149

    (33) longvariable -> ID PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 33 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 33 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    DEFAULT         reduce using rule 33 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    CASE            reduce using rule 33 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)
    RETURN          reduce using rule 33 (longvariable -> ID PARENT_IZQ CADENA PARENT_DER .)


state 150

    (93) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER . ASIGNACION valor
    (95) obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .

    ASIGNACION      shift and go to state 176
    $end            reduce using rule 95 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    LLAVE_DER       reduce using rule 95 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    DEFAULT         reduce using rule 95 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    CASE            reduce using rule 95 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)
    RETURN          reduce using rule 95 (obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER .)


state 151

    (38) asignacion -> VAR ID tipo_dato ASIGNACION . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 177

state 152

    (39) asignacion -> VAR ID COMA ID . tipo_dato ASIGNACION factor COMA factor
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 178

state 153

    (79) map -> VAR ID MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 179

state 154

    (119) boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ . BOOLEAN PARENT_DER

    BOOLEAN         shift and go to state 180


state 155

    (120) cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ . CADENA PARENT_DER

    CADENA          shift and go to state 181


state 156

    (125) enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ . NUMERO COMA NUMERO PARENT_DER

    NUMERO          shift and go to state 182


state 157

    (126) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ . CADENA COMA NUMERO COMA NUMERO PARENT_DER

    CADENA          shift and go to state 183


state 158

    (121) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ . FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (122) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ . FLOAT COMA NUMERO PARENT_DER
    (124) errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ . CADENA PARENT_DER

    FLOAT           shift and go to state 184
    CADENA          shift and go to state 185


state 159

    (123) cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ . CADENA COMA NUMERO PARENT_DER

    CADENA          shift and go to state 186


state 160

    (40) sentenciafor -> FOR ID ASIGNACION factor . FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    FIN_SENTENCIA   shift and go to state 187


state 161

    (73) switch -> SWITCH ID LLAVE_IZQ cases . LLAVE_DER

    LLAVE_DER       shift and go to state 188


state 162

    (74) cases -> case .
    (75) cases -> case . default
    (76) cases -> case . cases
    (78) default -> . DEFAULT DOS_PUNTOS programa
    (74) cases -> . case
    (75) cases -> . case default
    (76) cases -> . case cases
    (77) case -> . CASE factor DOS_PUNTOS programa

    LLAVE_DER       reduce using rule 74 (cases -> case .)
    DEFAULT         shift and go to state 191
    CASE            shift and go to state 163

    case                           shift and go to state 162
    default                        shift and go to state 189
    cases                          shift and go to state 190

state 163

    (77) case -> CASE . factor DOS_PUNTOS programa
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 192

state 164

    (94) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA . valor PARENT_DER
    (91) valor -> . CADENA
    (92) valor -> . NUMERO

    CADENA          shift and go to state 111
    NUMERO          shift and go to state 112

    valor                          shift and go to state 193

state 165

    (99) argumentos -> ID . tipo_dato
    (100) argumentos -> ID . tipo_dato COMA argumentos
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 194

state 166

    (96) funcion -> FUNC ID PARENT_IZQ argumentos . PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> FUNC ID PARENT_IZQ argumentos . PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> FUNC ID PARENT_IZQ argumentos . PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER

    PARENT_DER      shift and go to state 195


state 167

    (28) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA . COMA NUMERO PARENT_DER

    COMA            shift and go to state 196


state 168

    (29) impresion -> FMT PUNTO PRINTF PARENT_IZQ empty . PARENT_DER

    PARENT_DER      shift and go to state 197


state 169

    (30) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA . COMA NUMERO PARENT_DER
    (32) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA . PARENT_DER

    COMA            shift and go to state 198
    PARENT_DER      shift and go to state 199


state 170

    (31) impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty . PARENT_DER

    PARENT_DER      shift and go to state 200


state 171

    (61) sentencia -> IF factor comparacion factor LLAVE_IZQ . programa LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (54) expression -> . expression MAS term
    (55) expression -> . expression MENOS term
    (56) expression -> . term
    (28) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (61) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (37) asignacion -> . ID ASIGNACION factor
    (38) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (39) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (33) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (34) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (119) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (35) companum -> . NUMERO comparacion NUMERO
    (36) compaid -> . ID comparacion ID
    (40) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (44) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (51) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (53) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (73) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (79) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (81) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (93) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (94) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (95) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (96) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (120) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (125) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (126) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (121) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (123) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (102) seman_operacion -> . NUMERO MAS NUMERO
    (103) seman_operacion -> . NUMERO MENOS NUMERO
    (104) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (105) seman_operacion -> . NUMERO DIVISOR NUMERO
    (106) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (107) seman_operacion -> . FLOAT MAS NUMERO
    (108) seman_operacion -> . FLOAT MENOS NUMERO
    (109) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (110) seman_operacion -> . FLOAT DIVISOR NUMERO
    (111) seman_operacion -> . NUMERO MAS FLOAT
    (112) seman_operacion -> . NUMERO MENOS FLOAT
    (113) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (114) seman_operacion -> . NUMERO DIVISOR FLOAT
    (115) seman_operacion -> . FLOAT MAS FLOAT
    (116) seman_operacion -> . FLOAT MENOS FLOAT
    (117) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (118) seman_operacion -> . FLOAT DIVISOR FLOAT
    (41) incremento -> . ID INCREMENTO
    (42) incremento -> . ID ASIGNACION ID
    (43) incremento -> . ID DECREMENTO
    (122) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (124) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (57) term -> . term MULTIPLICADOR factor
    (58) term -> . term DIVISOR factor
    (59) term -> . term MOD_DIVISION factor
    (60) term -> . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 30
    IF              shift and go to state 34
    ID              shift and go to state 36
    VAR             shift and go to state 37
    STRCONV         shift and go to state 38
    NUMERO          shift and go to state 33
    FOR             shift and go to state 39
    SWITCH          shift and go to state 40
    DELETE          shift and go to state 41
    FUNC            shift and go to state 42
    FLOAT           shift and go to state 43
    CADENA          shift and go to state 32
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 35
    programa                       shift and go to state 201
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    incremento                     shift and go to state 26
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    term                           shift and go to state 29

state 172

    (44) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . tipo_dato
    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER . tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    $end            reduce using rule 46 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .)
    LLAVE_DER       reduce using rule 46 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .)
    DEFAULT         reduce using rule 46 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .)
    CASE            reduce using rule 46 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .)
    RETURN          reduce using rule 46 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER .)
    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 202

state 173

    (51) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ . CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ . CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER

    CORCHETE_DER    shift and go to state 203


state 174

    (80) map -> ID ASIGNACION MAKE PARENT_IZQ MAP . CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER

    CORCHETE_IZQ    shift and go to state 204


state 175

    (81) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 205


state 176

    (93) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION . valor
    (91) valor -> . CADENA
    (92) valor -> . NUMERO

    CADENA          shift and go to state 111
    NUMERO          shift and go to state 112

    valor                          shift and go to state 206

state 177

    (38) asignacion -> VAR ID tipo_dato ASIGNACION factor .

    $end            reduce using rule 38 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    LLAVE_DER       reduce using rule 38 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    DEFAULT         reduce using rule 38 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    CASE            reduce using rule 38 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)
    RETURN          reduce using rule 38 (asignacion -> VAR ID tipo_dato ASIGNACION factor .)


state 178

    (39) asignacion -> VAR ID COMA ID tipo_dato . ASIGNACION factor COMA factor

    ASIGNACION      shift and go to state 207


state 179

    (79) map -> VAR ID MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER

    CORCHETE_DER    shift and go to state 208


state 180

    (119) boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN . PARENT_DER

    PARENT_DER      shift and go to state 209


state 181

    (120) cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA . PARENT_DER

    PARENT_DER      shift and go to state 210


state 182

    (125) enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO . COMA NUMERO PARENT_DER

    COMA            shift and go to state 211


state 183

    (126) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA . COMA NUMERO COMA NUMERO PARENT_DER

    COMA            shift and go to state 212


state 184

    (121) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT . COMA CADENA COMA NUMERO PARENT_DER
    (122) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT . COMA NUMERO PARENT_DER

    COMA            shift and go to state 213


state 185

    (124) errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA . PARENT_DER

    PARENT_DER      shift and go to state 214


state 186

    (123) cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA . COMA NUMERO PARENT_DER

    COMA            shift and go to state 215


state 187

    (40) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA . ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    ID              shift and go to state 216


state 188

    (73) switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .

    $end            reduce using rule 73 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    LLAVE_DER       reduce using rule 73 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    DEFAULT         reduce using rule 73 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    CASE            reduce using rule 73 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)
    RETURN          reduce using rule 73 (switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER .)


state 189

    (75) cases -> case default .

    LLAVE_DER       reduce using rule 75 (cases -> case default .)


state 190

    (76) cases -> case cases .

    LLAVE_DER       reduce using rule 76 (cases -> case cases .)


state 191

    (78) default -> DEFAULT . DOS_PUNTOS programa

    DOS_PUNTOS      shift and go to state 217


state 192

    (77) case -> CASE factor . DOS_PUNTOS programa

    DOS_PUNTOS      shift and go to state 218


state 193

    (94) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor . PARENT_DER

    PARENT_DER      shift and go to state 219


state 194

    (99) argumentos -> ID tipo_dato .
    (100) argumentos -> ID tipo_dato . COMA argumentos

    PARENT_DER      reduce using rule 99 (argumentos -> ID tipo_dato .)
    COMA            shift and go to state 220


state 195

    (96) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER . tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER . tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER . tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 221

state 196

    (28) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 222


state 197

    (29) impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .

    $end            reduce using rule 29 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    LLAVE_DER       reduce using rule 29 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    DEFAULT         reduce using rule 29 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    CASE            reduce using rule 29 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)
    RETURN          reduce using rule 29 (impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER .)


state 198

    (30) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 223


state 199

    (32) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 32 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 32 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .)
    DEFAULT         reduce using rule 32 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .)
    CASE            reduce using rule 32 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .)
    RETURN          reduce using rule 32 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER .)


state 200

    (31) impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .

    $end            reduce using rule 31 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    LLAVE_DER       reduce using rule 31 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    DEFAULT         reduce using rule 31 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    CASE            reduce using rule 31 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)
    RETURN          reduce using rule 31 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER .)


state 201

    (61) sentencia -> IF factor comparacion factor LLAVE_IZQ programa . LLAVE_DER

    LLAVE_DER       shift and go to state 224


state 202

    (44) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .
    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato . LLAVE_IZQ valores LLAVE_DER

    $end            reduce using rule 44 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .)
    LLAVE_DER       reduce using rule 44 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .)
    DEFAULT         reduce using rule 44 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .)
    CASE            reduce using rule 44 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .)
    RETURN          reduce using rule 44 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato .)
    LLAVE_IZQ       shift and go to state 225


state 203

    (51) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER . tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER . tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 226

state 204

    (80) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ . tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 227

state 205

    (81) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato LLAVE_IZQ valores LLAVE_DER
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 228

state 206

    (93) asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .

    $end            reduce using rule 93 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    LLAVE_DER       reduce using rule 93 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    DEFAULT         reduce using rule 93 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    CASE            reduce using rule 93 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)
    RETURN          reduce using rule 93 (asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor .)


state 207

    (39) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION . factor COMA factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 229

state 208

    (79) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato LLAVE_IZQ valores LLAVE_DER
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 230

state 209

    (119) boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .

    $end            reduce using rule 119 (boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .)
    LLAVE_DER       reduce using rule 119 (boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .)
    DEFAULT         reduce using rule 119 (boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .)
    CASE            reduce using rule 119 (boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .)
    RETURN          reduce using rule 119 (boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER .)


state 210

    (120) cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 120 (cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 120 (cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .)
    DEFAULT         reduce using rule 120 (cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .)
    CASE            reduce using rule 120 (cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .)
    RETURN          reduce using rule 120 (cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER .)


state 211

    (125) enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 231


state 212

    (126) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA . NUMERO COMA NUMERO PARENT_DER

    NUMERO          shift and go to state 232


state 213

    (121) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA . CADENA COMA NUMERO PARENT_DER
    (122) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA . NUMERO PARENT_DER

    CADENA          shift and go to state 233
    NUMERO          shift and go to state 234


state 214

    (124) errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .

    $end            reduce using rule 124 (errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .)
    LLAVE_DER       reduce using rule 124 (errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .)
    DEFAULT         reduce using rule 124 (errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .)
    CASE            reduce using rule 124 (errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .)
    RETURN          reduce using rule 124 (errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER .)


state 215

    (123) cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 235


state 216

    (40) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID . comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (62) comparacion -> . IGUALDAD
    (63) comparacion -> . MAYOR
    (64) comparacion -> . MENOR
    (65) comparacion -> . MAYOR_IGU
    (66) comparacion -> . MENOR_IGU
    (67) comparacion -> . DESIGUALDAD

    IGUALDAD        shift and go to state 60
    MAYOR           shift and go to state 61
    MENOR           shift and go to state 62
    MAYOR_IGU       shift and go to state 63
    MENOR_IGU       shift and go to state 64
    DESIGUALDAD     shift and go to state 65

    comparacion                    shift and go to state 236

state 217

    (78) default -> DEFAULT DOS_PUNTOS . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (54) expression -> . expression MAS term
    (55) expression -> . expression MENOS term
    (56) expression -> . term
    (28) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (61) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (37) asignacion -> . ID ASIGNACION factor
    (38) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (39) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (33) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (34) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (119) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (35) companum -> . NUMERO comparacion NUMERO
    (36) compaid -> . ID comparacion ID
    (40) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (44) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (51) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (53) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (73) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (79) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (81) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (93) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (94) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (95) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (96) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (120) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (125) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (126) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (121) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (123) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (102) seman_operacion -> . NUMERO MAS NUMERO
    (103) seman_operacion -> . NUMERO MENOS NUMERO
    (104) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (105) seman_operacion -> . NUMERO DIVISOR NUMERO
    (106) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (107) seman_operacion -> . FLOAT MAS NUMERO
    (108) seman_operacion -> . FLOAT MENOS NUMERO
    (109) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (110) seman_operacion -> . FLOAT DIVISOR NUMERO
    (111) seman_operacion -> . NUMERO MAS FLOAT
    (112) seman_operacion -> . NUMERO MENOS FLOAT
    (113) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (114) seman_operacion -> . NUMERO DIVISOR FLOAT
    (115) seman_operacion -> . FLOAT MAS FLOAT
    (116) seman_operacion -> . FLOAT MENOS FLOAT
    (117) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (118) seman_operacion -> . FLOAT DIVISOR FLOAT
    (41) incremento -> . ID INCREMENTO
    (42) incremento -> . ID ASIGNACION ID
    (43) incremento -> . ID DECREMENTO
    (122) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (124) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (57) term -> . term MULTIPLICADOR factor
    (58) term -> . term DIVISOR factor
    (59) term -> . term MOD_DIVISION factor
    (60) term -> . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 30
    IF              shift and go to state 34
    ID              shift and go to state 36
    VAR             shift and go to state 37
    STRCONV         shift and go to state 38
    NUMERO          shift and go to state 33
    FOR             shift and go to state 39
    SWITCH          shift and go to state 40
    DELETE          shift and go to state 41
    FUNC            shift and go to state 42
    FLOAT           shift and go to state 43
    CADENA          shift and go to state 32
    PARENT_IZQ      shift and go to state 31

    programa                       shift and go to state 237
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    incremento                     shift and go to state 26
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    term                           shift and go to state 29
    factor                         shift and go to state 35

state 218

    (77) case -> CASE factor DOS_PUNTOS . programa
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (54) expression -> . expression MAS term
    (55) expression -> . expression MENOS term
    (56) expression -> . term
    (28) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (61) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (37) asignacion -> . ID ASIGNACION factor
    (38) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (39) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (33) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (34) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (119) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (35) companum -> . NUMERO comparacion NUMERO
    (36) compaid -> . ID comparacion ID
    (40) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (44) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (51) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (53) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (73) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (79) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (81) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (93) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (94) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (95) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (96) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (120) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (125) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (126) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (121) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (123) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (102) seman_operacion -> . NUMERO MAS NUMERO
    (103) seman_operacion -> . NUMERO MENOS NUMERO
    (104) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (105) seman_operacion -> . NUMERO DIVISOR NUMERO
    (106) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (107) seman_operacion -> . FLOAT MAS NUMERO
    (108) seman_operacion -> . FLOAT MENOS NUMERO
    (109) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (110) seman_operacion -> . FLOAT DIVISOR NUMERO
    (111) seman_operacion -> . NUMERO MAS FLOAT
    (112) seman_operacion -> . NUMERO MENOS FLOAT
    (113) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (114) seman_operacion -> . NUMERO DIVISOR FLOAT
    (115) seman_operacion -> . FLOAT MAS FLOAT
    (116) seman_operacion -> . FLOAT MENOS FLOAT
    (117) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (118) seman_operacion -> . FLOAT DIVISOR FLOAT
    (41) incremento -> . ID INCREMENTO
    (42) incremento -> . ID ASIGNACION ID
    (43) incremento -> . ID DECREMENTO
    (122) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (124) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (57) term -> . term MULTIPLICADOR factor
    (58) term -> . term DIVISOR factor
    (59) term -> . term MOD_DIVISION factor
    (60) term -> . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 30
    IF              shift and go to state 34
    ID              shift and go to state 36
    VAR             shift and go to state 37
    STRCONV         shift and go to state 38
    NUMERO          shift and go to state 33
    FOR             shift and go to state 39
    SWITCH          shift and go to state 40
    DELETE          shift and go to state 41
    FUNC            shift and go to state 42
    FLOAT           shift and go to state 43
    CADENA          shift and go to state 32
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 35
    programa                       shift and go to state 238
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    incremento                     shift and go to state 26
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    term                           shift and go to state 29

state 219

    (94) eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .

    $end            reduce using rule 94 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    LLAVE_DER       reduce using rule 94 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    DEFAULT         reduce using rule 94 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    CASE            reduce using rule 94 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)
    RETURN          reduce using rule 94 (eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER .)


state 220

    (100) argumentos -> ID tipo_dato COMA . argumentos
    (99) argumentos -> . ID tipo_dato
    (100) argumentos -> . ID tipo_dato COMA argumentos

    ID              shift and go to state 165

    argumentos                     shift and go to state 239

state 221

    (96) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato . LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato . LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato . LLAVE_IZQ RETURN ID LLAVE_DER

    LLAVE_IZQ       shift and go to state 240


state 222

    (28) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 241


state 223

    (30) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 242


state 224

    (61) sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 61 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 61 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 61 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 61 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 61 (sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER .)


state 225

    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ . valores LLAVE_DER
    (49) valores -> . factor
    (50) valores -> . factor COMA valores
    (88) valores -> . clave_valor
    (89) valores -> . clave_valor COMA valores
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER
    (90) clave_valor -> . valor DOS_PUNTOS valor
    (91) valor -> . CADENA
    (92) valor -> . NUMERO

    NUMERO          shift and go to state 246
    ID              shift and go to state 52
    CADENA          shift and go to state 247
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    valores                        shift and go to state 243
    factor                         shift and go to state 244
    clave_valor                    shift and go to state 245
    valor                          shift and go to state 248

state 226

    (51) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato . COMA NUMERO PARENT_DER
    (52) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato . COMA NUMERO COMA NUMERO PARENT_DER

    COMA            shift and go to state 249


state 227

    (80) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato . CORCHETE_DER tipo_dato PARENT_DER

    CORCHETE_DER    shift and go to state 250


state 228

    (81) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . LLAVE_IZQ valores LLAVE_DER

    LLAVE_IZQ       shift and go to state 251


state 229

    (39) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor . COMA factor

    COMA            shift and go to state 252


state 230

    (79) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . LLAVE_IZQ valores LLAVE_DER

    LLAVE_IZQ       shift and go to state 253


state 231

    (125) enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 254


state 232

    (126) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO . COMA NUMERO PARENT_DER

    COMA            shift and go to state 255


state 233

    (121) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA . COMA NUMERO PARENT_DER

    COMA            shift and go to state 256


state 234

    (122) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 257


state 235

    (123) cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 258


state 236

    (40) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion . factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 259

state 237

    (78) default -> DEFAULT DOS_PUNTOS programa .

    LLAVE_DER       reduce using rule 78 (default -> DEFAULT DOS_PUNTOS programa .)


state 238

    (77) case -> CASE factor DOS_PUNTOS programa .

    DEFAULT         reduce using rule 77 (case -> CASE factor DOS_PUNTOS programa .)
    CASE            reduce using rule 77 (case -> CASE factor DOS_PUNTOS programa .)
    LLAVE_DER       reduce using rule 77 (case -> CASE factor DOS_PUNTOS programa .)


state 239

    (100) argumentos -> ID tipo_dato COMA argumentos .

    PARENT_DER      reduce using rule 100 (argumentos -> ID tipo_dato COMA argumentos .)


state 240

    (96) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ . programa LLAVE_DER
    (97) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ . programa RETURN ID LLAVE_DER
    (98) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ . RETURN ID LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (54) expression -> . expression MAS term
    (55) expression -> . expression MENOS term
    (56) expression -> . term
    (28) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (61) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (37) asignacion -> . ID ASIGNACION factor
    (38) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (39) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (33) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (34) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (119) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (35) companum -> . NUMERO comparacion NUMERO
    (36) compaid -> . ID comparacion ID
    (40) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (44) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (51) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (53) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (73) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (79) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (81) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (93) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (94) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (95) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (96) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (120) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (125) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (126) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (121) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (123) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (102) seman_operacion -> . NUMERO MAS NUMERO
    (103) seman_operacion -> . NUMERO MENOS NUMERO
    (104) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (105) seman_operacion -> . NUMERO DIVISOR NUMERO
    (106) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (107) seman_operacion -> . FLOAT MAS NUMERO
    (108) seman_operacion -> . FLOAT MENOS NUMERO
    (109) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (110) seman_operacion -> . FLOAT DIVISOR NUMERO
    (111) seman_operacion -> . NUMERO MAS FLOAT
    (112) seman_operacion -> . NUMERO MENOS FLOAT
    (113) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (114) seman_operacion -> . NUMERO DIVISOR FLOAT
    (115) seman_operacion -> . FLOAT MAS FLOAT
    (116) seman_operacion -> . FLOAT MENOS FLOAT
    (117) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (118) seman_operacion -> . FLOAT DIVISOR FLOAT
    (41) incremento -> . ID INCREMENTO
    (42) incremento -> . ID ASIGNACION ID
    (43) incremento -> . ID DECREMENTO
    (122) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (124) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (57) term -> . term MULTIPLICADOR factor
    (58) term -> . term DIVISOR factor
    (59) term -> . term MOD_DIVISION factor
    (60) term -> . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    RETURN          shift and go to state 261
    FMT             shift and go to state 30
    IF              shift and go to state 34
    ID              shift and go to state 36
    VAR             shift and go to state 37
    STRCONV         shift and go to state 38
    NUMERO          shift and go to state 33
    FOR             shift and go to state 39
    SWITCH          shift and go to state 40
    DELETE          shift and go to state 41
    FUNC            shift and go to state 42
    FLOAT           shift and go to state 43
    CADENA          shift and go to state 32
    PARENT_IZQ      shift and go to state 31

    programa                       shift and go to state 260
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    incremento                     shift and go to state 26
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    term                           shift and go to state 29
    factor                         shift and go to state 35

state 241

    (28) impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .

    $end            reduce using rule 28 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 28 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 28 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 28 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 28 (impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)


state 242

    (30) impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .

    $end            reduce using rule 30 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 30 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 30 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 30 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 30 (impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)


state 243

    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 262


state 244

    (49) valores -> factor .
    (50) valores -> factor . COMA valores

    LLAVE_DER       reduce using rule 49 (valores -> factor .)
    COMA            shift and go to state 263


state 245

    (88) valores -> clave_valor .
    (89) valores -> clave_valor . COMA valores

    LLAVE_DER       reduce using rule 88 (valores -> clave_valor .)
    COMA            shift and go to state 264


state 246

    (68) factor -> NUMERO .
    (92) valor -> NUMERO .

    COMA            reduce using rule 68 (factor -> NUMERO .)
    LLAVE_DER       reduce using rule 68 (factor -> NUMERO .)
    DOS_PUNTOS      reduce using rule 92 (valor -> NUMERO .)


state 247

    (70) factor -> CADENA .
    (91) valor -> CADENA .

    COMA            reduce using rule 70 (factor -> CADENA .)
    LLAVE_DER       reduce using rule 70 (factor -> CADENA .)
    DOS_PUNTOS      reduce using rule 91 (valor -> CADENA .)


state 248

    (90) clave_valor -> valor . DOS_PUNTOS valor

    DOS_PUNTOS      shift and go to state 265


state 249

    (51) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA . NUMERO PARENT_DER
    (52) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA . NUMERO COMA NUMERO PARENT_DER

    NUMERO          shift and go to state 266


state 250

    (80) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER . tipo_dato PARENT_DER
    (82) tipo_dato -> . INT
    (83) tipo_dato -> . STRING
    (84) tipo_dato -> . INT64
    (85) tipo_dato -> . FLOAT32
    (86) tipo_dato -> . FLOAT64
    (87) tipo_dato -> . INT32

    INT             shift and go to state 116
    STRING          shift and go to state 117
    INT64           shift and go to state 118
    FLOAT32         shift and go to state 119
    FLOAT64         shift and go to state 120
    INT32           shift and go to state 121

    tipo_dato                      shift and go to state 267

state 251

    (81) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ . valores LLAVE_DER
    (49) valores -> . factor
    (50) valores -> . factor COMA valores
    (88) valores -> . clave_valor
    (89) valores -> . clave_valor COMA valores
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER
    (90) clave_valor -> . valor DOS_PUNTOS valor
    (91) valor -> . CADENA
    (92) valor -> . NUMERO

    NUMERO          shift and go to state 246
    ID              shift and go to state 52
    CADENA          shift and go to state 247
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    valores                        shift and go to state 268
    factor                         shift and go to state 244
    clave_valor                    shift and go to state 245
    valor                          shift and go to state 248

state 252

    (39) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    NUMERO          shift and go to state 51
    ID              shift and go to state 52
    CADENA          shift and go to state 32
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 269

state 253

    (79) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ . valores LLAVE_DER
    (49) valores -> . factor
    (50) valores -> . factor COMA valores
    (88) valores -> . clave_valor
    (89) valores -> . clave_valor COMA valores
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER
    (90) clave_valor -> . valor DOS_PUNTOS valor
    (91) valor -> . CADENA
    (92) valor -> . NUMERO

    NUMERO          shift and go to state 246
    ID              shift and go to state 52
    CADENA          shift and go to state 247
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    valores                        shift and go to state 270
    factor                         shift and go to state 244
    clave_valor                    shift and go to state 245
    valor                          shift and go to state 248

state 254

    (125) enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .

    $end            reduce using rule 125 (enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 125 (enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 125 (enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 125 (enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 125 (enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER .)


state 255

    (126) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 271


state 256

    (121) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 272


state 257

    (122) errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .

    $end            reduce using rule 122 (errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 122 (errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 122 (errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 122 (errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 122 (errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER .)


state 258

    (123) cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .

    $end            reduce using rule 123 (cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 123 (cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 123 (cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 123 (cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 123 (cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER .)


state 259

    (40) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor . FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER

    FIN_SENTENCIA   shift and go to state 273


state 260

    (96) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa . LLAVE_DER
    (97) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa . RETURN ID LLAVE_DER

    LLAVE_DER       shift and go to state 274
    RETURN          shift and go to state 275


state 261

    (98) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN . ID LLAVE_DER

    ID              shift and go to state 276


state 262

    (45) arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 45 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 45 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 45 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 45 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 45 (arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)


state 263

    (50) valores -> factor COMA . valores
    (49) valores -> . factor
    (50) valores -> . factor COMA valores
    (88) valores -> . clave_valor
    (89) valores -> . clave_valor COMA valores
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER
    (90) clave_valor -> . valor DOS_PUNTOS valor
    (91) valor -> . CADENA
    (92) valor -> . NUMERO

    NUMERO          shift and go to state 246
    ID              shift and go to state 52
    CADENA          shift and go to state 247
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 244
    valores                        shift and go to state 277
    clave_valor                    shift and go to state 245
    valor                          shift and go to state 248

state 264

    (89) valores -> clave_valor COMA . valores
    (49) valores -> . factor
    (50) valores -> . factor COMA valores
    (88) valores -> . clave_valor
    (89) valores -> . clave_valor COMA valores
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER
    (90) clave_valor -> . valor DOS_PUNTOS valor
    (91) valor -> . CADENA
    (92) valor -> . NUMERO

    NUMERO          shift and go to state 246
    ID              shift and go to state 52
    CADENA          shift and go to state 247
    FLOAT           shift and go to state 53
    PARENT_IZQ      shift and go to state 31

    clave_valor                    shift and go to state 245
    valores                        shift and go to state 278
    factor                         shift and go to state 244
    valor                          shift and go to state 248

state 265

    (90) clave_valor -> valor DOS_PUNTOS . valor
    (91) valor -> . CADENA
    (92) valor -> . NUMERO

    CADENA          shift and go to state 111
    NUMERO          shift and go to state 112

    valor                          shift and go to state 279

state 266

    (51) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO . PARENT_DER
    (52) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO . COMA NUMERO PARENT_DER

    PARENT_DER      shift and go to state 281
    COMA            shift and go to state 280


state 267

    (80) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato . PARENT_DER

    PARENT_DER      shift and go to state 282


state 268

    (81) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 283


state 269

    (39) asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .

    $end            reduce using rule 39 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    LLAVE_DER       reduce using rule 39 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    DEFAULT         reduce using rule 39 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    CASE            reduce using rule 39 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)
    RETURN          reduce using rule 39 (asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor .)


state 270

    (79) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores . LLAVE_DER

    LLAVE_DER       shift and go to state 284


state 271

    (126) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 285


state 272

    (121) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 286


state 273

    (40) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA . incremento LLAVE_IZQ programa LLAVE_DER
    (41) incremento -> . ID INCREMENTO
    (42) incremento -> . ID ASIGNACION ID
    (43) incremento -> . ID DECREMENTO

    ID              shift and go to state 287

    incremento                     shift and go to state 288

state 274

    (96) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 96 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 96 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 96 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 96 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 96 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER .)


state 275

    (97) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN . ID LLAVE_DER

    ID              shift and go to state 289


state 276

    (98) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID . LLAVE_DER

    LLAVE_DER       shift and go to state 290


state 277

    (50) valores -> factor COMA valores .

    LLAVE_DER       reduce using rule 50 (valores -> factor COMA valores .)


state 278

    (89) valores -> clave_valor COMA valores .

    LLAVE_DER       reduce using rule 89 (valores -> clave_valor COMA valores .)


state 279

    (90) clave_valor -> valor DOS_PUNTOS valor .

    COMA            reduce using rule 90 (clave_valor -> valor DOS_PUNTOS valor .)
    LLAVE_DER       reduce using rule 90 (clave_valor -> valor DOS_PUNTOS valor .)


state 280

    (52) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA . NUMERO PARENT_DER

    NUMERO          shift and go to state 291


state 281

    (51) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .

    $end            reduce using rule 51 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 51 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 51 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 51 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 51 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER .)


state 282

    (80) map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .

    $end            reduce using rule 80 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    LLAVE_DER       reduce using rule 80 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    DEFAULT         reduce using rule 80 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    CASE            reduce using rule 80 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)
    RETURN          reduce using rule 80 (map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER .)


state 283

    (81) map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 81 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 81 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 81 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 81 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 81 (map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)


state 284

    (79) map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .

    $end            reduce using rule 79 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    LLAVE_DER       reduce using rule 79 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    DEFAULT         reduce using rule 79 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    CASE            reduce using rule 79 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)
    RETURN          reduce using rule 79 (map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER .)


state 285

    (126) cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .

    $end            reduce using rule 126 (cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 126 (cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 126 (cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 126 (cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 126 (cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER .)


state 286

    (121) flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .

    $end            reduce using rule 121 (flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 121 (flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 121 (flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 121 (flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 121 (flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER .)


state 287

    (41) incremento -> ID . INCREMENTO
    (42) incremento -> ID . ASIGNACION ID
    (43) incremento -> ID . DECREMENTO

    INCREMENTO      shift and go to state 71
    ASIGNACION      shift and go to state 292
    DECREMENTO      shift and go to state 72


state 288

    (40) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento . LLAVE_IZQ programa LLAVE_DER

    LLAVE_IZQ       shift and go to state 293


state 289

    (97) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID . LLAVE_DER

    LLAVE_DER       shift and go to state 294


state 290

    (98) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .

    $end            reduce using rule 98 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .)
    LLAVE_DER       reduce using rule 98 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .)
    DEFAULT         reduce using rule 98 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .)
    CASE            reduce using rule 98 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .)
    RETURN          reduce using rule 98 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER .)


state 291

    (52) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO . PARENT_DER

    PARENT_DER      shift and go to state 295


state 292

    (42) incremento -> ID ASIGNACION . ID

    ID              shift and go to state 296


state 293

    (40) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ . programa LLAVE_DER
    (1) programa -> . expression
    (2) programa -> . impresion
    (3) programa -> . sentencia
    (4) programa -> . asignacion
    (5) programa -> . longvariable
    (6) programa -> . boolcadena
    (7) programa -> . companum
    (8) programa -> . compaid
    (9) programa -> . sentenciafor
    (10) programa -> . arreglo
    (11) programa -> . slice
    (12) programa -> . capslice
    (13) programa -> . switch
    (14) programa -> . map
    (15) programa -> . asignar_valor_map
    (16) programa -> . eliminar_valor_map
    (17) programa -> . obtener_valor_map
    (18) programa -> . funcion
    (19) programa -> . cadenabool
    (20) programa -> . enterocadena
    (21) programa -> . cadenaentero
    (22) programa -> . flotantecadena
    (23) programa -> . cadenaflotante
    (24) programa -> . seman_operacion
    (25) programa -> . incremento
    (26) programa -> . errorflotantecadena
    (27) programa -> . errorcadenaflotante
    (54) expression -> . expression MAS term
    (55) expression -> . expression MENOS term
    (56) expression -> . term
    (28) impresion -> . FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (29) impresion -> . FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER
    (30) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (31) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER
    (32) impresion -> . FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER
    (61) sentencia -> . IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER
    (37) asignacion -> . ID ASIGNACION factor
    (38) asignacion -> . VAR ID tipo_dato ASIGNACION factor
    (39) asignacion -> . VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor
    (33) longvariable -> . ID PARENT_IZQ CADENA PARENT_DER
    (34) longvariable -> . ID PARENT_IZQ ID PARENT_DER
    (119) boolcadena -> . STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER
    (35) companum -> . NUMERO comparacion NUMERO
    (36) compaid -> . ID comparacion ID
    (40) sentenciafor -> . FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER
    (44) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato
    (45) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (46) arreglo -> . ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER
    (51) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER
    (52) slice -> . ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER
    (53) capslice -> . ID PARENT_IZQ ID PARENT_DER
    (73) switch -> . SWITCH ID LLAVE_IZQ cases LLAVE_DER
    (79) map -> . VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (80) map -> . ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER
    (81) map -> . ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER
    (93) asignar_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor
    (94) eliminar_valor_map -> . DELETE PARENT_IZQ ID COMA valor PARENT_DER
    (95) obtener_valor_map -> . ID CORCHETE_IZQ valor CORCHETE_DER
    (96) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER
    (97) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER
    (98) funcion -> . FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER
    (120) cadenabool -> . STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER
    (125) enterocadena -> . STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER
    (126) cadenaentero -> . STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER
    (121) flotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER
    (123) cadenaflotante -> . STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER
    (102) seman_operacion -> . NUMERO MAS NUMERO
    (103) seman_operacion -> . NUMERO MENOS NUMERO
    (104) seman_operacion -> . NUMERO MULTIPLICADOR NUMERO
    (105) seman_operacion -> . NUMERO DIVISOR NUMERO
    (106) seman_operacion -> . NUMERO MOD_DIVISION NUMERO
    (107) seman_operacion -> . FLOAT MAS NUMERO
    (108) seman_operacion -> . FLOAT MENOS NUMERO
    (109) seman_operacion -> . FLOAT MULTIPLICADOR NUMERO
    (110) seman_operacion -> . FLOAT DIVISOR NUMERO
    (111) seman_operacion -> . NUMERO MAS FLOAT
    (112) seman_operacion -> . NUMERO MENOS FLOAT
    (113) seman_operacion -> . NUMERO MULTIPLICADOR FLOAT
    (114) seman_operacion -> . NUMERO DIVISOR FLOAT
    (115) seman_operacion -> . FLOAT MAS FLOAT
    (116) seman_operacion -> . FLOAT MENOS FLOAT
    (117) seman_operacion -> . FLOAT MULTIPLICADOR FLOAT
    (118) seman_operacion -> . FLOAT DIVISOR FLOAT
    (41) incremento -> . ID INCREMENTO
    (42) incremento -> . ID ASIGNACION ID
    (43) incremento -> . ID DECREMENTO
    (122) errorflotantecadena -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER
    (124) errorcadenaflotante -> . STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER
    (57) term -> . term MULTIPLICADOR factor
    (58) term -> . term DIVISOR factor
    (59) term -> . term MOD_DIVISION factor
    (60) term -> . factor
    (68) factor -> . NUMERO
    (69) factor -> . ID
    (70) factor -> . CADENA
    (71) factor -> . FLOAT
    (72) factor -> . PARENT_IZQ expression PARENT_DER

    FMT             shift and go to state 30
    IF              shift and go to state 34
    ID              shift and go to state 36
    VAR             shift and go to state 37
    STRCONV         shift and go to state 38
    NUMERO          shift and go to state 33
    FOR             shift and go to state 39
    SWITCH          shift and go to state 40
    DELETE          shift and go to state 41
    FUNC            shift and go to state 42
    FLOAT           shift and go to state 43
    CADENA          shift and go to state 32
    PARENT_IZQ      shift and go to state 31

    factor                         shift and go to state 35
    incremento                     shift and go to state 26
    programa                       shift and go to state 297
    expression                     shift and go to state 2
    impresion                      shift and go to state 3
    sentencia                      shift and go to state 4
    asignacion                     shift and go to state 5
    longvariable                   shift and go to state 6
    boolcadena                     shift and go to state 7
    companum                       shift and go to state 8
    compaid                        shift and go to state 9
    sentenciafor                   shift and go to state 10
    arreglo                        shift and go to state 11
    slice                          shift and go to state 12
    capslice                       shift and go to state 13
    switch                         shift and go to state 14
    map                            shift and go to state 15
    asignar_valor_map              shift and go to state 16
    eliminar_valor_map             shift and go to state 17
    obtener_valor_map              shift and go to state 18
    funcion                        shift and go to state 19
    cadenabool                     shift and go to state 20
    enterocadena                   shift and go to state 21
    cadenaentero                   shift and go to state 22
    flotantecadena                 shift and go to state 23
    cadenaflotante                 shift and go to state 24
    seman_operacion                shift and go to state 25
    errorflotantecadena            shift and go to state 27
    errorcadenaflotante            shift and go to state 28
    term                           shift and go to state 29

state 294

    (97) funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .

    $end            reduce using rule 97 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    LLAVE_DER       reduce using rule 97 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    DEFAULT         reduce using rule 97 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    CASE            reduce using rule 97 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)
    RETURN          reduce using rule 97 (funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER .)


state 295

    (52) slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .

    $end            reduce using rule 52 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .)
    LLAVE_DER       reduce using rule 52 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .)
    DEFAULT         reduce using rule 52 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .)
    CASE            reduce using rule 52 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .)
    RETURN          reduce using rule 52 (slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER .)


state 296

    (42) incremento -> ID ASIGNACION ID .

    LLAVE_IZQ       reduce using rule 42 (incremento -> ID ASIGNACION ID .)


state 297

    (40) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa . LLAVE_DER

    LLAVE_DER       shift and go to state 298


state 298

    (40) sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .

    $end            reduce using rule 40 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    LLAVE_DER       reduce using rule 40 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    DEFAULT         reduce using rule 40 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    CASE            reduce using rule 40 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)
    RETURN          reduce using rule 40 (sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULTIPLICADOR in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVISOR in state 33 resolved as shift
WARNING: shift/reduce conflict for MOD_DIVISION in state 33 resolved as shift
WARNING: shift/reduce conflict for MAS in state 33 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 33 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICADOR in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVISOR in state 43 resolved as shift
WARNING: shift/reduce conflict for MAS in state 43 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 43 resolved as shift
WARNING: reduce/reduce conflict in state 102 resolved using rule (incremento -> ID ASIGNACION ID)
WARNING: rejected rule (factor -> ID) in state 102
WARNING: reduce/reduce conflict in state 148 resolved using rule (longvariable -> ID PARENT_IZQ ID PARENT_DER)
WARNING: rejected rule (capslice -> ID PARENT_IZQ ID PARENT_DER) in state 148
WARNING: Rule (capslice -> ID PARENT_IZQ ID PARENT_DER) is never reduced
