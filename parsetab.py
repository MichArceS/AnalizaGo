
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASIGNACIONleftIGUALDADMAYORMENORMENOR_IGUMAYOR_IGUleftMASMENOSleftMULTIPLICADORDIVISORleftPARENT_IZQPARENT_DERAMPERSAND ARRPUNTOS ASIGNACION BOOLEAN BREAK CADENA CASE COMA COMILLA COMMENT_BLOQUE_DER COMMENT_BLOQUE_IZQ COMMENT_LINEA CONST CONTAINS CONTINUE CORCHETE_DER CORCHETE_IZQ DECREMENTO DEFAULT DEFER DELETE DESIGUALDAD DIVISOR DOBLE_COMILLA DOS_PUNTOS ELSE ESPACIADO FALLTHROUGH FALSE FIN_SENTENCIA FLOAT FLOAT32 FLOAT64 FMT FOR FORMATBOOL FORMATFLOAT FORMATINT FUNC GO ID IF IGUAL IGUALDAD IMPORT INCREMENTO INT INT32 INT64 INTERFACE LEN LLAVE_DER LLAVE_IZQ MAKE MAP MAS MAYOR MAYOR_IGU MENOR MENOR_IGU MENOS MOD_DIVISION MULTIPLICADOR NUMERO PACKAGE PARENT_DER PARENT_IZQ PARSEBOOL PARSEFLOAT PARSEINT PIPE PRINTF PRINTLN PUNTO RANGE RETURN SELECT SPLIT STRCONV STRING STRINGS STRUCT SWITCH TRUE TYPE VACIO VARprograma : expression\n                | impresion\n                | sentencia \n                | asignacion\n                | longvariable\n                | boolcadena\n                | companum\n                | compaid\n                | sentenciafor\n                | arreglo\n                | slice\n                | capslice\n                | switch\n                | map\n                | asignar_valor_map\n                | eliminar_valor_map\n                | obtener_valor_map\n                | funcion\n                | cadenabool\n                | enterocadena\n                | cadenaentero\n                | flotantecadena\n                | cadenaflotante\n                | seman_operacion\n                | incremento\n                | errorflotantecadena\n                | errorcadenaflotante\n                | error_arrimpresion : FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER\n                | FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER\n                longvariable : ID PARENT_IZQ CADENA PARENT_DER\n                        | ID PARENT_IZQ ID PARENT_DERcompanum : NUMERO comparacion NUMEROcompaid : ID comparacion IDasignacion : ID ASIGNACION factor\n                    | VAR ID tipo_dato ASIGNACION factor\n                    | VAR ID COMA ID tipo_dato ASIGNACION factor COMA factorsentenciafor : FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DERincremento : ID INCREMENTO\n                    | ID ASIGNACION ID\n                    | ID DECREMENTOarreglo : ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato\n                | ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER\n                | ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DERerror_arr : ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DERnoenteros : ID\n                | CADENA\n                | FLOAT\n                | noenteros COMA noenterosarreglo : ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DERcantidad : NUMERO \n                    | ARRPUNTOSvalores : factor\n                    | factor COMA valoresenteros : NUMERO\n                | NUMERO COMA enterosslice : ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER\n                | ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DERcapslice : ID PARENT_IZQ ID PARENT_DERexpression : expression MAS termexpression : expression MENOS termexpression : termterm : term MULTIPLICADOR factorterm : term DIVISOR factorterm : term MOD_DIVISION factorterm : factorsentencia : IF factor comparacion factor LLAVE_IZQ programa LLAVE_DERcomparacion : IGUALDADcomparacion : MAYORcomparacion : MENORcomparacion : MAYOR_IGUcomparacion : MENOR_IGUcomparacion : DESIGUALDADfactor : NUMEROfactor : IDfactor : CADENAfactor : FLOATfactor : PARENT_IZQ expression PARENT_DERswitch : SWITCH ID LLAVE_IZQ cases LLAVE_DERcases : case \n                | case default \n                | case casescase : CASE factor DOS_PUNTOS programadefault : DEFAULT DOS_PUNTOS programamap : VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER \n                | ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER\n                | ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DERtipo_dato : INT \n                    | STRING \n                    | INT64 \n                    | FLOAT32 \n                    | FLOAT64 \n                    | INT32valores : clave_valor \n                | clave_valor COMA valoresclave_valor : valor DOS_PUNTOS valorvalor : CADENA\n                | NUMEROasignar_valor_map : ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valoreliminar_valor_map : DELETE PARENT_IZQ ID COMA valor PARENT_DERobtener_valor_map : ID CORCHETE_IZQ valor CORCHETE_DERfuncion : FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER \n                    | FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER\n                    | FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DERargumentos : ID tipo_dato \n                    | ID tipo_dato COMA argumentosempty : seman_operacion : NUMERO MAS NUMERO \n                        | NUMERO MENOS NUMERO\n                        | NUMERO MULTIPLICADOR NUMERO\n                        | NUMERO DIVISOR NUMERO\n                        | NUMERO MOD_DIVISION NUMERO\n                        | FLOAT MAS NUMERO\n                        | FLOAT MENOS NUMERO\n                        | FLOAT MULTIPLICADOR NUMERO\n                        | FLOAT DIVISOR NUMERO\n                        | NUMERO MAS FLOAT\n                        | NUMERO MENOS FLOAT\n                        | NUMERO MULTIPLICADOR FLOAT\n                        | NUMERO DIVISOR FLOAT\n                        | FLOAT MAS FLOAT\n                        | FLOAT MENOS FLOAT\n                        | FLOAT MULTIPLICADOR FLOAT\n                        | FLOAT DIVISOR FLOATboolcadena : STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DERcadenabool : STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DERflotantecadena : STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DERerrorflotantecadena : STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DERcadenaflotante : STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DERerrorcadenaflotante : STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DERenterocadena : STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DERcadenaentero : STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER'
    
_lr_action_items = {'FMT':([0,172,219,220,243,308,],[31,31,31,31,31,31,]),'IF':([0,172,219,220,243,308,],[35,35,35,35,35,35,]),'ID':([0,32,35,38,40,41,43,45,46,47,48,49,61,62,63,64,65,66,68,69,70,78,102,115,129,132,152,164,172,188,209,219,220,222,227,228,239,243,260,261,262,270,272,273,277,286,288,307,308,],[37,53,53,74,76,77,79,53,53,53,53,53,-71,-72,-73,-74,-75,-76,103,108,110,131,53,153,53,166,53,53,37,218,53,37,37,166,53,252,53,37,53,53,53,289,53,53,252,302,304,311,37,]),'VAR':([0,172,219,220,243,308,],[38,38,38,38,38,38,]),'STRCONV':([0,172,219,220,243,308,],[39,39,39,39,39,39,]),'NUMERO':([0,32,35,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,68,71,80,81,82,83,102,105,129,152,157,164,165,172,177,197,199,209,213,214,215,217,219,220,227,228,239,243,258,260,261,262,264,265,272,273,274,278,295,308,],[34,52,52,52,52,52,52,52,92,93,95,97,99,101,-71,-72,-73,-74,-75,-76,52,113,134,136,138,140,52,145,52,52,183,52,113,34,113,224,225,52,234,235,237,238,34,34,249,255,52,34,279,249,52,249,284,285,249,249,113,255,306,34,]),'FOR':([0,172,219,220,243,308,],[40,40,40,40,40,40,]),'SWITCH':([0,172,219,220,243,308,],[41,41,41,41,41,41,]),'DELETE':([0,172,219,220,243,308,],[42,42,42,42,42,42,]),'FUNC':([0,172,219,220,243,308,],[43,43,43,43,43,43,]),'FLOAT':([0,32,35,45,46,47,48,49,56,57,58,59,61,62,63,64,65,66,68,80,81,82,83,102,129,152,159,164,172,209,219,220,227,228,239,243,260,261,262,272,273,277,308,],[44,54,54,54,54,54,54,54,94,96,98,100,-71,-72,-73,-74,-75,-76,54,133,135,137,139,54,54,54,185,54,44,54,44,44,54,257,54,44,54,54,54,54,54,257,44,]),'CADENA':([0,32,35,45,46,47,48,49,61,62,63,64,65,66,68,69,71,102,129,141,142,152,156,158,159,160,164,165,172,177,209,215,219,220,227,228,239,243,260,261,262,272,273,274,277,308,],[33,33,33,33,33,33,33,33,-71,-72,-73,-74,-75,-76,33,109,112,33,33,168,170,33,182,184,186,187,33,112,33,112,33,236,33,33,250,256,33,33,250,33,250,250,250,112,256,33,]),'PARENT_IZQ':([0,32,35,37,42,45,46,47,48,49,61,62,63,64,65,66,68,79,89,90,102,106,123,124,125,126,127,128,129,152,164,172,209,219,220,227,239,243,260,261,262,272,273,308,],[32,32,32,69,78,32,32,32,32,32,-71,-72,-73,-74,-75,-76,32,132,141,142,32,147,155,156,157,158,159,160,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,36,37,44,52,53,54,72,73,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,103,104,110,112,113,118,119,120,121,122,133,134,135,136,137,138,139,140,149,150,151,173,178,189,198,200,201,203,204,208,211,212,216,221,226,244,245,263,266,267,271,275,276,282,287,296,297,298,299,300,301,305,309,310,313,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-65,-79,-77,-69,-78,-80,-77,-78,-80,-42,-44,-63,-64,-66,-67,-68,-81,-36,-111,-120,-112,-121,-113,-122,-114,-123,-115,-43,-38,-37,-100,-101,-92,-93,-94,-95,-96,-124,-116,-125,-117,-126,-118,-127,-119,-35,-34,-104,-53,-39,-82,-30,-33,-32,-45,-91,-102,-128,-129,-133,-103,-70,-29,-31,-134,-131,-132,-46,-47,-48,-40,-105,-60,-89,-90,-88,-135,-130,-107,-106,-61,-41,]),'LLAVE_DER':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,36,37,44,52,53,54,72,73,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,103,104,110,112,113,118,119,120,121,122,133,134,135,136,137,138,139,140,149,150,151,162,163,173,178,189,190,191,198,200,201,202,203,204,208,211,212,216,221,226,240,241,244,245,246,247,248,249,250,252,253,254,255,256,257,263,266,267,269,271,275,276,281,282,283,287,289,290,291,292,293,294,296,297,298,299,300,301,304,305,309,310,312,313,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-65,-79,-77,-69,-78,-80,-77,-78,-80,-42,-44,-63,-64,-66,-67,-68,-81,-36,-111,-120,-112,-121,-113,-122,-114,-123,-115,-43,-38,-37,-100,-101,-92,-93,-94,-95,-96,-124,-116,-125,-117,-126,-118,-127,-119,-35,-34,-104,189,-83,-53,-39,-82,-84,-85,-30,-33,-32,226,-45,-91,-102,-128,-129,-133,-103,-70,-87,-86,-29,-31,271,-56,-97,-77,-79,-49,275,276,-58,-50,-51,-134,-131,-132,287,-46,-47,-48,298,-40,299,-105,305,-57,-98,-99,-52,-59,-60,-89,-90,-88,-135,-130,309,-107,-106,-61,313,-41,]),'DEFAULT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,36,37,44,52,53,54,72,73,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,103,104,110,112,113,118,119,120,121,122,133,134,135,136,137,138,139,140,149,150,151,163,173,178,189,198,200,201,203,204,208,211,212,216,221,226,241,244,245,263,266,267,271,275,276,282,287,296,297,298,299,300,301,305,309,310,313,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-65,-79,-77,-69,-78,-80,-77,-78,-80,-42,-44,-63,-64,-66,-67,-68,-81,-36,-111,-120,-112,-121,-113,-122,-114,-123,-115,-43,-38,-37,-100,-101,-92,-93,-94,-95,-96,-124,-116,-125,-117,-126,-118,-127,-119,-35,-34,-104,192,-53,-39,-82,-30,-33,-32,-45,-91,-102,-128,-129,-133,-103,-70,-86,-29,-31,-134,-131,-132,-46,-47,-48,-40,-105,-60,-89,-90,-88,-135,-130,-107,-106,-61,-41,]),'CASE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,36,37,44,52,53,54,72,73,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,103,104,110,112,113,118,119,120,121,122,130,133,134,135,136,137,138,139,140,149,150,151,163,173,178,189,198,200,201,203,204,208,211,212,216,221,226,241,244,245,263,266,267,271,275,276,282,287,296,297,298,299,300,301,305,309,310,313,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-65,-79,-77,-69,-78,-80,-77,-78,-80,-42,-44,-63,-64,-66,-67,-68,-81,-36,-111,-120,-112,-121,-113,-122,-114,-123,-115,-43,-38,-37,-100,-101,-92,-93,-94,-95,-96,164,-124,-116,-125,-117,-126,-118,-127,-119,-35,-34,-104,164,-53,-39,-82,-30,-33,-32,-45,-91,-102,-128,-129,-133,-103,-70,-86,-29,-31,-134,-131,-132,-46,-47,-48,-40,-105,-60,-89,-90,-88,-135,-130,-107,-106,-61,-41,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,36,37,44,52,53,54,72,73,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,103,104,110,112,113,118,119,120,121,122,133,134,135,136,137,138,139,140,149,150,151,173,178,189,198,200,201,203,204,208,211,212,216,221,226,243,244,245,263,266,267,269,271,275,276,282,287,296,297,298,299,300,301,305,309,310,313,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-65,-79,-77,-69,-78,-80,-77,-78,-80,-42,-44,-63,-64,-66,-67,-68,-81,-36,-111,-120,-112,-121,-113,-122,-114,-123,-115,-43,-38,-37,-100,-101,-92,-93,-94,-95,-96,-124,-116,-125,-117,-126,-118,-127,-119,-35,-34,-104,-53,-39,-82,-30,-33,-32,-45,-91,-102,-128,-129,-133,-103,-70,270,-29,-31,-134,-131,-132,288,-46,-47,-48,-40,-105,-60,-89,-90,-88,-135,-130,-107,-106,-61,-41,]),'MAS':([2,30,33,34,36,37,44,51,52,53,54,84,85,86,87,88,91,],[45,-65,-79,56,-69,-78,80,45,-77,-78,-80,-63,-64,-66,-67,-68,-81,]),'MENOS':([2,30,33,34,36,37,44,51,52,53,54,84,85,86,87,88,91,],[46,-65,-79,57,-69,-78,81,46,-77,-78,-80,-63,-64,-66,-67,-68,-81,]),'PARENT_DER':([30,33,36,51,52,53,54,84,85,86,87,88,91,108,109,112,113,117,118,119,120,121,122,141,142,167,169,170,171,181,182,186,194,195,224,225,234,237,238,242,279,280,284,285,306,],[-65,-79,-69,91,-77,-78,-80,-63,-64,-66,-67,-68,-81,149,150,-100,-101,-91,-92,-93,-94,-95,-96,-110,-110,196,198,200,201,211,212,216,221,-108,244,245,263,266,267,-109,296,297,300,301,310,]),'MULTIPLICADOR':([30,33,34,36,37,44,52,53,54,84,85,86,87,88,91,],[47,-79,58,-69,-78,82,-77,-78,-80,47,47,-66,-67,-68,-81,]),'DIVISOR':([30,33,34,36,37,44,52,53,54,84,85,86,87,88,91,],[48,-79,59,-69,-78,83,-77,-78,-80,48,48,-66,-67,-68,-81,]),'MOD_DIVISION':([30,33,34,36,37,44,52,53,54,84,85,86,87,88,91,],[49,-79,60,-69,-78,-80,-77,-78,-80,49,49,-66,-67,-68,-81,]),'PUNTO':([31,39,],[50,75,]),'IGUALDAD':([33,34,37,52,53,54,67,91,218,],[-79,61,61,-77,-78,-80,61,-81,61,]),'MAYOR':([33,34,37,52,53,54,67,91,218,],[-79,62,62,-77,-78,-80,62,-81,62,]),'MENOR':([33,34,37,52,53,54,67,91,218,],[-79,63,63,-77,-78,-80,63,-81,63,]),'MAYOR_IGU':([33,34,37,52,53,54,67,91,218,],[-79,64,64,-77,-78,-80,64,-81,64,]),'MENOR_IGU':([33,34,37,52,53,54,67,91,218,],[-79,65,65,-77,-78,-80,65,-81,65,]),'DESIGUALDAD':([33,34,37,52,53,54,67,91,218,],[-79,66,66,-77,-78,-80,66,-81,66,]),'LLAVE_IZQ':([33,52,53,54,72,73,77,91,117,118,119,120,121,122,143,203,204,223,231,233,303,311,],[-79,-77,-78,-80,-42,-44,130,-81,-91,-92,-93,-94,-95,-96,172,227,228,243,260,262,308,-43,]),'FIN_SENTENCIA':([33,52,53,54,91,161,268,],[-79,-77,-78,-80,-81,188,286,]),'DOS_PUNTOS':([33,52,53,54,91,192,193,249,250,251,],[-79,-77,-78,-80,-81,219,220,-101,-100,274,]),'COMA':([33,52,53,54,74,91,112,113,117,118,119,120,121,122,131,168,170,183,184,185,187,195,229,232,235,236,247,248,249,250,252,254,255,256,257,279,292,293,],[-79,-77,-78,-80,115,-81,-100,-101,-91,-92,-93,-94,-95,-96,165,197,199,213,214,215,217,222,258,261,264,265,272,273,-77,-79,-49,277,278,-50,-51,295,-99,277,]),'ASIGNACION':([37,76,114,117,118,119,120,121,122,151,179,302,],[68,129,152,-91,-92,-93,-94,-95,-96,177,209,307,]),'CORCHETE_IZQ':([37,68,107,116,147,175,],[71,105,148,154,174,206,]),'INCREMENTO':([37,302,],[72,72,]),'DECREMENTO':([37,302,],[73,73,]),'PRINTF':([50,],[89,]),'PRINTLN':([50,],[90,]),'MAKE':([68,],[106,]),'MAP':([68,74,147,],[107,116,175,]),'INT':([74,148,153,154,166,173,196,205,206,207,210,259,],[117,117,117,117,117,204,117,117,117,117,117,117,]),'STRING':([74,148,153,154,166,173,196,205,206,207,210,259,],[118,118,118,118,118,118,118,118,118,118,118,118,]),'INT64':([74,148,153,154,166,173,196,205,206,207,210,259,],[119,119,119,119,119,119,119,119,119,119,119,119,]),'FLOAT32':([74,148,153,154,166,173,196,205,206,207,210,259,],[120,120,120,120,120,120,120,120,120,120,120,120,]),'FLOAT64':([74,148,153,154,166,173,196,205,206,207,210,259,],[121,121,121,121,121,121,121,121,121,121,121,121,]),'INT32':([74,148,153,154,166,173,196,205,206,207,210,259,],[122,122,122,122,122,122,122,122,122,122,122,122,]),'FORMATBOOL':([75,],[123,]),'PARSEBOOL':([75,],[124,]),'FORMATINT':([75,],[125,]),'PARSEINT':([75,],[126,]),'FORMATFLOAT':([75,],[127,]),'PARSEFLOAT':([75,],[128,]),'ARRPUNTOS':([105,],[146,]),'CORCHETE_DER':([111,112,113,117,118,119,120,121,122,144,145,146,174,176,180,230,],[151,-100,-101,-91,-92,-93,-94,-95,-96,173,-54,-55,205,207,210,259,]),'BOOLEAN':([155,],[181,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,172,219,220,243,308,],[1,202,240,241,269,312,]),'expression':([0,32,172,219,220,243,308,],[2,51,2,2,2,2,2,]),'impresion':([0,172,219,220,243,308,],[3,3,3,3,3,3,]),'sentencia':([0,172,219,220,243,308,],[4,4,4,4,4,4,]),'asignacion':([0,172,219,220,243,308,],[5,5,5,5,5,5,]),'longvariable':([0,172,219,220,243,308,],[6,6,6,6,6,6,]),'boolcadena':([0,172,219,220,243,308,],[7,7,7,7,7,7,]),'companum':([0,172,219,220,243,308,],[8,8,8,8,8,8,]),'compaid':([0,172,219,220,243,308,],[9,9,9,9,9,9,]),'sentenciafor':([0,172,219,220,243,308,],[10,10,10,10,10,10,]),'arreglo':([0,172,219,220,243,308,],[11,11,11,11,11,11,]),'slice':([0,172,219,220,243,308,],[12,12,12,12,12,12,]),'capslice':([0,172,219,220,243,308,],[13,13,13,13,13,13,]),'switch':([0,172,219,220,243,308,],[14,14,14,14,14,14,]),'map':([0,172,219,220,243,308,],[15,15,15,15,15,15,]),'asignar_valor_map':([0,172,219,220,243,308,],[16,16,16,16,16,16,]),'eliminar_valor_map':([0,172,219,220,243,308,],[17,17,17,17,17,17,]),'obtener_valor_map':([0,172,219,220,243,308,],[18,18,18,18,18,18,]),'funcion':([0,172,219,220,243,308,],[19,19,19,19,19,19,]),'cadenabool':([0,172,219,220,243,308,],[20,20,20,20,20,20,]),'enterocadena':([0,172,219,220,243,308,],[21,21,21,21,21,21,]),'cadenaentero':([0,172,219,220,243,308,],[22,22,22,22,22,22,]),'flotantecadena':([0,172,219,220,243,308,],[23,23,23,23,23,23,]),'cadenaflotante':([0,172,219,220,243,308,],[24,24,24,24,24,24,]),'seman_operacion':([0,172,219,220,243,308,],[25,25,25,25,25,25,]),'incremento':([0,172,219,220,243,286,308,],[26,26,26,26,26,303,26,]),'errorflotantecadena':([0,172,219,220,243,308,],[27,27,27,27,27,27,]),'errorcadenaflotante':([0,172,219,220,243,308,],[28,28,28,28,28,28,]),'error_arr':([0,172,219,220,243,308,],[29,29,29,29,29,29,]),'term':([0,32,45,46,172,219,220,243,308,],[30,30,84,85,30,30,30,30,30,]),'factor':([0,32,35,45,46,47,48,49,68,102,129,152,164,172,209,219,220,227,239,243,260,261,262,272,273,308,],[36,36,67,36,36,86,87,88,104,143,161,178,193,36,232,36,36,247,268,36,247,282,247,247,247,36,]),'comparacion':([34,37,67,218,],[55,70,102,239,]),'valor':([71,165,177,227,260,262,272,273,274,],[111,194,208,251,251,251,251,251,292,]),'tipo_dato':([74,148,153,154,166,173,196,205,206,207,210,259,],[114,176,179,180,195,203,223,229,230,231,233,280,]),'cantidad':([105,],[144,]),'cases':([130,163,],[162,191,]),'case':([130,163,],[163,163,]),'argumentos':([132,222,],[167,242,]),'empty':([141,142,],[169,171,]),'default':([163,],[190,]),'valores':([227,260,262,272,273,],[246,281,283,290,291,]),'clave_valor':([227,260,262,272,273,],[248,248,248,248,248,]),'enteros':([228,278,],[253,294,]),'noenteros':([228,277,],[254,293,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> expression','programa',1,'p_programa','analizadorSintactico.py',14),
  ('programa -> impresion','programa',1,'p_programa','analizadorSintactico.py',15),
  ('programa -> sentencia','programa',1,'p_programa','analizadorSintactico.py',16),
  ('programa -> asignacion','programa',1,'p_programa','analizadorSintactico.py',17),
  ('programa -> longvariable','programa',1,'p_programa','analizadorSintactico.py',18),
  ('programa -> boolcadena','programa',1,'p_programa','analizadorSintactico.py',19),
  ('programa -> companum','programa',1,'p_programa','analizadorSintactico.py',20),
  ('programa -> compaid','programa',1,'p_programa','analizadorSintactico.py',21),
  ('programa -> sentenciafor','programa',1,'p_programa','analizadorSintactico.py',22),
  ('programa -> arreglo','programa',1,'p_programa','analizadorSintactico.py',23),
  ('programa -> slice','programa',1,'p_programa','analizadorSintactico.py',24),
  ('programa -> capslice','programa',1,'p_programa','analizadorSintactico.py',25),
  ('programa -> switch','programa',1,'p_programa','analizadorSintactico.py',26),
  ('programa -> map','programa',1,'p_programa','analizadorSintactico.py',27),
  ('programa -> asignar_valor_map','programa',1,'p_programa','analizadorSintactico.py',28),
  ('programa -> eliminar_valor_map','programa',1,'p_programa','analizadorSintactico.py',29),
  ('programa -> obtener_valor_map','programa',1,'p_programa','analizadorSintactico.py',30),
  ('programa -> funcion','programa',1,'p_programa','analizadorSintactico.py',31),
  ('programa -> cadenabool','programa',1,'p_programa','analizadorSintactico.py',32),
  ('programa -> enterocadena','programa',1,'p_programa','analizadorSintactico.py',33),
  ('programa -> cadenaentero','programa',1,'p_programa','analizadorSintactico.py',34),
  ('programa -> flotantecadena','programa',1,'p_programa','analizadorSintactico.py',35),
  ('programa -> cadenaflotante','programa',1,'p_programa','analizadorSintactico.py',36),
  ('programa -> seman_operacion','programa',1,'p_programa','analizadorSintactico.py',37),
  ('programa -> incremento','programa',1,'p_programa','analizadorSintactico.py',38),
  ('programa -> errorflotantecadena','programa',1,'p_programa','analizadorSintactico.py',39),
  ('programa -> errorcadenaflotante','programa',1,'p_programa','analizadorSintactico.py',40),
  ('programa -> error_arr','programa',1,'p_programa','analizadorSintactico.py',41),
  ('impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER','impresion',8,'p_impresion','analizadorSintactico.py',45),
  ('impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',46),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER','impresion',8,'p_impresion','analizadorSintactico.py',47),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',48),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',49),
  ('longvariable -> ID PARENT_IZQ CADENA PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',53),
  ('longvariable -> ID PARENT_IZQ ID PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',54),
  ('companum -> NUMERO comparacion NUMERO','companum',3,'p_comparacion_num','analizadorSintactico.py',57),
  ('compaid -> ID comparacion ID','compaid',3,'p_comparacion_id','analizadorSintactico.py',61),
  ('asignacion -> ID ASIGNACION factor','asignacion',3,'p_asignacion_var','analizadorSintactico.py',65),
  ('asignacion -> VAR ID tipo_dato ASIGNACION factor','asignacion',5,'p_asignacion_var','analizadorSintactico.py',66),
  ('asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor','asignacion',9,'p_asignacion_var','analizadorSintactico.py',67),
  ('sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER','sentenciafor',13,'p_sentencia_for','analizadorSintactico.py',71),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',75),
  ('incremento -> ID ASIGNACION ID','incremento',3,'p_incremento','analizadorSintactico.py',76),
  ('incremento -> ID DECREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',77),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato','arreglo',6,'p_definir_arreglo','analizadorSintactico.py',81),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','arreglo',9,'p_definir_arreglo','analizadorSintactico.py',82),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ enteros LLAVE_DER','arreglo',9,'p_definir_arreglo','analizadorSintactico.py',83),
  ('error_arr -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER INT LLAVE_IZQ noenteros LLAVE_DER','error_arr',9,'p_error_arr_entero','analizadorSintactico.py',86),
  ('noenteros -> ID','noenteros',1,'p_noEnteros','analizadorSintactico.py',90),
  ('noenteros -> CADENA','noenteros',1,'p_noEnteros','analizadorSintactico.py',91),
  ('noenteros -> FLOAT','noenteros',1,'p_noEnteros','analizadorSintactico.py',92),
  ('noenteros -> noenteros COMA noenteros','noenteros',3,'p_noEnteros','analizadorSintactico.py',93),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER','arreglo',5,'p_error_arreglo','analizadorSintactico.py',96),
  ('cantidad -> NUMERO','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',100),
  ('cantidad -> ARRPUNTOS','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',101),
  ('valores -> factor','valores',1,'p_valores_arreglo','analizadorSintactico.py',105),
  ('valores -> factor COMA valores','valores',3,'p_valores_arreglo','analizadorSintactico.py',106),
  ('enteros -> NUMERO','enteros',1,'p_numeros_arreglo','analizadorSintactico.py',109),
  ('enteros -> NUMERO COMA enteros','enteros',3,'p_numeros_arreglo','analizadorSintactico.py',110),
  ('slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER','slice',10,'p_definir_slice','analizadorSintactico.py',113),
  ('slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER','slice',12,'p_definir_slice','analizadorSintactico.py',114),
  ('capslice -> ID PARENT_IZQ ID PARENT_DER','capslice',4,'p_cap_slice','analizadorSintactico.py',118),
  ('expression -> expression MAS term','expression',3,'p_expression_mas','analizadorSintactico.py',122),
  ('expression -> expression MENOS term','expression',3,'p_expression_menos','analizadorSintactico.py',126),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintactico.py',130),
  ('term -> term MULTIPLICADOR factor','term',3,'p_term_multiplicador','analizadorSintactico.py',134),
  ('term -> term DIVISOR factor','term',3,'p_term_divisor','analizadorSintactico.py',138),
  ('term -> term MOD_DIVISION factor','term',3,'p_term_mod','analizadorSintactico.py',142),
  ('term -> factor','term',1,'p_term_factor','analizadorSintactico.py',146),
  ('sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER','sentencia',7,'p_sentencia_if','analizadorSintactico.py',150),
  ('comparacion -> IGUALDAD','comparacion',1,'p_comparacion_igu','analizadorSintactico.py',154),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion_mayor','analizadorSintactico.py',158),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion_menor','analizadorSintactico.py',162),
  ('comparacion -> MAYOR_IGU','comparacion',1,'p_comparacion_mayor_igu','analizadorSintactico.py',166),
  ('comparacion -> MENOR_IGU','comparacion',1,'p_comparacion_menor_igu','analizadorSintactico.py',170),
  ('comparacion -> DESIGUALDAD','comparacion',1,'p_comparacion_desigu','analizadorSintactico.py',174),
  ('factor -> NUMERO','factor',1,'p_factor_num','analizadorSintactico.py',178),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintactico.py',182),
  ('factor -> CADENA','factor',1,'p_factor_cadena','analizadorSintactico.py',186),
  ('factor -> FLOAT','factor',1,'p_factor_float','analizadorSintactico.py',189),
  ('factor -> PARENT_IZQ expression PARENT_DER','factor',3,'p_factor_expr','analizadorSintactico.py',192),
  ('switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER','switch',5,'p_definir_switch','analizadorSintactico.py',195),
  ('cases -> case','cases',1,'p_cases','analizadorSintactico.py',198),
  ('cases -> case default','cases',2,'p_cases','analizadorSintactico.py',199),
  ('cases -> case cases','cases',2,'p_cases','analizadorSintactico.py',200),
  ('case -> CASE factor DOS_PUNTOS programa','case',4,'p_case','analizadorSintactico.py',203),
  ('default -> DEFAULT DOS_PUNTOS programa','default',3,'p_default','analizadorSintactico.py',206),
  ('map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',209),
  ('map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER','map',10,'p_definir_map','analizadorSintactico.py',210),
  ('map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',211),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',214),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',215),
  ('tipo_dato -> INT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',216),
  ('tipo_dato -> FLOAT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',217),
  ('tipo_dato -> FLOAT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',218),
  ('tipo_dato -> INT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',219),
  ('valores -> clave_valor','valores',1,'p_valores','analizadorSintactico.py',222),
  ('valores -> clave_valor COMA valores','valores',3,'p_valores','analizadorSintactico.py',223),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','analizadorSintactico.py',226),
  ('valor -> CADENA','valor',1,'p_valor','analizadorSintactico.py',229),
  ('valor -> NUMERO','valor',1,'p_valor','analizadorSintactico.py',230),
  ('asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor','asignar_valor_map',6,'p_asignar_valor_map','analizadorSintactico.py',233),
  ('eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER','eliminar_valor_map',6,'p_eliminar_valor_map','analizadorSintactico.py',236),
  ('obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER','obtener_valor_map',4,'p_obtener_valor_map','analizadorSintactico.py',239),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER','funcion',9,'p_funcion','analizadorSintactico.py',242),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER','funcion',11,'p_funcion','analizadorSintactico.py',243),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER','funcion',10,'p_funcion','analizadorSintactico.py',244),
  ('argumentos -> ID tipo_dato','argumentos',2,'p_argumentos','analizadorSintactico.py',247),
  ('argumentos -> ID tipo_dato COMA argumentos','argumentos',4,'p_argumentos','analizadorSintactico.py',248),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',251),
  ('seman_operacion -> NUMERO MAS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',266),
  ('seman_operacion -> NUMERO MENOS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',267),
  ('seman_operacion -> NUMERO MULTIPLICADOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',268),
  ('seman_operacion -> NUMERO DIVISOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',269),
  ('seman_operacion -> NUMERO MOD_DIVISION NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',270),
  ('seman_operacion -> FLOAT MAS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',271),
  ('seman_operacion -> FLOAT MENOS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',272),
  ('seman_operacion -> FLOAT MULTIPLICADOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',273),
  ('seman_operacion -> FLOAT DIVISOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',274),
  ('seman_operacion -> NUMERO MAS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',275),
  ('seman_operacion -> NUMERO MENOS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',276),
  ('seman_operacion -> NUMERO MULTIPLICADOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',277),
  ('seman_operacion -> NUMERO DIVISOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',278),
  ('seman_operacion -> FLOAT MAS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',279),
  ('seman_operacion -> FLOAT MENOS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',280),
  ('seman_operacion -> FLOAT MULTIPLICADOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',281),
  ('seman_operacion -> FLOAT DIVISOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',282),
  ('boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER','boolcadena',6,'p_bool_cadena','analizadorSintactico.py',286),
  ('cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER','cadenabool',6,'p_cadena_bool','analizadorSintactico.py',289),
  ('flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER','flotantecadena',10,'p_flotante_cadena','analizadorSintactico.py',292),
  ('errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER','errorflotantecadena',8,'p_error_flotantecadena','analizadorSintactico.py',295),
  ('cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER','cadenaflotante',8,'p_cadena_flotante','analizadorSintactico.py',299),
  ('errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER','errorcadenaflotante',6,'p_error_cadenaflotante','analizadorSintactico.py',302),
  ('enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER','enterocadena',8,'p_entero_cadena','analizadorSintactico.py',306),
  ('cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER','cadenaentero',10,'p_cadena_entero','analizadorSintactico.py',309),
]
