
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASIGNACIONleftIGUALDADMAYORMENORMENOR_IGUMAYOR_IGUleftMASMENOSleftMULTIPLICADORDIVISORleftPARENT_IZQPARENT_DERAMPERSAND ARRPUNTOS ASIGNACION BOOLEAN BREAK CADENA CASE COMA COMILLA COMMENT_BLOQUE_DER COMMENT_BLOQUE_IZQ COMMENT_LINEA CONST CONTAINS CONTINUE CORCHETE_DER CORCHETE_IZQ DECREMENTO DEFAULT DEFER DELETE DESIGUALDAD DIVISOR DOBLE_COMILLA DOS_PUNTOS ELSE ESPACIADO FALLTHROUGH FALSE FIN_SENTENCIA FLOAT FLOAT32 FLOAT64 FMT FOR FORMATBOOL FORMATFLOAT FORMATINT FUNC GO ID IF IGUAL IGUALDAD IMPORT INCREMENTO INT INT32 INT64 INTERFACE LEN LLAVE_DER LLAVE_IZQ MAKE MAP MAS MAYOR MAYOR_IGU MENOR MENOR_IGU MENOS MOD_DIVISION MULTIPLICADOR NUMERO PACKAGE PARENT_DER PARENT_IZQ PARSEBOOL PARSEFLOAT PARSEINT PIPE PRINTF PRINTLN PUNTO RANGE RETURN SELECT SPLIT STRCONV STRING STRINGS STRUCT SWITCH TRUE TYPE VACIO VARprograma : expression\n                | impresion\n                | sentencia \n                | asignacion\n                | longvariable\n                | boolcadena\n                | companum\n                | compaid\n                | sentenciafor\n                | arreglo\n                | slice\n                | capslice\n                | switch\n                | map\n                | asignar_valor_map\n                | eliminar_valor_map\n                | obtener_valor_map\n                | funcion\n                | cadenabool\n                | enterocadena\n                | cadenaentero\n                | flotantecadena\n                | cadenaflotante\n                | seman_operacionimpresion : FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER\n                | FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER\n                longvariable : ID PARENT_IZQ CADENA PARENT_DER\n                        | ID PARENT_IZQ ID PARENT_DERboolcadena : STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DERcadenabool : STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DERflotantecadena : STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DERcadenaflotante : STRCONV PUNTO PARSEFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DERenterocadena : STRCONV PUNTO FORMATINT PARENT_IZQ CADENA COMA NUMERO PARENT_DERcadenaentero : STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DERcompanum : NUMERO comparacion NUMEROcompaid : ID comparacion IDasignacion : ID ASIGNACION factor\n                    | VAR ID tipo_dato ASIGNACION factor\n                    | VAR ID COMA ID tipo_dato ASIGNACION factor COMA factorsentenciafor : FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DERincremento : ID INCREMENTO\n                    | ID ASIGNACION ID\n                    | ID DECREMENTOarreglo : ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID \n                    | ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DERcantidad : NUMERO \n                    | ARRPUNTOSvalores : factor\n                    | factor COMA valoresslice : ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER\n                | ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DERcapslice : ID PARENT_IZQ ID PARENT_DERexpression : expression MAS termexpression : expression MENOS termexpression : termterm : term MULTIPLICADOR factorterm : term DIVISOR factorterm : term MOD_DIVISION factorterm : factorsentencia : IF factor comparacion factor LLAVE_IZQ programa LLAVE_DERcomparacion : IGUALDADcomparacion : MAYORcomparacion : MENORcomparacion : MAYOR_IGUcomparacion : MENOR_IGUcomparacion : DESIGUALDADfactor : NUMEROfactor : IDfactor : CADENAfactor : PARENT_IZQ expression PARENT_DERswitch : SWITCH ID LLAVE_IZQ cases LLAVE_DERcases : case \n                | case default \n                | case casescase : CASE factor DOS_PUNTOS programadefault : DEFAULT DOS_PUNTOS programamap : VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER \n                | ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER\n                | ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DERtipo_dato : INT \n                    | STRING \n                    | INT64 \n                    | FLOAT32 \n                    | FLOAT64 \n                    | INT32valores : clave_valor \n                | clave_valor COMA valoresclave_valor : valor DOS_PUNTOS valorvalor : CADENA\n                | NUMEROasignar_valor_map : ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valoreliminar_valor_map : DELETE PARENT_IZQ ID COMA valor PARENT_DERobtener_valor_map : ID CORCHETE_IZQ valor CORCHETE_DERfuncion : FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER \n                    | FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DERargumentos : ID tipo_dato \n                    | ID tipo_dato COMA argumentosempty : seman_operacion : NUMERO MAS NUMERO \n                        | NUMERO MENOS NUMERO\n                        | NUMERO MULTIPLICADOR NUMERO\n                        | NUMERO DIVISOR NUMERO\n                        | NUMERO MOD_DIVISION NUMERO\n                        | FLOAT MAS NUMERO\n                        | FLOAT MENOS NUMERO\n                        | FLOAT MULTIPLICADOR NUMERO\n                        | FLOAT DIVISOR NUMERO\n                        | NUMERO MAS FLOAT\n                        | NUMERO MENOS FLOAT\n                        | NUMERO MULTIPLICADOR FLOAT\n                        | NUMERO DIVISOR FLOAT\n                        | FLOAT MAS FLOAT\n                        | FLOAT MENOS FLOAT\n                        | FLOAT MULTIPLICADOR FLOAT\n                        | FLOAT DIVISOR FLOAT'
    
_lr_action_items = {'FMT':([0,166,209,210,231,282,],[27,27,27,27,27,27,]),'IF':([0,166,209,210,231,282,],[31,31,31,31,31,31,]),'ID':([0,28,31,34,36,37,39,41,42,43,44,45,56,57,58,59,60,61,63,64,65,71,95,108,122,125,146,158,166,168,181,195,200,209,210,212,218,227,231,242,243,244,253,254,262,264,280,282,],[33,49,49,67,69,70,72,49,49,49,49,49,-63,-64,-65,-66,-67,-68,96,101,103,124,49,147,49,160,49,49,33,196,208,217,49,33,33,160,49,49,33,49,49,49,49,49,275,277,285,33,]),'VAR':([0,166,209,210,231,282,],[34,34,34,34,34,34,]),'STRCONV':([0,166,209,210,231,282,],[35,35,35,35,35,35,]),'NUMERO':([0,28,31,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,63,66,73,74,75,76,95,98,122,146,158,159,166,171,190,192,200,204,205,207,209,210,218,227,231,234,242,243,244,246,247,253,254,255,265,282,],[30,48,48,48,48,48,48,48,85,86,88,90,92,94,-63,-64,-65,-66,-67,-68,48,106,127,129,131,133,48,139,48,48,48,106,30,106,214,215,48,223,224,226,30,30,238,48,30,251,238,48,238,260,261,238,238,106,278,30,]),'FOR':([0,166,209,210,231,282,],[36,36,36,36,36,36,]),'SWITCH':([0,166,209,210,231,282,],[37,37,37,37,37,37,]),'DELETE':([0,166,209,210,231,282,],[38,38,38,38,38,38,]),'FUNC':([0,166,209,210,231,282,],[39,39,39,39,39,39,]),'FLOAT':([0,51,52,53,54,73,74,75,76,153,154,166,209,210,231,282,],[40,87,89,91,93,126,128,130,132,179,180,40,40,40,40,40,]),'CADENA':([0,28,31,41,42,43,44,45,56,57,58,59,60,61,63,64,66,95,122,134,135,146,150,151,152,158,159,166,171,200,206,209,210,218,227,231,242,243,244,253,254,255,282,],[29,29,29,29,29,29,29,29,-63,-64,-65,-66,-67,-68,29,102,105,29,29,162,164,29,176,177,178,29,105,29,105,29,225,29,29,239,29,29,239,29,239,239,239,105,29,]),'PARENT_IZQ':([0,28,31,33,38,41,42,43,44,45,56,57,58,59,60,61,63,72,82,83,95,96,99,116,117,118,119,120,121,122,146,158,166,200,209,210,218,227,231,242,243,244,253,254,282,],[28,28,28,64,71,28,28,28,28,28,-63,-64,-65,-66,-67,-68,28,125,134,135,28,137,141,149,150,151,152,153,154,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,33,48,49,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,96,97,103,105,106,126,127,128,129,130,131,132,133,143,144,145,172,182,191,193,196,199,202,203,211,216,232,233,245,248,252,258,263,266,270,271,272,273,274,283,284,287,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-57,-71,-69,-61,-70,-69,-70,-55,-56,-58,-59,-60,-72,-37,-101,-110,-102,-111,-103,-112,-104,-113,-105,-70,-39,-38,-91,-92,-114,-106,-115,-107,-116,-108,-117,-109,-30,-29,-95,-40,-73,-26,-28,-46,-93,-31,-32,-94,-62,-25,-27,-35,-34,-47,-41,-96,-52,-80,-81,-79,-36,-33,-97,-53,-42,]),'LLAVE_DER':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,33,48,49,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,96,97,103,105,106,126,127,128,129,130,131,132,133,143,144,145,156,157,172,182,183,184,191,193,194,196,199,202,203,211,216,228,229,232,233,235,236,237,238,239,245,248,250,252,257,258,259,263,266,267,268,269,270,271,272,273,274,277,283,284,286,287,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-57,-71,-69,-61,-70,-69,-70,-55,-56,-58,-59,-60,-72,-37,-101,-110,-102,-111,-103,-112,-104,-113,-105,-70,-39,-38,-91,-92,-114,-106,-115,-107,-116,-108,-117,-109,-30,-29,-95,182,-74,-40,-73,-75,-76,-26,-28,216,-46,-93,-31,-32,-94,-62,-78,-77,-25,-27,252,-50,-88,-69,-71,-35,-34,263,-47,271,-41,272,-96,-52,-51,-89,-90,-80,-81,-79,-36,-33,283,-97,-53,287,-42,]),'DEFAULT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,33,48,49,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,96,97,103,105,106,126,127,128,129,130,131,132,133,143,144,145,157,172,182,191,193,196,199,202,203,211,216,229,232,233,245,248,252,258,263,266,270,271,272,273,274,283,284,287,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-57,-71,-69,-61,-70,-69,-70,-55,-56,-58,-59,-60,-72,-37,-101,-110,-102,-111,-103,-112,-104,-113,-105,-70,-39,-38,-91,-92,-114,-106,-115,-107,-116,-108,-117,-109,-30,-29,-95,185,-40,-73,-26,-28,-46,-93,-31,-32,-94,-62,-77,-25,-27,-35,-34,-47,-41,-96,-52,-80,-81,-79,-36,-33,-97,-53,-42,]),'CASE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,33,48,49,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,96,97,103,105,106,123,126,127,128,129,130,131,132,133,143,144,145,157,172,182,191,193,196,199,202,203,211,216,229,232,233,245,248,252,258,263,266,270,271,272,273,274,283,284,287,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-57,-71,-69,-61,-70,-69,-70,-55,-56,-58,-59,-60,-72,-37,-101,-110,-102,-111,-103,-112,-104,-113,-105,-70,-39,-38,-91,-92,158,-114,-106,-115,-107,-116,-108,-117,-109,-30,-29,-95,158,-40,-73,-26,-28,-46,-93,-31,-32,-94,-62,-77,-25,-27,-35,-34,-47,-41,-96,-52,-80,-81,-79,-36,-33,-97,-53,-42,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,33,48,49,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,96,97,103,105,106,126,127,128,129,130,131,132,133,143,144,145,172,182,191,193,196,199,202,203,211,216,232,233,245,248,250,252,258,263,266,270,271,272,273,274,283,284,287,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-57,-71,-69,-61,-70,-69,-70,-55,-56,-58,-59,-60,-72,-37,-101,-110,-102,-111,-103,-112,-104,-113,-105,-70,-39,-38,-91,-92,-114,-106,-115,-107,-116,-108,-117,-109,-30,-29,-95,-40,-73,-26,-28,-46,-93,-31,-32,-94,-62,-25,-27,-35,-34,264,-47,-41,-96,-52,-80,-81,-79,-36,-33,-97,-53,-42,]),'MAS':([2,26,29,30,32,33,40,47,48,49,77,78,79,80,81,84,],[41,-57,-71,51,-61,-70,73,41,-69,-70,-55,-56,-58,-59,-60,-72,]),'MENOS':([2,26,29,30,32,33,40,47,48,49,77,78,79,80,81,84,],[42,-57,-71,52,-61,-70,74,42,-69,-70,-55,-56,-58,-59,-60,-72,]),'PARENT_DER':([26,29,32,47,48,49,77,78,79,80,81,84,101,102,105,106,110,111,112,113,114,115,134,135,161,163,165,175,176,187,188,214,215,223,226,230,251,256,260,261,278,],[-57,-71,-61,84,-69,-70,-55,-56,-58,-59,-60,-72,143,144,-91,-92,-82,-83,-84,-85,-86,-87,-100,-100,189,191,193,202,203,211,-98,232,233,245,248,-99,266,270,273,274,284,]),'MULTIPLICADOR':([26,29,30,32,33,40,48,49,77,78,79,80,81,84,],[43,-71,53,-61,-70,75,-69,-70,43,43,-58,-59,-60,-72,]),'DIVISOR':([26,29,30,32,33,40,48,49,77,78,79,80,81,84,],[44,-71,54,-61,-70,76,-69,-70,44,44,-58,-59,-60,-72,]),'MOD_DIVISION':([26,29,30,32,33,48,49,77,78,79,80,81,84,],[45,-71,55,-61,-70,-69,-70,45,45,-58,-59,-60,-72,]),'PUNTO':([27,35,],[46,68,]),'IGUALDAD':([29,30,33,48,49,62,84,208,],[-71,56,56,-69,-70,56,-72,56,]),'MAYOR':([29,30,33,48,49,62,84,208,],[-71,57,57,-69,-70,57,-72,57,]),'MENOR':([29,30,33,48,49,62,84,208,],[-71,58,58,-69,-70,58,-72,58,]),'MAYOR_IGU':([29,30,33,48,49,62,84,208,],[-71,59,59,-69,-70,59,-72,59,]),'MENOR_IGU':([29,30,33,48,49,62,84,208,],[-71,60,60,-69,-70,60,-72,60,]),'DESIGUALDAD':([29,30,33,48,49,62,84,208,],[-71,61,61,-69,-70,61,-72,61,]),'LLAVE_IZQ':([29,48,49,70,84,110,111,112,113,114,115,136,196,213,220,222,276,279,281,285,],[-71,-69,-70,123,-72,-82,-83,-84,-85,-86,-87,166,218,231,242,244,282,-43,-45,-44,]),'FIN_SENTENCIA':([29,48,49,84,155,249,],[-71,-69,-70,-72,181,262,]),'DOS_PUNTOS':([29,48,49,84,185,186,238,239,240,],[-71,-69,-70,-72,209,210,-92,-91,255,]),'COMA':([29,48,49,67,84,105,106,110,111,112,113,114,115,124,162,164,177,178,179,180,188,217,221,224,225,236,237,238,239,251,269,],[-71,-69,-70,108,-72,-91,-92,-82,-83,-84,-85,-86,-87,159,190,192,204,205,206,207,212,234,243,246,247,253,254,-69,-71,265,-90,]),'ASIGNACION':([33,69,107,110,111,112,113,114,115,145,173,275,],[63,122,146,-82,-83,-84,-85,-86,-87,171,200,280,]),'CORCHETE_IZQ':([33,63,100,109,137,169,],[66,98,142,148,167,197,]),'PRINTF':([46,],[82,]),'PRINTLN':([46,],[83,]),'MAKE':([63,],[99,]),'MAP':([63,67,141,],[100,109,169,]),'INT':([67,142,147,148,160,189,197,198,201,241,],[110,110,110,110,110,110,110,110,110,110,]),'STRING':([67,142,147,148,160,189,197,198,201,241,],[111,111,111,111,111,111,111,111,111,111,]),'INT64':([67,142,147,148,160,189,197,198,201,241,],[112,112,112,112,112,112,112,112,112,112,]),'FLOAT32':([67,142,147,148,160,189,197,198,201,241,],[113,113,113,113,113,113,113,113,113,113,]),'FLOAT64':([67,142,147,148,160,189,197,198,201,241,],[114,114,114,114,114,114,114,114,114,114,]),'INT32':([67,142,147,148,160,189,197,198,201,241,],[115,115,115,115,115,115,115,115,115,115,]),'FORMATBOOL':([68,],[116,]),'PARSEBOOL':([68,],[117,]),'FORMATINT':([68,],[118,]),'PARSEINT':([68,],[119,]),'FORMATFLOAT':([68,],[120,]),'PARSEFLOAT':([68,],[121,]),'ARRPUNTOS':([98,],[140,]),'CORCHETE_DER':([104,105,106,110,111,112,113,114,115,138,139,140,167,170,174,219,],[145,-91,-92,-82,-83,-84,-85,-86,-87,168,-48,-49,195,198,201,241,]),'BOOLEAN':([149,],[175,]),'INCREMENTO':([275,],[279,]),'DECREMENTO':([275,],[281,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,166,209,210,231,282,],[1,194,228,229,250,286,]),'expression':([0,28,166,209,210,231,282,],[2,47,2,2,2,2,2,]),'impresion':([0,166,209,210,231,282,],[3,3,3,3,3,3,]),'sentencia':([0,166,209,210,231,282,],[4,4,4,4,4,4,]),'asignacion':([0,166,209,210,231,282,],[5,5,5,5,5,5,]),'longvariable':([0,166,209,210,231,282,],[6,6,6,6,6,6,]),'boolcadena':([0,166,209,210,231,282,],[7,7,7,7,7,7,]),'companum':([0,166,209,210,231,282,],[8,8,8,8,8,8,]),'compaid':([0,166,209,210,231,282,],[9,9,9,9,9,9,]),'sentenciafor':([0,166,209,210,231,282,],[10,10,10,10,10,10,]),'arreglo':([0,166,209,210,231,282,],[11,11,11,11,11,11,]),'slice':([0,166,209,210,231,282,],[12,12,12,12,12,12,]),'capslice':([0,166,209,210,231,282,],[13,13,13,13,13,13,]),'switch':([0,166,209,210,231,282,],[14,14,14,14,14,14,]),'map':([0,166,209,210,231,282,],[15,15,15,15,15,15,]),'asignar_valor_map':([0,166,209,210,231,282,],[16,16,16,16,16,16,]),'eliminar_valor_map':([0,166,209,210,231,282,],[17,17,17,17,17,17,]),'obtener_valor_map':([0,166,209,210,231,282,],[18,18,18,18,18,18,]),'funcion':([0,166,209,210,231,282,],[19,19,19,19,19,19,]),'cadenabool':([0,166,209,210,231,282,],[20,20,20,20,20,20,]),'enterocadena':([0,166,209,210,231,282,],[21,21,21,21,21,21,]),'cadenaentero':([0,166,209,210,231,282,],[22,22,22,22,22,22,]),'flotantecadena':([0,166,209,210,231,282,],[23,23,23,23,23,23,]),'cadenaflotante':([0,166,209,210,231,282,],[24,24,24,24,24,24,]),'seman_operacion':([0,166,209,210,231,282,],[25,25,25,25,25,25,]),'term':([0,28,41,42,166,209,210,231,282,],[26,26,77,78,26,26,26,26,26,]),'factor':([0,28,31,41,42,43,44,45,63,95,122,146,158,166,200,209,210,218,227,231,242,243,244,253,254,282,],[32,32,62,32,32,79,80,81,97,136,155,172,186,32,221,32,32,236,249,32,236,258,236,236,236,32,]),'comparacion':([30,33,62,208,],[50,65,95,227,]),'valor':([66,159,171,218,242,244,253,254,255,],[104,187,199,240,240,240,240,240,269,]),'tipo_dato':([67,142,147,148,160,189,197,198,201,241,],[107,170,173,174,188,213,219,220,222,256,]),'cantidad':([98,],[138,]),'cases':([123,157,],[156,184,]),'case':([123,157,],[157,157,]),'argumentos':([125,212,],[161,230,]),'empty':([134,135,],[163,165,]),'default':([157,],[183,]),'valores':([218,242,244,253,254,],[235,257,259,267,268,]),'clave_valor':([218,242,244,253,254,],[237,237,237,237,237,]),'incremento':([262,],[276,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> expression','programa',1,'p_programa','analizadorSintactico.py',14),
  ('programa -> impresion','programa',1,'p_programa','analizadorSintactico.py',15),
  ('programa -> sentencia','programa',1,'p_programa','analizadorSintactico.py',16),
  ('programa -> asignacion','programa',1,'p_programa','analizadorSintactico.py',17),
  ('programa -> longvariable','programa',1,'p_programa','analizadorSintactico.py',18),
  ('programa -> boolcadena','programa',1,'p_programa','analizadorSintactico.py',19),
  ('programa -> companum','programa',1,'p_programa','analizadorSintactico.py',20),
  ('programa -> compaid','programa',1,'p_programa','analizadorSintactico.py',21),
  ('programa -> sentenciafor','programa',1,'p_programa','analizadorSintactico.py',22),
  ('programa -> arreglo','programa',1,'p_programa','analizadorSintactico.py',23),
  ('programa -> slice','programa',1,'p_programa','analizadorSintactico.py',24),
  ('programa -> capslice','programa',1,'p_programa','analizadorSintactico.py',25),
  ('programa -> switch','programa',1,'p_programa','analizadorSintactico.py',26),
  ('programa -> map','programa',1,'p_programa','analizadorSintactico.py',27),
  ('programa -> asignar_valor_map','programa',1,'p_programa','analizadorSintactico.py',28),
  ('programa -> eliminar_valor_map','programa',1,'p_programa','analizadorSintactico.py',29),
  ('programa -> obtener_valor_map','programa',1,'p_programa','analizadorSintactico.py',30),
  ('programa -> funcion','programa',1,'p_programa','analizadorSintactico.py',31),
  ('programa -> cadenabool','programa',1,'p_programa','analizadorSintactico.py',32),
  ('programa -> enterocadena','programa',1,'p_programa','analizadorSintactico.py',33),
  ('programa -> cadenaentero','programa',1,'p_programa','analizadorSintactico.py',34),
  ('programa -> flotantecadena','programa',1,'p_programa','analizadorSintactico.py',35),
  ('programa -> cadenaflotante','programa',1,'p_programa','analizadorSintactico.py',36),
  ('programa -> seman_operacion','programa',1,'p_programa','analizadorSintactico.py',37),
  ('impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER','impresion',8,'p_impresion','analizadorSintactico.py',41),
  ('impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',42),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER','impresion',8,'p_impresion','analizadorSintactico.py',43),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',44),
  ('longvariable -> ID PARENT_IZQ CADENA PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',48),
  ('longvariable -> ID PARENT_IZQ ID PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',49),
  ('boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER','boolcadena',6,'p_bool_cadena','analizadorSintactico.py',53),
  ('cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER','cadenabool',6,'p_cadena_bool','analizadorSintactico.py',56),
  ('flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER','flotantecadena',10,'p_flotante_cadena','analizadorSintactico.py',59),
  ('cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER','cadenaflotante',8,'p_cadena_flotante','analizadorSintactico.py',62),
  ('enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ CADENA COMA NUMERO PARENT_DER','enterocadena',8,'p_entero_cadena','analizadorSintactico.py',65),
  ('cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER','cadenaentero',10,'p_cadena_entero','analizadorSintactico.py',68),
  ('companum -> NUMERO comparacion NUMERO','companum',3,'p_comparacion_num','analizadorSintactico.py',71),
  ('compaid -> ID comparacion ID','compaid',3,'p_comparacion_id','analizadorSintactico.py',75),
  ('asignacion -> ID ASIGNACION factor','asignacion',3,'p_asignacion_var','analizadorSintactico.py',79),
  ('asignacion -> VAR ID tipo_dato ASIGNACION factor','asignacion',5,'p_asignacion_var','analizadorSintactico.py',80),
  ('asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor','asignacion',9,'p_asignacion_var','analizadorSintactico.py',81),
  ('sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER','sentenciafor',13,'p_sentencia_for','analizadorSintactico.py',85),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',89),
  ('incremento -> ID ASIGNACION ID','incremento',3,'p_incremento','analizadorSintactico.py',90),
  ('incremento -> ID DECREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',91),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID','arreglo',6,'p_definir_arreglo','analizadorSintactico.py',95),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER','arreglo',9,'p_definir_arreglo','analizadorSintactico.py',96),
  ('cantidad -> NUMERO','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',100),
  ('cantidad -> ARRPUNTOS','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',101),
  ('valores -> factor','valores',1,'p_valores_arreglo','analizadorSintactico.py',105),
  ('valores -> factor COMA valores','valores',3,'p_valores_arreglo','analizadorSintactico.py',106),
  ('slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER','slice',10,'p_definir_slice','analizadorSintactico.py',110),
  ('slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER','slice',12,'p_definir_slice','analizadorSintactico.py',111),
  ('capslice -> ID PARENT_IZQ ID PARENT_DER','capslice',4,'p_cap_slice','analizadorSintactico.py',115),
  ('expression -> expression MAS term','expression',3,'p_expression_mas','analizadorSintactico.py',119),
  ('expression -> expression MENOS term','expression',3,'p_expression_menos','analizadorSintactico.py',123),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintactico.py',127),
  ('term -> term MULTIPLICADOR factor','term',3,'p_term_multiplicador','analizadorSintactico.py',131),
  ('term -> term DIVISOR factor','term',3,'p_term_divisor','analizadorSintactico.py',135),
  ('term -> term MOD_DIVISION factor','term',3,'p_term_mod','analizadorSintactico.py',139),
  ('term -> factor','term',1,'p_term_factor','analizadorSintactico.py',143),
  ('sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER','sentencia',7,'p_sentencia_if','analizadorSintactico.py',147),
  ('comparacion -> IGUALDAD','comparacion',1,'p_comparacion_igu','analizadorSintactico.py',151),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion_mayor','analizadorSintactico.py',155),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion_menor','analizadorSintactico.py',159),
  ('comparacion -> MAYOR_IGU','comparacion',1,'p_comparacion_mayor_igu','analizadorSintactico.py',163),
  ('comparacion -> MENOR_IGU','comparacion',1,'p_comparacion_menor_igu','analizadorSintactico.py',167),
  ('comparacion -> DESIGUALDAD','comparacion',1,'p_comparacion_desigu','analizadorSintactico.py',171),
  ('factor -> NUMERO','factor',1,'p_factor_num','analizadorSintactico.py',175),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintactico.py',179),
  ('factor -> CADENA','factor',1,'p_factor_cadena','analizadorSintactico.py',183),
  ('factor -> PARENT_IZQ expression PARENT_DER','factor',3,'p_factor_expr','analizadorSintactico.py',187),
  ('switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER','switch',5,'p_definir_switch','analizadorSintactico.py',190),
  ('cases -> case','cases',1,'p_cases','analizadorSintactico.py',193),
  ('cases -> case default','cases',2,'p_cases','analizadorSintactico.py',194),
  ('cases -> case cases','cases',2,'p_cases','analizadorSintactico.py',195),
  ('case -> CASE factor DOS_PUNTOS programa','case',4,'p_case','analizadorSintactico.py',198),
  ('default -> DEFAULT DOS_PUNTOS programa','default',3,'p_default','analizadorSintactico.py',201),
  ('map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',204),
  ('map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER','map',10,'p_definir_map','analizadorSintactico.py',205),
  ('map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',206),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',209),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',210),
  ('tipo_dato -> INT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',211),
  ('tipo_dato -> FLOAT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',212),
  ('tipo_dato -> FLOAT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',213),
  ('tipo_dato -> INT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',214),
  ('valores -> clave_valor','valores',1,'p_valores','analizadorSintactico.py',217),
  ('valores -> clave_valor COMA valores','valores',3,'p_valores','analizadorSintactico.py',218),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','analizadorSintactico.py',221),
  ('valor -> CADENA','valor',1,'p_valor','analizadorSintactico.py',224),
  ('valor -> NUMERO','valor',1,'p_valor','analizadorSintactico.py',225),
  ('asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor','asignar_valor_map',6,'p_asignar_valor_map','analizadorSintactico.py',228),
  ('eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER','eliminar_valor_map',6,'p_eliminar_valor_map','analizadorSintactico.py',231),
  ('obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER','obtener_valor_map',4,'p_obtener_valor_map','analizadorSintactico.py',234),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER','funcion',9,'p_funcion','analizadorSintactico.py',237),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER','funcion',11,'p_funcion','analizadorSintactico.py',238),
  ('argumentos -> ID tipo_dato','argumentos',2,'p_argumentos','analizadorSintactico.py',241),
  ('argumentos -> ID tipo_dato COMA argumentos','argumentos',4,'p_argumentos','analizadorSintactico.py',242),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',245),
  ('seman_operacion -> NUMERO MAS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',260),
  ('seman_operacion -> NUMERO MENOS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',261),
  ('seman_operacion -> NUMERO MULTIPLICADOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',262),
  ('seman_operacion -> NUMERO DIVISOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',263),
  ('seman_operacion -> NUMERO MOD_DIVISION NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',264),
  ('seman_operacion -> FLOAT MAS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',265),
  ('seman_operacion -> FLOAT MENOS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',266),
  ('seman_operacion -> FLOAT MULTIPLICADOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',267),
  ('seman_operacion -> FLOAT DIVISOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',268),
  ('seman_operacion -> NUMERO MAS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',269),
  ('seman_operacion -> NUMERO MENOS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',270),
  ('seman_operacion -> NUMERO MULTIPLICADOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',271),
  ('seman_operacion -> NUMERO DIVISOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',272),
  ('seman_operacion -> FLOAT MAS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',273),
  ('seman_operacion -> FLOAT MENOS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',274),
  ('seman_operacion -> FLOAT MULTIPLICADOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',275),
  ('seman_operacion -> FLOAT DIVISOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',276),
]
