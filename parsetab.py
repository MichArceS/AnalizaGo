
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASIGNACIONleftIGUALDADMAYORMENORMENOR_IGUMAYOR_IGUleftMASMENOSleftMULTIPLICADORDIVISORleftPARENT_IZQPARENT_DERAMPERSAND ARRPUNTOS ASIGNACION BOOLEAN BREAK CADENA CASE COMA COMILLA COMMENT_BLOQUE_DER COMMENT_BLOQUE_IZQ COMMENT_LINEA CONST CONTAINS CONTINUE CORCHETE_DER CORCHETE_IZQ DECREMENTO DEFAULT DEFER DELETE DESIGUALDAD DIVISOR DOBLE_COMILLA DOS_PUNTOS ELSE ESPACIADO FALLTHROUGH FALSE FIN_SENTENCIA FLOAT FLOAT32 FLOAT64 FMT FOR FORMATBOOL FORMATFLOAT FORMATINT FUNC GO ID IF IGUAL IGUALDAD IMPORT INCREMENTO INT INT32 INT64 INTERFACE LEN LLAVE_DER LLAVE_IZQ MAKE MAP MAS MAYOR MAYOR_IGU MENOR MENOR_IGU MENOS MOD_DIVISION MULTIPLICADOR NUMERO PACKAGE PARENT_DER PARENT_IZQ PARSEBOOL PARSEFLOAT PARSEINT PIPE PRINTF PRINTLN PUNTO RANGE RETURN SELECT SPLIT STRCONV STRING STRINGS STRUCT SWITCH TRUE TYPE VACIO VARprograma : expression\n                | impresion\n                | sentencia \n                | asignacion\n                | longvariable\n                | boolcadena\n                | companum\n                | compaid\n                | sentenciafor\n                | arreglo\n                | slice\n                | capslice\n                | switch\n                | map\n                | asignar_valor_map\n                | eliminar_valor_map\n                | obtener_valor_map\n                | funcion\n                | cadenabool\n                | enterocadena\n                | cadenaentero\n                | flotantecadena\n                | cadenaflotante\n                | seman_operacion\n                | incremento\n                | errorflotantecadena\n                | errorcadenaflotanteimpresion : FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER\n                | FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER\n                longvariable : ID PARENT_IZQ CADENA PARENT_DER\n                        | ID PARENT_IZQ ID PARENT_DERcompanum : NUMERO comparacion NUMEROcompaid : ID comparacion IDasignacion : ID ASIGNACION factor\n                    | VAR ID tipo_dato ASIGNACION factor\n                    | VAR ID COMA ID tipo_dato ASIGNACION factor COMA factorsentenciafor : FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DERincremento : ID INCREMENTO\n                    | ID ASIGNACION ID\n                    | ID DECREMENTOarreglo : ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato \n                    | ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DERarreglo : ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DERcantidad : NUMERO \n                    | ARRPUNTOSvalores : factor\n                    | factor COMA valoresslice : ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER\n                | ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DERcapslice : ID PARENT_IZQ ID PARENT_DERexpression : expression MAS termexpression : expression MENOS termexpression : termterm : term MULTIPLICADOR factorterm : term DIVISOR factorterm : term MOD_DIVISION factorterm : factorsentencia : IF factor comparacion factor LLAVE_IZQ programa LLAVE_DERcomparacion : IGUALDADcomparacion : MAYORcomparacion : MENORcomparacion : MAYOR_IGUcomparacion : MENOR_IGUcomparacion : DESIGUALDADfactor : NUMEROfactor : IDfactor : CADENAfactor : FLOATfactor : PARENT_IZQ expression PARENT_DERswitch : SWITCH ID LLAVE_IZQ cases LLAVE_DERcases : case \n                | case default \n                | case casescase : CASE factor DOS_PUNTOS programadefault : DEFAULT DOS_PUNTOS programamap : VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER \n                | ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER\n                | ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DERtipo_dato : INT \n                    | STRING \n                    | INT64 \n                    | FLOAT32 \n                    | FLOAT64 \n                    | INT32valores : clave_valor \n                | clave_valor COMA valoresclave_valor : valor DOS_PUNTOS valorvalor : CADENA\n                | NUMEROasignar_valor_map : ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valoreliminar_valor_map : DELETE PARENT_IZQ ID COMA valor PARENT_DERobtener_valor_map : ID CORCHETE_IZQ valor CORCHETE_DERfuncion : FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER \n                    | FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER\n                    | FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DERargumentos : ID tipo_dato \n                    | ID tipo_dato COMA argumentosempty : seman_operacion : NUMERO MAS NUMERO \n                        | NUMERO MENOS NUMERO\n                        | NUMERO MULTIPLICADOR NUMERO\n                        | NUMERO DIVISOR NUMERO\n                        | NUMERO MOD_DIVISION NUMERO\n                        | FLOAT MAS NUMERO\n                        | FLOAT MENOS NUMERO\n                        | FLOAT MULTIPLICADOR NUMERO\n                        | FLOAT DIVISOR NUMERO\n                        | NUMERO MAS FLOAT\n                        | NUMERO MENOS FLOAT\n                        | NUMERO MULTIPLICADOR FLOAT\n                        | NUMERO DIVISOR FLOAT\n                        | FLOAT MAS FLOAT\n                        | FLOAT MENOS FLOAT\n                        | FLOAT MULTIPLICADOR FLOAT\n                        | FLOAT DIVISOR FLOATboolcadena : STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DERcadenabool : STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DERflotantecadena : STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DERerrorflotantecadena : STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DERcadenaflotante : STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DERerrorcadenaflotante : STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DERenterocadena : STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DERcadenaentero : STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER'
    
_lr_action_items = {'FMT':([0,171,217,218,240,293,],[30,30,30,30,30,30,]),'IF':([0,171,217,218,240,293,],[34,34,34,34,34,34,]),'ID':([0,31,34,37,39,40,42,44,45,46,47,48,60,61,62,63,64,65,67,68,69,77,101,114,128,131,151,163,171,187,207,217,218,220,225,236,240,251,252,253,261,263,264,273,275,292,293,],[36,52,52,73,75,76,78,52,52,52,52,52,-62,-63,-64,-65,-66,-67,102,107,109,130,52,152,52,165,52,52,36,216,52,36,36,165,52,52,36,52,52,52,276,52,52,287,289,296,36,]),'VAR':([0,171,217,218,240,293,],[37,37,37,37,37,37,]),'STRCONV':([0,171,217,218,240,293,],[38,38,38,38,38,38,]),'NUMERO':([0,31,34,44,45,46,47,48,54,55,56,57,58,59,60,61,62,63,64,65,67,70,79,80,81,82,101,104,128,151,156,163,164,171,176,196,198,207,211,212,213,215,217,218,225,236,240,249,251,252,253,255,256,263,264,265,280,293,],[33,51,51,51,51,51,51,51,91,92,94,96,98,100,-62,-63,-64,-65,-66,-67,51,112,133,135,137,139,51,144,51,51,182,51,112,33,112,222,223,51,231,232,234,235,33,33,246,51,33,266,246,51,246,271,272,246,246,112,291,33,]),'FOR':([0,171,217,218,240,293,],[39,39,39,39,39,39,]),'SWITCH':([0,171,217,218,240,293,],[40,40,40,40,40,40,]),'DELETE':([0,171,217,218,240,293,],[41,41,41,41,41,41,]),'FUNC':([0,171,217,218,240,293,],[42,42,42,42,42,42,]),'FLOAT':([0,31,34,44,45,46,47,48,55,56,57,58,60,61,62,63,64,65,67,79,80,81,82,101,128,151,158,163,171,207,217,218,225,236,240,251,252,253,263,264,293,],[43,53,53,53,53,53,53,53,93,95,97,99,-62,-63,-64,-65,-66,-67,53,132,134,136,138,53,53,53,184,53,43,53,43,43,53,53,43,53,53,53,53,53,43,]),'CADENA':([0,31,34,44,45,46,47,48,60,61,62,63,64,65,67,68,70,101,128,140,141,151,155,157,158,159,163,164,171,176,207,213,217,218,225,236,240,251,252,253,263,264,265,293,],[32,32,32,32,32,32,32,32,-62,-63,-64,-65,-66,-67,32,108,111,32,32,167,169,32,181,183,185,186,32,111,32,111,32,233,32,32,247,32,32,247,32,247,247,247,111,32,]),'PARENT_IZQ':([0,31,34,36,41,44,45,46,47,48,60,61,62,63,64,65,67,78,88,89,101,105,122,123,124,125,126,127,128,151,163,171,207,217,218,225,236,240,251,252,253,263,264,293,],[31,31,31,68,77,31,31,31,31,31,-62,-63,-64,-65,-66,-67,31,131,140,141,31,146,154,155,156,157,158,159,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,35,36,43,51,52,53,71,72,83,84,85,86,87,90,91,92,93,94,95,96,97,98,99,100,102,103,109,111,112,116,117,118,119,120,121,132,133,134,135,136,137,138,139,148,149,150,172,177,188,197,199,200,202,206,209,210,214,219,224,241,242,254,257,258,262,269,274,281,282,283,284,285,286,290,294,295,298,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-70,-68,-60,-69,-71,-68,-69,-71,-41,-43,-54,-55,-57,-58,-59,-72,-35,-102,-111,-103,-112,-104,-113,-105,-114,-106,-42,-37,-36,-91,-92,-82,-83,-84,-85,-86,-87,-115,-107,-116,-108,-117,-109,-118,-110,-34,-33,-95,-46,-38,-73,-29,-32,-31,-44,-93,-119,-120,-124,-94,-61,-28,-30,-125,-122,-123,-45,-39,-96,-51,-80,-81,-79,-126,-121,-98,-97,-52,-40,]),'LLAVE_DER':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,35,36,43,51,52,53,71,72,83,84,85,86,87,90,91,92,93,94,95,96,97,98,99,100,102,103,109,111,112,116,117,118,119,120,121,132,133,134,135,136,137,138,139,148,149,150,161,162,172,177,188,189,190,197,199,200,201,202,206,209,210,214,219,224,237,238,241,242,243,244,245,246,247,254,257,258,260,262,268,269,270,274,276,277,278,279,281,282,283,284,285,286,289,290,294,295,297,298,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-70,-68,-60,-69,-71,-68,-69,-71,-41,-43,-54,-55,-57,-58,-59,-72,-35,-102,-111,-103,-112,-104,-113,-105,-114,-106,-42,-37,-36,-91,-92,-82,-83,-84,-85,-86,-87,-115,-107,-116,-108,-117,-109,-118,-110,-34,-33,-95,188,-74,-46,-38,-73,-75,-76,-29,-32,-31,224,-44,-93,-119,-120,-124,-94,-61,-78,-77,-28,-30,262,-49,-88,-68,-70,-125,-122,-123,274,-45,283,-39,284,-96,290,-50,-89,-90,-51,-80,-81,-79,-126,-121,294,-98,-97,-52,298,-40,]),'DEFAULT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,35,36,43,51,52,53,71,72,83,84,85,86,87,90,91,92,93,94,95,96,97,98,99,100,102,103,109,111,112,116,117,118,119,120,121,132,133,134,135,136,137,138,139,148,149,150,162,172,177,188,197,199,200,202,206,209,210,214,219,224,238,241,242,254,257,258,262,269,274,281,282,283,284,285,286,290,294,295,298,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-70,-68,-60,-69,-71,-68,-69,-71,-41,-43,-54,-55,-57,-58,-59,-72,-35,-102,-111,-103,-112,-104,-113,-105,-114,-106,-42,-37,-36,-91,-92,-82,-83,-84,-85,-86,-87,-115,-107,-116,-108,-117,-109,-118,-110,-34,-33,-95,191,-46,-38,-73,-29,-32,-31,-44,-93,-119,-120,-124,-94,-61,-77,-28,-30,-125,-122,-123,-45,-39,-96,-51,-80,-81,-79,-126,-121,-98,-97,-52,-40,]),'CASE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,35,36,43,51,52,53,71,72,83,84,85,86,87,90,91,92,93,94,95,96,97,98,99,100,102,103,109,111,112,116,117,118,119,120,121,129,132,133,134,135,136,137,138,139,148,149,150,162,172,177,188,197,199,200,202,206,209,210,214,219,224,238,241,242,254,257,258,262,269,274,281,282,283,284,285,286,290,294,295,298,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-70,-68,-60,-69,-71,-68,-69,-71,-41,-43,-54,-55,-57,-58,-59,-72,-35,-102,-111,-103,-112,-104,-113,-105,-114,-106,-42,-37,-36,-91,-92,-82,-83,-84,-85,-86,-87,163,-115,-107,-116,-108,-117,-109,-118,-110,-34,-33,-95,163,-46,-38,-73,-29,-32,-31,-44,-93,-119,-120,-124,-94,-61,-77,-28,-30,-125,-122,-123,-45,-39,-96,-51,-80,-81,-79,-126,-121,-98,-97,-52,-40,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,35,36,43,51,52,53,71,72,83,84,85,86,87,90,91,92,93,94,95,96,97,98,99,100,102,103,109,111,112,116,117,118,119,120,121,132,133,134,135,136,137,138,139,148,149,150,172,177,188,197,199,200,202,206,209,210,214,219,224,240,241,242,254,257,258,260,262,269,274,281,282,283,284,285,286,290,294,295,298,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-70,-68,-60,-69,-71,-68,-69,-71,-41,-43,-54,-55,-57,-58,-59,-72,-35,-102,-111,-103,-112,-104,-113,-105,-114,-106,-42,-37,-36,-91,-92,-82,-83,-84,-85,-86,-87,-115,-107,-116,-108,-117,-109,-118,-110,-34,-33,-95,-46,-38,-73,-29,-32,-31,-44,-93,-119,-120,-124,-94,-61,261,-28,-30,-125,-122,-123,275,-45,-39,-96,-51,-80,-81,-79,-126,-121,-98,-97,-52,-40,]),'MAS':([2,29,32,33,35,36,43,50,51,52,53,83,84,85,86,87,90,],[44,-56,-70,55,-60,-69,79,44,-68,-69,-71,-54,-55,-57,-58,-59,-72,]),'MENOS':([2,29,32,33,35,36,43,50,51,52,53,83,84,85,86,87,90,],[45,-56,-70,56,-60,-69,80,45,-68,-69,-71,-54,-55,-57,-58,-59,-72,]),'PARENT_DER':([29,32,35,50,51,52,53,83,84,85,86,87,90,107,108,111,112,116,117,118,119,120,121,140,141,166,168,169,170,180,181,185,193,194,222,223,231,234,235,239,266,267,271,272,291,],[-56,-70,-60,90,-68,-69,-71,-54,-55,-57,-58,-59,-72,148,149,-91,-92,-82,-83,-84,-85,-86,-87,-101,-101,195,197,199,200,209,210,214,219,-99,241,242,254,257,258,-100,281,282,285,286,295,]),'MULTIPLICADOR':([29,32,33,35,36,43,51,52,53,83,84,85,86,87,90,],[46,-70,57,-60,-69,81,-68,-69,-71,46,46,-57,-58,-59,-72,]),'DIVISOR':([29,32,33,35,36,43,51,52,53,83,84,85,86,87,90,],[47,-70,58,-60,-69,82,-68,-69,-71,47,47,-57,-58,-59,-72,]),'MOD_DIVISION':([29,32,33,35,36,43,51,52,53,83,84,85,86,87,90,],[48,-70,59,-60,-69,-71,-68,-69,-71,48,48,-57,-58,-59,-72,]),'PUNTO':([30,38,],[49,74,]),'IGUALDAD':([32,33,36,51,52,53,66,90,216,],[-70,60,60,-68,-69,-71,60,-72,60,]),'MAYOR':([32,33,36,51,52,53,66,90,216,],[-70,61,61,-68,-69,-71,61,-72,61,]),'MENOR':([32,33,36,51,52,53,66,90,216,],[-70,62,62,-68,-69,-71,62,-72,62,]),'MAYOR_IGU':([32,33,36,51,52,53,66,90,216,],[-70,63,63,-68,-69,-71,63,-72,63,]),'MENOR_IGU':([32,33,36,51,52,53,66,90,216,],[-70,64,64,-68,-69,-71,64,-72,64,]),'DESIGUALDAD':([32,33,36,51,52,53,66,90,216,],[-70,65,65,-68,-69,-71,65,-72,65,]),'LLAVE_IZQ':([32,51,52,53,71,72,76,90,116,117,118,119,120,121,142,202,221,228,230,288,296,],[-70,-68,-69,-71,-41,-43,129,-72,-82,-83,-84,-85,-86,-87,171,225,240,251,253,293,-42,]),'FIN_SENTENCIA':([32,51,52,53,90,160,259,],[-70,-68,-69,-71,-72,187,273,]),'DOS_PUNTOS':([32,51,52,53,90,191,192,246,247,248,],[-70,-68,-69,-71,-72,217,218,-92,-91,265,]),'COMA':([32,51,52,53,73,90,111,112,116,117,118,119,120,121,130,167,169,182,183,184,186,194,226,229,232,233,244,245,246,247,266,279,],[-70,-68,-69,-71,114,-72,-91,-92,-82,-83,-84,-85,-86,-87,164,196,198,211,212,213,215,220,249,252,255,256,263,264,-68,-70,280,-90,]),'ASIGNACION':([36,75,113,116,117,118,119,120,121,150,178,287,],[67,128,151,-82,-83,-84,-85,-86,-87,176,207,292,]),'CORCHETE_IZQ':([36,67,106,115,146,174,],[70,104,147,153,173,204,]),'INCREMENTO':([36,287,],[71,71,]),'DECREMENTO':([36,287,],[72,72,]),'PRINTF':([49,],[88,]),'PRINTLN':([49,],[89,]),'MAKE':([67,],[105,]),'MAP':([67,73,146,],[106,115,174,]),'INT':([73,147,152,153,165,172,195,203,204,205,208,250,],[116,116,116,116,116,116,116,116,116,116,116,116,]),'STRING':([73,147,152,153,165,172,195,203,204,205,208,250,],[117,117,117,117,117,117,117,117,117,117,117,117,]),'INT64':([73,147,152,153,165,172,195,203,204,205,208,250,],[118,118,118,118,118,118,118,118,118,118,118,118,]),'FLOAT32':([73,147,152,153,165,172,195,203,204,205,208,250,],[119,119,119,119,119,119,119,119,119,119,119,119,]),'FLOAT64':([73,147,152,153,165,172,195,203,204,205,208,250,],[120,120,120,120,120,120,120,120,120,120,120,120,]),'INT32':([73,147,152,153,165,172,195,203,204,205,208,250,],[121,121,121,121,121,121,121,121,121,121,121,121,]),'FORMATBOOL':([74,],[122,]),'PARSEBOOL':([74,],[123,]),'FORMATINT':([74,],[124,]),'PARSEINT':([74,],[125,]),'FORMATFLOAT':([74,],[126,]),'PARSEFLOAT':([74,],[127,]),'ARRPUNTOS':([104,],[145,]),'CORCHETE_DER':([110,111,112,116,117,118,119,120,121,143,144,145,173,175,179,227,],[150,-91,-92,-82,-83,-84,-85,-86,-87,172,-47,-48,203,205,208,250,]),'BOOLEAN':([154,],[180,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,171,217,218,240,293,],[1,201,237,238,260,297,]),'expression':([0,31,171,217,218,240,293,],[2,50,2,2,2,2,2,]),'impresion':([0,171,217,218,240,293,],[3,3,3,3,3,3,]),'sentencia':([0,171,217,218,240,293,],[4,4,4,4,4,4,]),'asignacion':([0,171,217,218,240,293,],[5,5,5,5,5,5,]),'longvariable':([0,171,217,218,240,293,],[6,6,6,6,6,6,]),'boolcadena':([0,171,217,218,240,293,],[7,7,7,7,7,7,]),'companum':([0,171,217,218,240,293,],[8,8,8,8,8,8,]),'compaid':([0,171,217,218,240,293,],[9,9,9,9,9,9,]),'sentenciafor':([0,171,217,218,240,293,],[10,10,10,10,10,10,]),'arreglo':([0,171,217,218,240,293,],[11,11,11,11,11,11,]),'slice':([0,171,217,218,240,293,],[12,12,12,12,12,12,]),'capslice':([0,171,217,218,240,293,],[13,13,13,13,13,13,]),'switch':([0,171,217,218,240,293,],[14,14,14,14,14,14,]),'map':([0,171,217,218,240,293,],[15,15,15,15,15,15,]),'asignar_valor_map':([0,171,217,218,240,293,],[16,16,16,16,16,16,]),'eliminar_valor_map':([0,171,217,218,240,293,],[17,17,17,17,17,17,]),'obtener_valor_map':([0,171,217,218,240,293,],[18,18,18,18,18,18,]),'funcion':([0,171,217,218,240,293,],[19,19,19,19,19,19,]),'cadenabool':([0,171,217,218,240,293,],[20,20,20,20,20,20,]),'enterocadena':([0,171,217,218,240,293,],[21,21,21,21,21,21,]),'cadenaentero':([0,171,217,218,240,293,],[22,22,22,22,22,22,]),'flotantecadena':([0,171,217,218,240,293,],[23,23,23,23,23,23,]),'cadenaflotante':([0,171,217,218,240,293,],[24,24,24,24,24,24,]),'seman_operacion':([0,171,217,218,240,293,],[25,25,25,25,25,25,]),'incremento':([0,171,217,218,240,273,293,],[26,26,26,26,26,288,26,]),'errorflotantecadena':([0,171,217,218,240,293,],[27,27,27,27,27,27,]),'errorcadenaflotante':([0,171,217,218,240,293,],[28,28,28,28,28,28,]),'term':([0,31,44,45,171,217,218,240,293,],[29,29,83,84,29,29,29,29,29,]),'factor':([0,31,34,44,45,46,47,48,67,101,128,151,163,171,207,217,218,225,236,240,251,252,253,263,264,293,],[35,35,66,35,35,85,86,87,103,142,160,177,192,35,229,35,35,244,259,35,244,269,244,244,244,35,]),'comparacion':([33,36,66,216,],[54,69,101,236,]),'valor':([70,164,176,225,251,253,263,264,265,],[110,193,206,248,248,248,248,248,279,]),'tipo_dato':([73,147,152,153,165,172,195,203,204,205,208,250,],[113,175,178,179,194,202,221,226,227,228,230,267,]),'cantidad':([104,],[143,]),'cases':([129,162,],[161,190,]),'case':([129,162,],[162,162,]),'argumentos':([131,220,],[166,239,]),'empty':([140,141,],[168,170,]),'default':([162,],[189,]),'valores':([225,251,253,263,264,],[243,268,270,277,278,]),'clave_valor':([225,251,253,263,264,],[245,245,245,245,245,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> expression','programa',1,'p_programa','analizadorSintactico.py',14),
  ('programa -> impresion','programa',1,'p_programa','analizadorSintactico.py',15),
  ('programa -> sentencia','programa',1,'p_programa','analizadorSintactico.py',16),
  ('programa -> asignacion','programa',1,'p_programa','analizadorSintactico.py',17),
  ('programa -> longvariable','programa',1,'p_programa','analizadorSintactico.py',18),
  ('programa -> boolcadena','programa',1,'p_programa','analizadorSintactico.py',19),
  ('programa -> companum','programa',1,'p_programa','analizadorSintactico.py',20),
  ('programa -> compaid','programa',1,'p_programa','analizadorSintactico.py',21),
  ('programa -> sentenciafor','programa',1,'p_programa','analizadorSintactico.py',22),
  ('programa -> arreglo','programa',1,'p_programa','analizadorSintactico.py',23),
  ('programa -> slice','programa',1,'p_programa','analizadorSintactico.py',24),
  ('programa -> capslice','programa',1,'p_programa','analizadorSintactico.py',25),
  ('programa -> switch','programa',1,'p_programa','analizadorSintactico.py',26),
  ('programa -> map','programa',1,'p_programa','analizadorSintactico.py',27),
  ('programa -> asignar_valor_map','programa',1,'p_programa','analizadorSintactico.py',28),
  ('programa -> eliminar_valor_map','programa',1,'p_programa','analizadorSintactico.py',29),
  ('programa -> obtener_valor_map','programa',1,'p_programa','analizadorSintactico.py',30),
  ('programa -> funcion','programa',1,'p_programa','analizadorSintactico.py',31),
  ('programa -> cadenabool','programa',1,'p_programa','analizadorSintactico.py',32),
  ('programa -> enterocadena','programa',1,'p_programa','analizadorSintactico.py',33),
  ('programa -> cadenaentero','programa',1,'p_programa','analizadorSintactico.py',34),
  ('programa -> flotantecadena','programa',1,'p_programa','analizadorSintactico.py',35),
  ('programa -> cadenaflotante','programa',1,'p_programa','analizadorSintactico.py',36),
  ('programa -> seman_operacion','programa',1,'p_programa','analizadorSintactico.py',37),
  ('programa -> incremento','programa',1,'p_programa','analizadorSintactico.py',38),
  ('programa -> errorflotantecadena','programa',1,'p_programa','analizadorSintactico.py',39),
  ('programa -> errorcadenaflotante','programa',1,'p_programa','analizadorSintactico.py',40),
  ('impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER','impresion',8,'p_impresion','analizadorSintactico.py',44),
  ('impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',45),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER','impresion',8,'p_impresion','analizadorSintactico.py',46),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',47),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',48),
  ('longvariable -> ID PARENT_IZQ CADENA PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',52),
  ('longvariable -> ID PARENT_IZQ ID PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',53),
  ('companum -> NUMERO comparacion NUMERO','companum',3,'p_comparacion_num','analizadorSintactico.py',56),
  ('compaid -> ID comparacion ID','compaid',3,'p_comparacion_id','analizadorSintactico.py',60),
  ('asignacion -> ID ASIGNACION factor','asignacion',3,'p_asignacion_var','analizadorSintactico.py',64),
  ('asignacion -> VAR ID tipo_dato ASIGNACION factor','asignacion',5,'p_asignacion_var','analizadorSintactico.py',65),
  ('asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor','asignacion',9,'p_asignacion_var','analizadorSintactico.py',66),
  ('sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER','sentenciafor',13,'p_sentencia_for','analizadorSintactico.py',70),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',74),
  ('incremento -> ID ASIGNACION ID','incremento',3,'p_incremento','analizadorSintactico.py',75),
  ('incremento -> ID DECREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',76),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato','arreglo',6,'p_definir_arreglo','analizadorSintactico.py',80),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','arreglo',9,'p_definir_arreglo','analizadorSintactico.py',81),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER','arreglo',5,'p_error_arreglo','analizadorSintactico.py',84),
  ('cantidad -> NUMERO','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',88),
  ('cantidad -> ARRPUNTOS','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',89),
  ('valores -> factor','valores',1,'p_valores_arreglo','analizadorSintactico.py',93),
  ('valores -> factor COMA valores','valores',3,'p_valores_arreglo','analizadorSintactico.py',94),
  ('slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER','slice',10,'p_definir_slice','analizadorSintactico.py',98),
  ('slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO COMA NUMERO PARENT_DER','slice',12,'p_definir_slice','analizadorSintactico.py',99),
  ('capslice -> ID PARENT_IZQ ID PARENT_DER','capslice',4,'p_cap_slice','analizadorSintactico.py',103),
  ('expression -> expression MAS term','expression',3,'p_expression_mas','analizadorSintactico.py',107),
  ('expression -> expression MENOS term','expression',3,'p_expression_menos','analizadorSintactico.py',111),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintactico.py',115),
  ('term -> term MULTIPLICADOR factor','term',3,'p_term_multiplicador','analizadorSintactico.py',119),
  ('term -> term DIVISOR factor','term',3,'p_term_divisor','analizadorSintactico.py',123),
  ('term -> term MOD_DIVISION factor','term',3,'p_term_mod','analizadorSintactico.py',127),
  ('term -> factor','term',1,'p_term_factor','analizadorSintactico.py',131),
  ('sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER','sentencia',7,'p_sentencia_if','analizadorSintactico.py',135),
  ('comparacion -> IGUALDAD','comparacion',1,'p_comparacion_igu','analizadorSintactico.py',139),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion_mayor','analizadorSintactico.py',143),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion_menor','analizadorSintactico.py',147),
  ('comparacion -> MAYOR_IGU','comparacion',1,'p_comparacion_mayor_igu','analizadorSintactico.py',151),
  ('comparacion -> MENOR_IGU','comparacion',1,'p_comparacion_menor_igu','analizadorSintactico.py',155),
  ('comparacion -> DESIGUALDAD','comparacion',1,'p_comparacion_desigu','analizadorSintactico.py',159),
  ('factor -> NUMERO','factor',1,'p_factor_num','analizadorSintactico.py',163),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintactico.py',167),
  ('factor -> CADENA','factor',1,'p_factor_cadena','analizadorSintactico.py',171),
  ('factor -> FLOAT','factor',1,'p_factor_float','analizadorSintactico.py',174),
  ('factor -> PARENT_IZQ expression PARENT_DER','factor',3,'p_factor_expr','analizadorSintactico.py',177),
  ('switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER','switch',5,'p_definir_switch','analizadorSintactico.py',180),
  ('cases -> case','cases',1,'p_cases','analizadorSintactico.py',183),
  ('cases -> case default','cases',2,'p_cases','analizadorSintactico.py',184),
  ('cases -> case cases','cases',2,'p_cases','analizadorSintactico.py',185),
  ('case -> CASE factor DOS_PUNTOS programa','case',4,'p_case','analizadorSintactico.py',188),
  ('default -> DEFAULT DOS_PUNTOS programa','default',3,'p_default','analizadorSintactico.py',191),
  ('map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',194),
  ('map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER','map',10,'p_definir_map','analizadorSintactico.py',195),
  ('map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',196),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',199),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',200),
  ('tipo_dato -> INT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',201),
  ('tipo_dato -> FLOAT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',202),
  ('tipo_dato -> FLOAT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',203),
  ('tipo_dato -> INT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',204),
  ('valores -> clave_valor','valores',1,'p_valores','analizadorSintactico.py',207),
  ('valores -> clave_valor COMA valores','valores',3,'p_valores','analizadorSintactico.py',208),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','analizadorSintactico.py',211),
  ('valor -> CADENA','valor',1,'p_valor','analizadorSintactico.py',214),
  ('valor -> NUMERO','valor',1,'p_valor','analizadorSintactico.py',215),
  ('asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor','asignar_valor_map',6,'p_asignar_valor_map','analizadorSintactico.py',218),
  ('eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER','eliminar_valor_map',6,'p_eliminar_valor_map','analizadorSintactico.py',221),
  ('obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER','obtener_valor_map',4,'p_obtener_valor_map','analizadorSintactico.py',224),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER','funcion',9,'p_funcion','analizadorSintactico.py',227),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER','funcion',11,'p_funcion','analizadorSintactico.py',228),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ RETURN ID LLAVE_DER','funcion',10,'p_funcion','analizadorSintactico.py',229),
  ('argumentos -> ID tipo_dato','argumentos',2,'p_argumentos','analizadorSintactico.py',232),
  ('argumentos -> ID tipo_dato COMA argumentos','argumentos',4,'p_argumentos','analizadorSintactico.py',233),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',236),
  ('seman_operacion -> NUMERO MAS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',251),
  ('seman_operacion -> NUMERO MENOS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',252),
  ('seman_operacion -> NUMERO MULTIPLICADOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',253),
  ('seman_operacion -> NUMERO DIVISOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',254),
  ('seman_operacion -> NUMERO MOD_DIVISION NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',255),
  ('seman_operacion -> FLOAT MAS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',256),
  ('seman_operacion -> FLOAT MENOS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',257),
  ('seman_operacion -> FLOAT MULTIPLICADOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',258),
  ('seman_operacion -> FLOAT DIVISOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',259),
  ('seman_operacion -> NUMERO MAS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',260),
  ('seman_operacion -> NUMERO MENOS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',261),
  ('seman_operacion -> NUMERO MULTIPLICADOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',262),
  ('seman_operacion -> NUMERO DIVISOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',263),
  ('seman_operacion -> FLOAT MAS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',264),
  ('seman_operacion -> FLOAT MENOS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',265),
  ('seman_operacion -> FLOAT MULTIPLICADOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',266),
  ('seman_operacion -> FLOAT DIVISOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',267),
  ('boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER','boolcadena',6,'p_bool_cadena','analizadorSintactico.py',271),
  ('cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER','cadenabool',6,'p_cadena_bool','analizadorSintactico.py',274),
  ('flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER','flotantecadena',10,'p_flotante_cadena','analizadorSintactico.py',277),
  ('errorflotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER','errorflotantecadena',8,'p_error_flotantecadena','analizadorSintactico.py',280),
  ('cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ CADENA COMA NUMERO PARENT_DER','cadenaflotante',8,'p_cadena_flotante','analizadorSintactico.py',284),
  ('errorcadenaflotante -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ CADENA PARENT_DER','errorcadenaflotante',6,'p_error_cadenaflotante','analizadorSintactico.py',287),
  ('enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ NUMERO COMA NUMERO PARENT_DER','enterocadena',8,'p_entero_cadena','analizadorSintactico.py',291),
  ('cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER','cadenaentero',10,'p_cadena_entero','analizadorSintactico.py',294),
]
