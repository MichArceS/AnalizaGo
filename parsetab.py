
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASIGNACIONleftIGUALDADMAYORMENORMENOR_IGUMAYOR_IGUleftMASMENOSleftMULTIPLICADORDIVISORleftPARENT_IZQPARENT_DERAMPERSAND ARRPUNTOS ASIGNACION BOOLEAN BREAK CADENA CASE COMA COMILLA COMMENT_BLOQUE_DER COMMENT_BLOQUE_IZQ COMMENT_LINEA CONST CONTINUE CORCHETE_DER CORCHETE_IZQ DECREMENTO DEFAULT DEFER DELETE DELETE DESIGUALDAD DIVISOR DOBLE_COMILLA DOS_PUNTOS ELSE ESPACIADO FALLTHROUGH FIN_SENTENCIA FLOAT32 FLOAT32 FLOAT64 FLOAT64 FMT FOR FUNC GO ID IF IGUAL IGUALDAD IMPORT INCREMENTO INT INT INT32 INT32 INT64 INT64 INTERFACE LEN LLAVE_DER LLAVE_IZQ MAKE MAKE MAP MAS MAYOR MAYOR_IGU MENOR MENOR_IGU MENOS MOD_DIVISION MULTIPLICADOR NUMERO PARENT_DER PARENT_IZQ PIPE PRINT PRINTF PRINTF PRINTLN PRINTLN PUNTO Package RANGE RETURN SELECT SPLIT SPLIT STRING STRING STRINGS STRUCT SWITCH TYPE VACIO VARprograma : expression\n                | impresion\n                | sentencia \n                | asignacion\n                | longvariable\n                | boolcadena\n                | companum\n                | compaid\n                | sentenciafor\n                | arreglo\n                | slice\n                | capslice\n                | switch\n                | map\n                | asignar_valor_map\n                | eliminar_valor_map\n                | obtener_valor_map\n                | funcion\n                | splitcadenaimpresion : FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER\n                | FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER\n                splitcadena : STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DERseparador : IDlongvariable : ID PARENT_IZQ CADENA PARENT_DER\n                        | ID PARENT_IZQ ID PARENT_DERboolcadena : ID PUNTO ID PARENT_IZQ factor PARENT_DERcompanum : NUMERO comparacion NUMEROcompaid : ID comparacion IDasignacion : ID ASIGNACION factor\n                    | VAR ID tipo_dato ASIGNACION factor\n                    | VAR ID COMA ID tipo_dato ASIGNACION factor COMA factorsentenciafor : FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DERincremento : ID INCREMENTO\n                    | ID ASIGNACION ID\n                    | ID DECREMENTOarreglo : ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID \n                    | ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DERcantidad : NUMERO \n                    | ARRPUNTOSvalores : factor\n                    | factor COMA valoresslice : ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER\n                | ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DERcapslice : ID PARENT_IZQ ID PARENT_DERexpression : expression MAS termexpression : expression MENOS termexpression : termterm : term MULTIPLICADOR factorterm : term DIVISOR factorterm : term MOD_DIVISION factorterm : factorsentencia : IF factor comparacion factor LLAVE_IZQ programa LLAVE_DERcomparacion : IGUALDADcomparacion : MAYORcomparacion : MENORcomparacion : MAYOR_IGUcomparacion : MENOR_IGUcomparacion : DESIGUALDADfactor : NUMEROfactor : IDfactor : CADENAfactor : PARENT_IZQ expression PARENT_DERswitch : SWITCH ID LLAVE_IZQ cases LLAVE_DERcases : case \n                | case default \n                | case casescase : CASE factor DOS_PUNTOS programadefault : DEFAULT DOS_PUNTOS programamap : VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER \n                | ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER\n                | ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DERtipo_dato : INT \n                    | STRING \n                    | INT64 \n                    | FLOAT32 \n                    | FLOAT64 \n                    | INT32valores : clave_valor \n                | clave_valor COMA valoresclave_valor : valor DOS_PUNTOS valorvalor : CADENA\n                | NUMEROasignar_valor_map : ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valoreliminar_valor_map : DELETE PARENT_IZQ ID COMA valor PARENT_DERobtener_valor_map : ID CORCHETE_IZQ valor CORCHETE_DERfuncion : FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER \n                    | FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DERargumentos : ID tipo_dato \n                    | ID tipo_dato COMA argumentosempty : '
    
_lr_action_items = {'FMT':([0,127,161,162,180,227,],[22,22,22,22,22,22,]),'IF':([0,127,161,162,180,227,],[26,26,26,26,26,26,]),'ID':([0,23,26,29,30,31,33,35,36,37,38,39,45,46,47,48,49,50,52,53,54,55,60,72,86,94,97,110,112,118,127,129,137,152,158,161,162,164,166,171,176,180,193,194,195,201,202,208,210,225,227,],[28,43,43,57,58,59,61,43,43,43,43,43,-55,-56,-57,-58,-59,-60,73,78,80,81,96,43,113,43,120,43,43,43,28,153,160,170,43,28,28,120,182,43,43,28,43,43,43,43,43,220,222,230,28,]),'VAR':([0,127,161,162,180,227,],[29,29,29,29,29,29,]),'NUMERO':([0,23,26,35,36,37,38,39,44,45,46,47,48,49,50,52,56,72,75,94,110,112,118,119,127,133,147,149,158,161,162,171,176,180,185,193,194,195,201,202,203,212,227,],[25,42,42,42,42,42,42,42,71,-55,-56,-57,-58,-59,-60,42,84,42,104,42,42,42,42,84,25,84,167,168,42,25,25,189,42,25,199,189,42,189,189,189,84,223,25,]),'FOR':([0,127,161,162,180,227,],[30,30,30,30,30,30,]),'SWITCH':([0,127,161,162,180,227,],[31,31,31,31,31,31,]),'DELETE':([0,127,161,162,180,227,],[32,32,32,32,32,32,]),'FUNC':([0,127,161,162,180,227,],[33,33,33,33,33,33,]),'STRINGS':([0,127,161,162,180,227,],[34,34,34,34,34,34,]),'CADENA':([0,23,26,35,36,37,38,39,45,46,47,48,49,50,52,53,56,72,94,99,100,110,112,118,119,122,127,133,158,161,162,171,176,180,193,194,195,201,202,203,227,],[24,24,24,24,24,24,24,24,-55,-56,-57,-58,-59,-60,24,79,83,24,24,123,125,24,24,24,83,146,24,83,24,24,24,190,24,24,190,24,190,190,190,83,24,]),'PARENT_IZQ':([0,23,26,28,32,35,36,37,38,39,45,46,47,48,49,50,52,61,68,69,72,73,76,80,94,98,110,112,118,127,158,161,162,171,176,180,193,194,195,201,202,227,],[23,23,23,53,60,23,23,23,23,23,-55,-56,-57,-58,-59,-60,23,97,99,100,23,102,106,110,23,122,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,27,28,42,43,63,64,65,66,67,70,71,73,74,81,83,84,108,109,111,134,138,148,150,153,156,157,163,169,183,184,200,206,209,211,213,217,218,219,228,229,232,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-49,-63,-61,-53,-62,-61,-62,-47,-48,-50,-51,-52,-64,-29,-62,-31,-30,-83,-84,-27,-26,-87,-32,-65,-21,-23,-38,-28,-85,-86,-54,-20,-22,-39,-33,-88,-24,-44,-72,-73,-71,-89,-45,-34,]),'LLAVE_DER':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,27,28,42,43,63,64,65,66,67,70,71,73,74,81,83,84,108,109,111,116,117,134,138,139,140,148,150,151,153,156,157,163,169,177,178,183,184,186,187,188,189,190,197,200,205,206,207,209,211,213,214,215,216,217,218,219,222,228,229,231,232,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-49,-63,-61,-53,-62,-61,-62,-47,-48,-50,-51,-52,-64,-29,-62,-31,-30,-83,-84,-27,-26,-87,138,-66,-32,-65,-67,-68,-21,-23,169,-38,-28,-85,-86,-54,-70,-69,-20,-22,200,-42,-80,-61,-63,209,-39,218,-33,219,-88,-24,-44,-43,-81,-82,-72,-73,-71,228,-89,-45,232,-34,]),'DEFAULT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,27,28,42,43,63,64,65,66,67,70,71,73,74,81,83,84,108,109,111,117,134,138,148,150,153,156,157,163,169,178,183,184,200,206,209,211,213,217,218,219,228,229,232,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-49,-63,-61,-53,-62,-61,-62,-47,-48,-50,-51,-52,-64,-29,-62,-31,-30,-83,-84,-27,-26,-87,141,-32,-65,-21,-23,-38,-28,-85,-86,-54,-69,-20,-22,-39,-33,-88,-24,-44,-72,-73,-71,-89,-45,-34,]),'CASE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,27,28,42,43,63,64,65,66,67,70,71,73,74,81,83,84,95,108,109,111,117,134,138,148,150,153,156,157,163,169,178,183,184,200,206,209,211,213,217,218,219,228,229,232,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-49,-63,-61,-53,-62,-61,-62,-47,-48,-50,-51,-52,-64,-29,-62,-31,-30,-83,-84,118,-27,-26,-87,118,-32,-65,-21,-23,-38,-28,-85,-86,-54,-69,-20,-22,-39,-33,-88,-24,-44,-72,-73,-71,-89,-45,-34,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,27,28,42,43,63,64,65,66,67,70,71,73,74,81,83,84,108,109,111,134,138,148,150,153,156,157,163,169,183,184,197,200,206,209,211,213,217,218,219,228,229,232,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-49,-63,-61,-53,-62,-61,-62,-47,-48,-50,-51,-52,-64,-29,-62,-31,-30,-83,-84,-27,-26,-87,-32,-65,-21,-23,-38,-28,-85,-86,-54,-20,-22,210,-39,-33,-88,-24,-44,-72,-73,-71,-89,-45,-34,]),'MAS':([2,21,24,25,27,28,41,42,43,63,64,65,66,67,70,],[35,-49,-63,-61,-53,-62,35,-61,-62,-47,-48,-50,-51,-52,-64,]),'MENOS':([2,21,24,25,27,28,41,42,43,63,64,65,66,67,70,],[36,-49,-63,-61,-53,-62,36,-61,-62,-47,-48,-50,-51,-52,-64,]),'PARENT_DER':([21,24,27,41,42,43,63,64,65,66,67,70,78,79,83,84,88,89,90,91,92,93,99,100,121,124,126,132,143,144,167,168,179,198,199,204,223,],[-49,-63,-53,70,-61,-62,-47,-48,-50,-51,-52,-64,108,109,-83,-84,-74,-75,-76,-77,-78,-79,-92,-92,145,148,150,156,163,-90,183,184,-91,211,213,217,229,]),'MULTIPLICADOR':([21,24,25,27,28,42,43,63,64,65,66,67,70,],[37,-63,-61,-53,-62,-61,-62,37,37,-50,-51,-52,-64,]),'DIVISOR':([21,24,25,27,28,42,43,63,64,65,66,67,70,],[38,-63,-61,-53,-62,-61,-62,38,38,-50,-51,-52,-64,]),'MOD_DIVISION':([21,24,25,27,28,42,43,63,64,65,66,67,70,],[39,-63,-61,-53,-62,-61,-62,39,39,-50,-51,-52,-64,]),'PUNTO':([22,28,34,],[40,54,62,]),'IGUALDAD':([24,25,28,42,43,51,70,160,],[-63,45,45,-61,-62,45,-64,45,]),'MAYOR':([24,25,28,42,43,51,70,160,],[-63,46,46,-61,-62,46,-64,46,]),'MENOR':([24,25,28,42,43,51,70,160,],[-63,47,47,-61,-62,47,-64,47,]),'MAYOR_IGU':([24,25,28,42,43,51,70,160,],[-63,48,48,-61,-62,48,-64,48,]),'MENOR_IGU':([24,25,28,42,43,51,70,160,],[-63,49,49,-61,-62,49,-64,49,]),'DESIGUALDAD':([24,25,28,42,43,51,70,160,],[-63,50,50,-61,-62,50,-64,50,]),'LLAVE_IZQ':([24,42,43,59,70,88,89,90,91,92,93,101,153,165,173,175,221,224,226,230,],[-63,-61,-62,95,-64,-74,-75,-76,-77,-78,-79,127,171,180,193,195,227,-35,-37,-36,]),'FIN_SENTENCIA':([24,42,43,70,115,196,],[-63,-61,-62,-64,137,208,]),'DOS_PUNTOS':([24,42,43,70,141,142,189,190,191,],[-63,-61,-62,-64,161,162,-84,-83,203,]),'COMA':([24,42,43,57,70,83,84,88,89,90,91,92,93,96,123,125,144,146,170,174,187,188,189,190,199,216,],[-63,-61,-62,86,-64,-83,-84,-74,-75,-76,-77,-78,-79,119,147,149,164,166,185,194,201,202,-61,-63,212,-82,]),'ASIGNACION':([28,58,85,88,89,90,91,92,93,111,135,220,],[52,94,112,-74,-75,-76,-77,-78,-79,133,158,225,]),'CORCHETE_IZQ':([28,52,77,87,102,130,],[56,75,107,114,128,154,]),'PRINTF':([40,],[68,]),'PRINTLN':([40,],[69,]),'MAKE':([52,],[76,]),'MAP':([52,57,106,],[77,87,130,]),'INT':([57,107,113,114,120,145,154,155,159,192,],[88,88,88,88,88,88,88,88,88,88,]),'STRING':([57,107,113,114,120,145,154,155,159,192,],[89,89,89,89,89,89,89,89,89,89,]),'INT64':([57,107,113,114,120,145,154,155,159,192,],[90,90,90,90,90,90,90,90,90,90,]),'FLOAT32':([57,107,113,114,120,145,154,155,159,192,],[91,91,91,91,91,91,91,91,91,91,]),'FLOAT64':([57,107,113,114,120,145,154,155,159,192,],[92,92,92,92,92,92,92,92,92,92,]),'INT32':([57,107,113,114,120,145,154,155,159,192,],[93,93,93,93,93,93,93,93,93,93,]),'SPLIT':([62,],[98,]),'ARRPUNTOS':([75,],[105,]),'CORCHETE_DER':([82,83,84,88,89,90,91,92,93,103,104,105,128,131,136,172,],[111,-83,-84,-74,-75,-76,-77,-78,-79,129,-40,-41,152,155,159,192,]),'DOBLE_COMILLA':([181,182,],[198,-25,]),'INCREMENTO':([220,],[224,]),'DECREMENTO':([220,],[226,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,127,161,162,180,227,],[1,151,177,178,197,231,]),'expression':([0,23,127,161,162,180,227,],[2,41,2,2,2,2,2,]),'impresion':([0,127,161,162,180,227,],[3,3,3,3,3,3,]),'sentencia':([0,127,161,162,180,227,],[4,4,4,4,4,4,]),'asignacion':([0,127,161,162,180,227,],[5,5,5,5,5,5,]),'longvariable':([0,127,161,162,180,227,],[6,6,6,6,6,6,]),'boolcadena':([0,127,161,162,180,227,],[7,7,7,7,7,7,]),'companum':([0,127,161,162,180,227,],[8,8,8,8,8,8,]),'compaid':([0,127,161,162,180,227,],[9,9,9,9,9,9,]),'sentenciafor':([0,127,161,162,180,227,],[10,10,10,10,10,10,]),'arreglo':([0,127,161,162,180,227,],[11,11,11,11,11,11,]),'slice':([0,127,161,162,180,227,],[12,12,12,12,12,12,]),'capslice':([0,127,161,162,180,227,],[13,13,13,13,13,13,]),'switch':([0,127,161,162,180,227,],[14,14,14,14,14,14,]),'map':([0,127,161,162,180,227,],[15,15,15,15,15,15,]),'asignar_valor_map':([0,127,161,162,180,227,],[16,16,16,16,16,16,]),'eliminar_valor_map':([0,127,161,162,180,227,],[17,17,17,17,17,17,]),'obtener_valor_map':([0,127,161,162,180,227,],[18,18,18,18,18,18,]),'funcion':([0,127,161,162,180,227,],[19,19,19,19,19,19,]),'splitcadena':([0,127,161,162,180,227,],[20,20,20,20,20,20,]),'term':([0,23,35,36,127,161,162,180,227,],[21,21,63,64,21,21,21,21,21,]),'factor':([0,23,26,35,36,37,38,39,52,72,94,110,112,118,127,158,161,162,171,176,180,193,194,195,201,202,227,],[27,27,51,27,27,65,66,67,74,101,115,132,134,142,27,174,27,27,187,196,27,187,206,187,187,187,27,]),'comparacion':([25,28,51,160,],[44,55,72,176,]),'valor':([56,119,133,171,193,195,201,202,203,],[82,143,157,191,191,191,191,191,216,]),'tipo_dato':([57,107,113,114,120,145,154,155,159,192,],[85,131,135,136,144,165,172,173,175,204,]),'cantidad':([75,],[103,]),'cases':([95,117,],[116,140,]),'case':([95,117,],[117,117,]),'argumentos':([97,164,],[121,179,]),'empty':([99,100,],[124,126,]),'default':([117,],[139,]),'separador':([166,],[181,]),'valores':([171,193,195,201,202,],[186,205,207,214,215,]),'clave_valor':([171,193,195,201,202,],[188,188,188,188,188,]),'incremento':([208,],[221,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> expression','programa',1,'p_programa','analizadorSintactico.py',14),
  ('programa -> impresion','programa',1,'p_programa','analizadorSintactico.py',15),
  ('programa -> sentencia','programa',1,'p_programa','analizadorSintactico.py',16),
  ('programa -> asignacion','programa',1,'p_programa','analizadorSintactico.py',17),
  ('programa -> longvariable','programa',1,'p_programa','analizadorSintactico.py',18),
  ('programa -> boolcadena','programa',1,'p_programa','analizadorSintactico.py',19),
  ('programa -> companum','programa',1,'p_programa','analizadorSintactico.py',20),
  ('programa -> compaid','programa',1,'p_programa','analizadorSintactico.py',21),
  ('programa -> sentenciafor','programa',1,'p_programa','analizadorSintactico.py',22),
  ('programa -> arreglo','programa',1,'p_programa','analizadorSintactico.py',23),
  ('programa -> slice','programa',1,'p_programa','analizadorSintactico.py',24),
  ('programa -> capslice','programa',1,'p_programa','analizadorSintactico.py',25),
  ('programa -> switch','programa',1,'p_programa','analizadorSintactico.py',26),
  ('programa -> map','programa',1,'p_programa','analizadorSintactico.py',27),
  ('programa -> asignar_valor_map','programa',1,'p_programa','analizadorSintactico.py',28),
  ('programa -> eliminar_valor_map','programa',1,'p_programa','analizadorSintactico.py',29),
  ('programa -> obtener_valor_map','programa',1,'p_programa','analizadorSintactico.py',30),
  ('programa -> funcion','programa',1,'p_programa','analizadorSintactico.py',31),
  ('programa -> splitcadena','programa',1,'p_programa','analizadorSintactico.py',32),
  ('impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER','impresion',8,'p_impresion','analizadorSintactico.py',36),
  ('impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',37),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER','impresion',8,'p_impresion','analizadorSintactico.py',38),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',39),
  ('splitcadena -> STRINGS PUNTO SPLIT PARENT_IZQ CADENA COMA separador DOBLE_COMILLA PARENT_DER','splitcadena',9,'p_split','analizadorSintactico.py',43),
  ('separador -> ID','separador',1,'p_separador','analizadorSintactico.py',46),
  ('longvariable -> ID PARENT_IZQ CADENA PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',49),
  ('longvariable -> ID PARENT_IZQ ID PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',50),
  ('boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER','boolcadena',6,'p_bool_cadena','analizadorSintactico.py',54),
  ('companum -> NUMERO comparacion NUMERO','companum',3,'p_comparacion_num','analizadorSintactico.py',58),
  ('compaid -> ID comparacion ID','compaid',3,'p_comparacion_id','analizadorSintactico.py',62),
  ('asignacion -> ID ASIGNACION factor','asignacion',3,'p_asignacion_var','analizadorSintactico.py',66),
  ('asignacion -> VAR ID tipo_dato ASIGNACION factor','asignacion',5,'p_asignacion_var','analizadorSintactico.py',67),
  ('asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor','asignacion',9,'p_asignacion_var','analizadorSintactico.py',68),
  ('sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER','sentenciafor',13,'p_sentencia_for','analizadorSintactico.py',72),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',76),
  ('incremento -> ID ASIGNACION ID','incremento',3,'p_incremento','analizadorSintactico.py',77),
  ('incremento -> ID DECREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',78),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID','arreglo',6,'p_definir_arreglo','analizadorSintactico.py',82),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER','arreglo',9,'p_definir_arreglo','analizadorSintactico.py',83),
  ('cantidad -> NUMERO','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',87),
  ('cantidad -> ARRPUNTOS','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',88),
  ('valores -> factor','valores',1,'p_valores_arreglo','analizadorSintactico.py',92),
  ('valores -> factor COMA valores','valores',3,'p_valores_arreglo','analizadorSintactico.py',93),
  ('slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER','slice',10,'p_definir_slice','analizadorSintactico.py',97),
  ('slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER','slice',12,'p_definir_slice','analizadorSintactico.py',98),
  ('capslice -> ID PARENT_IZQ ID PARENT_DER','capslice',4,'p_cap_slice','analizadorSintactico.py',102),
  ('expression -> expression MAS term','expression',3,'p_expression_mas','analizadorSintactico.py',106),
  ('expression -> expression MENOS term','expression',3,'p_expression_menos','analizadorSintactico.py',110),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintactico.py',114),
  ('term -> term MULTIPLICADOR factor','term',3,'p_term_multiplicador','analizadorSintactico.py',118),
  ('term -> term DIVISOR factor','term',3,'p_term_divisor','analizadorSintactico.py',122),
  ('term -> term MOD_DIVISION factor','term',3,'p_term_mod','analizadorSintactico.py',126),
  ('term -> factor','term',1,'p_term_factor','analizadorSintactico.py',130),
  ('sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER','sentencia',7,'p_sentencia_if','analizadorSintactico.py',134),
  ('comparacion -> IGUALDAD','comparacion',1,'p_comparacion_igu','analizadorSintactico.py',138),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion_mayor','analizadorSintactico.py',142),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion_menor','analizadorSintactico.py',146),
  ('comparacion -> MAYOR_IGU','comparacion',1,'p_comparacion_mayor_igu','analizadorSintactico.py',150),
  ('comparacion -> MENOR_IGU','comparacion',1,'p_comparacion_menor_igu','analizadorSintactico.py',154),
  ('comparacion -> DESIGUALDAD','comparacion',1,'p_comparacion_desigu','analizadorSintactico.py',158),
  ('factor -> NUMERO','factor',1,'p_factor_num','analizadorSintactico.py',162),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintactico.py',166),
  ('factor -> CADENA','factor',1,'p_factor_cadena','analizadorSintactico.py',170),
  ('factor -> PARENT_IZQ expression PARENT_DER','factor',3,'p_factor_expr','analizadorSintactico.py',174),
  ('switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER','switch',5,'p_definir_switch','analizadorSintactico.py',177),
  ('cases -> case','cases',1,'p_cases','analizadorSintactico.py',180),
  ('cases -> case default','cases',2,'p_cases','analizadorSintactico.py',181),
  ('cases -> case cases','cases',2,'p_cases','analizadorSintactico.py',182),
  ('case -> CASE factor DOS_PUNTOS programa','case',4,'p_case','analizadorSintactico.py',185),
  ('default -> DEFAULT DOS_PUNTOS programa','default',3,'p_default','analizadorSintactico.py',188),
  ('map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',191),
  ('map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER','map',10,'p_definir_map','analizadorSintactico.py',192),
  ('map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',193),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',196),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',197),
  ('tipo_dato -> INT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',198),
  ('tipo_dato -> FLOAT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',199),
  ('tipo_dato -> FLOAT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',200),
  ('tipo_dato -> INT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',201),
  ('valores -> clave_valor','valores',1,'p_valores','analizadorSintactico.py',204),
  ('valores -> clave_valor COMA valores','valores',3,'p_valores','analizadorSintactico.py',205),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','analizadorSintactico.py',208),
  ('valor -> CADENA','valor',1,'p_valor','analizadorSintactico.py',211),
  ('valor -> NUMERO','valor',1,'p_valor','analizadorSintactico.py',212),
  ('asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor','asignar_valor_map',6,'p_asignar_valor_map','analizadorSintactico.py',215),
  ('eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER','eliminar_valor_map',6,'p_eliminar_valor_map','analizadorSintactico.py',218),
  ('obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER','obtener_valor_map',4,'p_obtener_valor_map','analizadorSintactico.py',221),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER','funcion',9,'p_funcion','analizadorSintactico.py',224),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER','funcion',11,'p_funcion','analizadorSintactico.py',225),
  ('argumentos -> ID tipo_dato','argumentos',2,'p_argumentos','analizadorSintactico.py',228),
  ('argumentos -> ID tipo_dato COMA argumentos','argumentos',4,'p_argumentos','analizadorSintactico.py',229),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',232),
]
