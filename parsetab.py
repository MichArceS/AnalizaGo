
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASIGNACIONleftIGUALDADMAYORMENORMENOR_IGUMAYOR_IGUleftMASMENOSleftMULTIPLICADORDIVISORleftPARENT_IZQPARENT_DERAMPERSAND ARRPUNTOS ASIGNACION BOOLEAN BREAK CADENA CASE COMA COMILLA COMMENT_BLOQUE_DER COMMENT_BLOQUE_IZQ COMMENT_LINEA CONST CONTAINS CONTINUE CORCHETE_DER CORCHETE_IZQ DECREMENTO DEFAULT DEFER DELETE DESIGUALDAD DIVISOR DOBLE_COMILLA DOS_PUNTOS ELSE ESPACIADO FALLTHROUGH FALSE FIN_SENTENCIA FLOAT FLOAT32 FLOAT64 FMT FOR FORMATBOOL FORMATFLOAT FORMATINT FUNC GO ID IF IGUAL IGUALDAD IMPORT INCREMENTO INT INT32 INT64 INTERFACE LEN LLAVE_DER LLAVE_IZQ MAKE MAP MAS MAYOR MAYOR_IGU MENOR MENOR_IGU MENOS MOD_DIVISION MULTIPLICADOR NUMERO PACKAGE PARENT_DER PARENT_IZQ PARSEBOOL PARSEFLOAT PARSEINT PIPE PRINTF PRINTLN PUNTO RANGE RETURN SELECT SPLIT STRCONV STRING STRINGS STRUCT SWITCH TRUE TYPE VACIO VARprograma : expression\n                | impresion\n                | sentencia \n                | asignacion\n                | longvariable\n                | boolcadena\n                | companum\n                | compaid\n                | sentenciafor\n                | arreglo\n                | slice\n                | capslice\n                | switch\n                | map\n                | asignar_valor_map\n                | eliminar_valor_map\n                | obtener_valor_map\n                | funcion\n                | cadenabool\n                | enterocadena\n                | cadenaentero\n                | flotantecadena\n                | cadenaflotante\n                | seman_operacionimpresion : FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER\n                | FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER\n                | FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER\n                longvariable : ID PARENT_IZQ CADENA PARENT_DER\n                        | ID PARENT_IZQ ID PARENT_DERcompanum : NUMERO comparacion NUMEROcompaid : ID comparacion IDasignacion : ID ASIGNACION factor\n                    | VAR ID tipo_dato ASIGNACION factor\n                    | VAR ID COMA ID tipo_dato ASIGNACION factor COMA factorsentenciafor : FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DERincremento : ID INCREMENTO\n                    | ID ASIGNACION ID\n                    | ID DECREMENTOarreglo : ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato \n                    | ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DERcantidad : NUMERO \n                    | ARRPUNTOSvalores : factor\n                    | factor COMA valoresslice : ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER\n                | ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DERcapslice : ID PARENT_IZQ ID PARENT_DERexpression : expression MAS termexpression : expression MENOS termexpression : termterm : term MULTIPLICADOR factorterm : term DIVISOR factorterm : term MOD_DIVISION factorterm : factorsentencia : IF factor comparacion factor LLAVE_IZQ programa LLAVE_DERcomparacion : IGUALDADcomparacion : MAYORcomparacion : MENORcomparacion : MAYOR_IGUcomparacion : MENOR_IGUcomparacion : DESIGUALDADfactor : NUMEROfactor : IDfactor : CADENAfactor : PARENT_IZQ expression PARENT_DERswitch : SWITCH ID LLAVE_IZQ cases LLAVE_DERcases : case \n                | case default \n                | case casescase : CASE factor DOS_PUNTOS programadefault : DEFAULT DOS_PUNTOS programamap : VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER \n                | ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER\n                | ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DERtipo_dato : INT \n                    | STRING \n                    | INT64 \n                    | FLOAT32 \n                    | FLOAT64 \n                    | INT32valores : clave_valor \n                | clave_valor COMA valoresclave_valor : valor DOS_PUNTOS valorvalor : CADENA\n                | NUMEROasignar_valor_map : ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valoreliminar_valor_map : DELETE PARENT_IZQ ID COMA valor PARENT_DERobtener_valor_map : ID CORCHETE_IZQ valor CORCHETE_DERfuncion : FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER \n                    | FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DERargumentos : ID tipo_dato \n                    | ID tipo_dato COMA argumentosempty : seman_operacion : NUMERO MAS NUMERO \n                        | NUMERO MENOS NUMERO\n                        | NUMERO MULTIPLICADOR NUMERO\n                        | NUMERO DIVISOR NUMERO\n                        | NUMERO MOD_DIVISION NUMERO\n                        | FLOAT MAS NUMERO\n                        | FLOAT MENOS NUMERO\n                        | FLOAT MULTIPLICADOR NUMERO\n                        | FLOAT DIVISOR NUMERO\n                        | NUMERO MAS FLOAT\n                        | NUMERO MENOS FLOAT\n                        | NUMERO MULTIPLICADOR FLOAT\n                        | NUMERO DIVISOR FLOAT\n                        | FLOAT MAS FLOAT\n                        | FLOAT MENOS FLOAT\n                        | FLOAT MULTIPLICADOR FLOAT\n                        | FLOAT DIVISOR FLOATboolcadena : STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DERcadenabool : STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DERflotantecadena : STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DERcadenaflotante : STRCONV PUNTO PARSEFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DERenterocadena : STRCONV PUNTO FORMATINT PARENT_IZQ CADENA COMA NUMERO PARENT_DERcadenaentero : STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER'
    
_lr_action_items = {'FMT':([0,166,211,212,234,287,],[27,27,27,27,27,27,]),'IF':([0,166,211,212,234,287,],[31,31,31,31,31,31,]),'ID':([0,28,31,34,36,37,39,41,42,43,44,45,56,57,58,59,60,61,63,64,65,71,95,108,122,125,146,158,166,182,196,202,211,212,214,220,230,234,246,247,248,257,258,267,269,285,287,],[33,49,49,67,69,70,72,49,49,49,49,49,-57,-58,-59,-60,-61,-62,96,101,103,124,49,147,49,160,49,49,33,210,219,49,33,33,160,49,49,33,49,49,49,49,49,280,282,290,33,]),'VAR':([0,166,211,212,234,287,],[34,34,34,34,34,34,]),'STRCONV':([0,166,211,212,234,287,],[35,35,35,35,35,35,]),'NUMERO':([0,28,31,41,42,43,44,45,50,51,52,53,54,55,56,57,58,59,60,61,63,66,73,74,75,76,95,98,122,146,158,159,166,172,191,193,202,206,207,209,211,212,220,230,234,237,244,246,247,248,250,251,257,258,259,270,287,],[30,48,48,48,48,48,48,48,85,86,88,90,92,94,-57,-58,-59,-60,-61,-62,48,106,127,129,131,133,48,139,48,48,48,106,30,106,216,217,48,226,227,229,30,30,241,48,30,255,260,241,48,241,265,266,241,241,106,283,30,]),'FOR':([0,166,211,212,234,287,],[36,36,36,36,36,36,]),'SWITCH':([0,166,211,212,234,287,],[37,37,37,37,37,37,]),'DELETE':([0,166,211,212,234,287,],[38,38,38,38,38,38,]),'FUNC':([0,166,211,212,234,287,],[39,39,39,39,39,39,]),'FLOAT':([0,51,52,53,54,73,74,75,76,153,154,166,211,212,234,287,],[40,87,89,91,93,126,128,130,132,180,181,40,40,40,40,40,]),'CADENA':([0,28,31,41,42,43,44,45,56,57,58,59,60,61,63,64,66,95,122,134,135,146,150,151,152,158,159,166,172,202,208,211,212,220,230,234,246,247,248,257,258,259,287,],[29,29,29,29,29,29,29,29,-57,-58,-59,-60,-61,-62,29,102,105,29,29,162,164,29,177,178,179,29,105,29,105,29,228,29,29,242,29,29,242,29,242,242,242,105,29,]),'PARENT_IZQ':([0,28,31,33,38,41,42,43,44,45,56,57,58,59,60,61,63,72,82,83,95,96,99,116,117,118,119,120,121,122,146,158,166,202,211,212,220,230,234,246,247,248,257,258,287,],[28,28,28,64,71,28,28,28,28,28,-57,-58,-59,-60,-61,-62,28,125,134,135,28,137,141,149,150,151,152,153,154,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,33,48,49,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,96,97,103,105,106,110,111,112,113,114,115,126,127,128,129,130,131,132,133,143,144,145,173,183,192,194,197,201,204,205,213,218,235,236,249,252,256,263,268,274,275,276,277,278,279,288,289,292,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-51,-65,-63,-55,-64,-63,-64,-49,-50,-52,-53,-54,-66,-31,-95,-104,-96,-105,-97,-106,-98,-107,-99,-64,-33,-32,-85,-86,-76,-77,-78,-79,-80,-81,-108,-100,-109,-101,-110,-102,-111,-103,-30,-29,-89,-34,-67,-26,-28,-40,-87,-112,-113,-88,-56,-25,-27,-116,-115,-41,-35,-90,-46,-74,-75,-73,-117,-114,-91,-47,-36,]),'LLAVE_DER':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,33,48,49,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,96,97,103,105,106,110,111,112,113,114,115,126,127,128,129,130,131,132,133,143,144,145,156,157,173,183,184,185,192,194,195,197,201,204,205,213,218,231,232,235,236,238,239,240,241,242,249,252,254,256,262,263,264,268,271,272,273,274,275,276,277,278,279,282,288,289,291,292,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-51,-65,-63,-55,-64,-63,-64,-49,-50,-52,-53,-54,-66,-31,-95,-104,-96,-105,-97,-106,-98,-107,-99,-64,-33,-32,-85,-86,-76,-77,-78,-79,-80,-81,-108,-100,-109,-101,-110,-102,-111,-103,-30,-29,-89,183,-68,-34,-67,-69,-70,-26,-28,218,-40,-87,-112,-113,-88,-56,-72,-71,-25,-27,256,-44,-82,-63,-65,-116,-115,268,-41,276,-35,277,-90,-45,-83,-84,-46,-74,-75,-73,-117,-114,288,-91,-47,292,-36,]),'DEFAULT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,33,48,49,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,96,97,103,105,106,110,111,112,113,114,115,126,127,128,129,130,131,132,133,143,144,145,157,173,183,192,194,197,201,204,205,213,218,232,235,236,249,252,256,263,268,274,275,276,277,278,279,288,289,292,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-51,-65,-63,-55,-64,-63,-64,-49,-50,-52,-53,-54,-66,-31,-95,-104,-96,-105,-97,-106,-98,-107,-99,-64,-33,-32,-85,-86,-76,-77,-78,-79,-80,-81,-108,-100,-109,-101,-110,-102,-111,-103,-30,-29,-89,186,-34,-67,-26,-28,-40,-87,-112,-113,-88,-56,-71,-25,-27,-116,-115,-41,-35,-90,-46,-74,-75,-73,-117,-114,-91,-47,-36,]),'CASE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,33,48,49,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,96,97,103,105,106,110,111,112,113,114,115,123,126,127,128,129,130,131,132,133,143,144,145,157,173,183,192,194,197,201,204,205,213,218,232,235,236,249,252,256,263,268,274,275,276,277,278,279,288,289,292,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-51,-65,-63,-55,-64,-63,-64,-49,-50,-52,-53,-54,-66,-31,-95,-104,-96,-105,-97,-106,-98,-107,-99,-64,-33,-32,-85,-86,-76,-77,-78,-79,-80,-81,158,-108,-100,-109,-101,-110,-102,-111,-103,-30,-29,-89,158,-34,-67,-26,-28,-40,-87,-112,-113,-88,-56,-71,-25,-27,-116,-115,-41,-35,-90,-46,-74,-75,-73,-117,-114,-91,-47,-36,]),'RETURN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,32,33,48,49,77,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,96,97,103,105,106,110,111,112,113,114,115,126,127,128,129,130,131,132,133,143,144,145,173,183,192,194,197,201,204,205,213,218,235,236,249,252,254,256,263,268,274,275,276,277,278,279,288,289,292,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-51,-65,-63,-55,-64,-63,-64,-49,-50,-52,-53,-54,-66,-31,-95,-104,-96,-105,-97,-106,-98,-107,-99,-64,-33,-32,-85,-86,-76,-77,-78,-79,-80,-81,-108,-100,-109,-101,-110,-102,-111,-103,-30,-29,-89,-34,-67,-26,-28,-40,-87,-112,-113,-88,-56,-25,-27,-116,-115,269,-41,-35,-90,-46,-74,-75,-73,-117,-114,-91,-47,-36,]),'MAS':([2,26,29,30,32,33,40,47,48,49,77,78,79,80,81,84,],[41,-51,-65,51,-55,-64,73,41,-63,-64,-49,-50,-52,-53,-54,-66,]),'MENOS':([2,26,29,30,32,33,40,47,48,49,77,78,79,80,81,84,],[42,-51,-65,52,-55,-64,74,42,-63,-64,-49,-50,-52,-53,-54,-66,]),'PARENT_DER':([26,29,32,47,48,49,77,78,79,80,81,84,101,102,105,106,110,111,112,113,114,115,134,135,161,163,165,176,177,188,189,216,217,226,229,233,260,261,265,266,283,],[-51,-65,-55,84,-63,-64,-49,-50,-52,-53,-54,-66,143,144,-85,-86,-76,-77,-78,-79,-80,-81,-94,-94,190,192,194,204,205,213,-92,235,236,249,252,-93,274,275,278,279,289,]),'MULTIPLICADOR':([26,29,30,32,33,40,48,49,77,78,79,80,81,84,],[43,-65,53,-55,-64,75,-63,-64,43,43,-52,-53,-54,-66,]),'DIVISOR':([26,29,30,32,33,40,48,49,77,78,79,80,81,84,],[44,-65,54,-55,-64,76,-63,-64,44,44,-52,-53,-54,-66,]),'MOD_DIVISION':([26,29,30,32,33,48,49,77,78,79,80,81,84,],[45,-65,55,-55,-64,-63,-64,45,45,-52,-53,-54,-66,]),'PUNTO':([27,35,],[46,68,]),'IGUALDAD':([29,30,33,48,49,62,84,210,],[-65,56,56,-63,-64,56,-66,56,]),'MAYOR':([29,30,33,48,49,62,84,210,],[-65,57,57,-63,-64,57,-66,57,]),'MENOR':([29,30,33,48,49,62,84,210,],[-65,58,58,-63,-64,58,-66,58,]),'MAYOR_IGU':([29,30,33,48,49,62,84,210,],[-65,59,59,-63,-64,59,-66,59,]),'MENOR_IGU':([29,30,33,48,49,62,84,210,],[-65,60,60,-63,-64,60,-66,60,]),'DESIGUALDAD':([29,30,33,48,49,62,84,210,],[-65,61,61,-63,-64,61,-66,61,]),'LLAVE_IZQ':([29,48,49,70,84,110,111,112,113,114,115,136,197,215,223,225,281,284,286,290,],[-65,-63,-64,123,-66,-76,-77,-78,-79,-80,-81,166,220,234,246,248,287,-37,-39,-38,]),'FIN_SENTENCIA':([29,48,49,84,155,253,],[-65,-63,-64,-66,182,267,]),'DOS_PUNTOS':([29,48,49,84,186,187,241,242,243,],[-65,-63,-64,-66,211,212,-86,-85,259,]),'COMA':([29,48,49,67,84,105,106,110,111,112,113,114,115,124,162,164,178,179,180,181,189,219,221,224,227,228,239,240,241,242,255,273,],[-65,-63,-64,108,-66,-85,-86,-76,-77,-78,-79,-80,-81,159,191,193,206,207,208,209,214,237,244,247,250,251,257,258,-63,-65,270,-84,]),'ASIGNACION':([33,69,107,110,111,112,113,114,115,145,174,280,],[63,122,146,-76,-77,-78,-79,-80,-81,172,202,285,]),'CORCHETE_IZQ':([33,63,100,109,137,141,170,],[66,98,142,148,167,169,199,]),'PRINTF':([46,],[82,]),'PRINTLN':([46,],[83,]),'MAKE':([63,],[99,]),'MAP':([63,67,141,],[100,109,170,]),'INT':([67,142,147,148,160,168,190,198,199,200,203,245,],[110,110,110,110,110,110,110,110,110,110,110,110,]),'STRING':([67,142,147,148,160,168,190,198,199,200,203,245,],[111,111,111,111,111,111,111,111,111,111,111,111,]),'INT64':([67,142,147,148,160,168,190,198,199,200,203,245,],[112,112,112,112,112,112,112,112,112,112,112,112,]),'FLOAT32':([67,142,147,148,160,168,190,198,199,200,203,245,],[113,113,113,113,113,113,113,113,113,113,113,113,]),'FLOAT64':([67,142,147,148,160,168,190,198,199,200,203,245,],[114,114,114,114,114,114,114,114,114,114,114,114,]),'INT32':([67,142,147,148,160,168,190,198,199,200,203,245,],[115,115,115,115,115,115,115,115,115,115,115,115,]),'FORMATBOOL':([68,],[116,]),'PARSEBOOL':([68,],[117,]),'FORMATINT':([68,],[118,]),'PARSEINT':([68,],[119,]),'FORMATFLOAT':([68,],[120,]),'PARSEFLOAT':([68,],[121,]),'ARRPUNTOS':([98,],[140,]),'CORCHETE_DER':([104,105,106,110,111,112,113,114,115,138,139,140,167,169,171,175,222,],[145,-85,-86,-76,-77,-78,-79,-80,-81,168,-42,-43,196,198,200,203,245,]),'BOOLEAN':([149,],[176,]),'INCREMENTO':([280,],[284,]),'DECREMENTO':([280,],[286,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,166,211,212,234,287,],[1,195,231,232,254,291,]),'expression':([0,28,166,211,212,234,287,],[2,47,2,2,2,2,2,]),'impresion':([0,166,211,212,234,287,],[3,3,3,3,3,3,]),'sentencia':([0,166,211,212,234,287,],[4,4,4,4,4,4,]),'asignacion':([0,166,211,212,234,287,],[5,5,5,5,5,5,]),'longvariable':([0,166,211,212,234,287,],[6,6,6,6,6,6,]),'boolcadena':([0,166,211,212,234,287,],[7,7,7,7,7,7,]),'companum':([0,166,211,212,234,287,],[8,8,8,8,8,8,]),'compaid':([0,166,211,212,234,287,],[9,9,9,9,9,9,]),'sentenciafor':([0,166,211,212,234,287,],[10,10,10,10,10,10,]),'arreglo':([0,166,211,212,234,287,],[11,11,11,11,11,11,]),'slice':([0,166,211,212,234,287,],[12,12,12,12,12,12,]),'capslice':([0,166,211,212,234,287,],[13,13,13,13,13,13,]),'switch':([0,166,211,212,234,287,],[14,14,14,14,14,14,]),'map':([0,166,211,212,234,287,],[15,15,15,15,15,15,]),'asignar_valor_map':([0,166,211,212,234,287,],[16,16,16,16,16,16,]),'eliminar_valor_map':([0,166,211,212,234,287,],[17,17,17,17,17,17,]),'obtener_valor_map':([0,166,211,212,234,287,],[18,18,18,18,18,18,]),'funcion':([0,166,211,212,234,287,],[19,19,19,19,19,19,]),'cadenabool':([0,166,211,212,234,287,],[20,20,20,20,20,20,]),'enterocadena':([0,166,211,212,234,287,],[21,21,21,21,21,21,]),'cadenaentero':([0,166,211,212,234,287,],[22,22,22,22,22,22,]),'flotantecadena':([0,166,211,212,234,287,],[23,23,23,23,23,23,]),'cadenaflotante':([0,166,211,212,234,287,],[24,24,24,24,24,24,]),'seman_operacion':([0,166,211,212,234,287,],[25,25,25,25,25,25,]),'term':([0,28,41,42,166,211,212,234,287,],[26,26,77,78,26,26,26,26,26,]),'factor':([0,28,31,41,42,43,44,45,63,95,122,146,158,166,202,211,212,220,230,234,246,247,248,257,258,287,],[32,32,62,32,32,79,80,81,97,136,155,173,187,32,224,32,32,239,253,32,239,263,239,239,239,32,]),'comparacion':([30,33,62,210,],[50,65,95,230,]),'valor':([66,159,172,220,246,248,257,258,259,],[104,188,201,243,243,243,243,243,273,]),'tipo_dato':([67,142,147,148,160,168,190,198,199,200,203,245,],[107,171,174,175,189,197,215,221,222,223,225,261,]),'cantidad':([98,],[138,]),'cases':([123,157,],[156,185,]),'case':([123,157,],[157,157,]),'argumentos':([125,214,],[161,233,]),'empty':([134,135,],[163,165,]),'default':([157,],[184,]),'valores':([220,246,248,257,258,],[238,262,264,271,272,]),'clave_valor':([220,246,248,257,258,],[240,240,240,240,240,]),'incremento':([267,],[281,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> expression','programa',1,'p_programa','analizadorSintactico.py',14),
  ('programa -> impresion','programa',1,'p_programa','analizadorSintactico.py',15),
  ('programa -> sentencia','programa',1,'p_programa','analizadorSintactico.py',16),
  ('programa -> asignacion','programa',1,'p_programa','analizadorSintactico.py',17),
  ('programa -> longvariable','programa',1,'p_programa','analizadorSintactico.py',18),
  ('programa -> boolcadena','programa',1,'p_programa','analizadorSintactico.py',19),
  ('programa -> companum','programa',1,'p_programa','analizadorSintactico.py',20),
  ('programa -> compaid','programa',1,'p_programa','analizadorSintactico.py',21),
  ('programa -> sentenciafor','programa',1,'p_programa','analizadorSintactico.py',22),
  ('programa -> arreglo','programa',1,'p_programa','analizadorSintactico.py',23),
  ('programa -> slice','programa',1,'p_programa','analizadorSintactico.py',24),
  ('programa -> capslice','programa',1,'p_programa','analizadorSintactico.py',25),
  ('programa -> switch','programa',1,'p_programa','analizadorSintactico.py',26),
  ('programa -> map','programa',1,'p_programa','analizadorSintactico.py',27),
  ('programa -> asignar_valor_map','programa',1,'p_programa','analizadorSintactico.py',28),
  ('programa -> eliminar_valor_map','programa',1,'p_programa','analizadorSintactico.py',29),
  ('programa -> obtener_valor_map','programa',1,'p_programa','analizadorSintactico.py',30),
  ('programa -> funcion','programa',1,'p_programa','analizadorSintactico.py',31),
  ('programa -> cadenabool','programa',1,'p_programa','analizadorSintactico.py',32),
  ('programa -> enterocadena','programa',1,'p_programa','analizadorSintactico.py',33),
  ('programa -> cadenaentero','programa',1,'p_programa','analizadorSintactico.py',34),
  ('programa -> flotantecadena','programa',1,'p_programa','analizadorSintactico.py',35),
  ('programa -> cadenaflotante','programa',1,'p_programa','analizadorSintactico.py',36),
  ('programa -> seman_operacion','programa',1,'p_programa','analizadorSintactico.py',37),
  ('impresion -> FMT PUNTO PRINTF PARENT_IZQ CADENA COMA NUMERO PARENT_DER','impresion',8,'p_impresion','analizadorSintactico.py',41),
  ('impresion -> FMT PUNTO PRINTF PARENT_IZQ empty PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',42),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ CADENA COMA NUMERO PARENT_DER','impresion',8,'p_impresion','analizadorSintactico.py',43),
  ('impresion -> FMT PUNTO PRINTLN PARENT_IZQ empty PARENT_DER','impresion',6,'p_impresion','analizadorSintactico.py',44),
  ('longvariable -> ID PARENT_IZQ CADENA PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',48),
  ('longvariable -> ID PARENT_IZQ ID PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',49),
  ('companum -> NUMERO comparacion NUMERO','companum',3,'p_comparacion_num','analizadorSintactico.py',52),
  ('compaid -> ID comparacion ID','compaid',3,'p_comparacion_id','analizadorSintactico.py',56),
  ('asignacion -> ID ASIGNACION factor','asignacion',3,'p_asignacion_var','analizadorSintactico.py',60),
  ('asignacion -> VAR ID tipo_dato ASIGNACION factor','asignacion',5,'p_asignacion_var','analizadorSintactico.py',61),
  ('asignacion -> VAR ID COMA ID tipo_dato ASIGNACION factor COMA factor','asignacion',9,'p_asignacion_var','analizadorSintactico.py',62),
  ('sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER','sentenciafor',13,'p_sentencia_for','analizadorSintactico.py',66),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',70),
  ('incremento -> ID ASIGNACION ID','incremento',3,'p_incremento','analizadorSintactico.py',71),
  ('incremento -> ID DECREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',72),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato','arreglo',6,'p_definir_arreglo','analizadorSintactico.py',76),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','arreglo',9,'p_definir_arreglo','analizadorSintactico.py',77),
  ('cantidad -> NUMERO','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',81),
  ('cantidad -> ARRPUNTOS','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',82),
  ('valores -> factor','valores',1,'p_valores_arreglo','analizadorSintactico.py',86),
  ('valores -> factor COMA valores','valores',3,'p_valores_arreglo','analizadorSintactico.py',87),
  ('slice -> ID ASIGNACION MAKE PARENT_IZQ CORCHETE_IZQ CORCHETE_DER tipo_dato COMA NUMERO PARENT_DER','slice',10,'p_definir_slice','analizadorSintactico.py',91),
  ('slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER','slice',12,'p_definir_slice','analizadorSintactico.py',92),
  ('capslice -> ID PARENT_IZQ ID PARENT_DER','capslice',4,'p_cap_slice','analizadorSintactico.py',96),
  ('expression -> expression MAS term','expression',3,'p_expression_mas','analizadorSintactico.py',100),
  ('expression -> expression MENOS term','expression',3,'p_expression_menos','analizadorSintactico.py',104),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintactico.py',108),
  ('term -> term MULTIPLICADOR factor','term',3,'p_term_multiplicador','analizadorSintactico.py',112),
  ('term -> term DIVISOR factor','term',3,'p_term_divisor','analizadorSintactico.py',116),
  ('term -> term MOD_DIVISION factor','term',3,'p_term_mod','analizadorSintactico.py',120),
  ('term -> factor','term',1,'p_term_factor','analizadorSintactico.py',124),
  ('sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER','sentencia',7,'p_sentencia_if','analizadorSintactico.py',128),
  ('comparacion -> IGUALDAD','comparacion',1,'p_comparacion_igu','analizadorSintactico.py',132),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion_mayor','analizadorSintactico.py',136),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion_menor','analizadorSintactico.py',140),
  ('comparacion -> MAYOR_IGU','comparacion',1,'p_comparacion_mayor_igu','analizadorSintactico.py',144),
  ('comparacion -> MENOR_IGU','comparacion',1,'p_comparacion_menor_igu','analizadorSintactico.py',148),
  ('comparacion -> DESIGUALDAD','comparacion',1,'p_comparacion_desigu','analizadorSintactico.py',152),
  ('factor -> NUMERO','factor',1,'p_factor_num','analizadorSintactico.py',156),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintactico.py',160),
  ('factor -> CADENA','factor',1,'p_factor_cadena','analizadorSintactico.py',164),
  ('factor -> PARENT_IZQ expression PARENT_DER','factor',3,'p_factor_expr','analizadorSintactico.py',168),
  ('switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER','switch',5,'p_definir_switch','analizadorSintactico.py',171),
  ('cases -> case','cases',1,'p_cases','analizadorSintactico.py',174),
  ('cases -> case default','cases',2,'p_cases','analizadorSintactico.py',175),
  ('cases -> case cases','cases',2,'p_cases','analizadorSintactico.py',176),
  ('case -> CASE factor DOS_PUNTOS programa','case',4,'p_case','analizadorSintactico.py',179),
  ('default -> DEFAULT DOS_PUNTOS programa','default',3,'p_default','analizadorSintactico.py',182),
  ('map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',185),
  ('map -> ID ASIGNACION MAKE PARENT_IZQ MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato PARENT_DER','map',10,'p_definir_map','analizadorSintactico.py',186),
  ('map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',187),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',190),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',191),
  ('tipo_dato -> INT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',192),
  ('tipo_dato -> FLOAT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',193),
  ('tipo_dato -> FLOAT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',194),
  ('tipo_dato -> INT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',195),
  ('valores -> clave_valor','valores',1,'p_valores','analizadorSintactico.py',198),
  ('valores -> clave_valor COMA valores','valores',3,'p_valores','analizadorSintactico.py',199),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','analizadorSintactico.py',202),
  ('valor -> CADENA','valor',1,'p_valor','analizadorSintactico.py',205),
  ('valor -> NUMERO','valor',1,'p_valor','analizadorSintactico.py',206),
  ('asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER ASIGNACION valor','asignar_valor_map',6,'p_asignar_valor_map','analizadorSintactico.py',209),
  ('eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER','eliminar_valor_map',6,'p_eliminar_valor_map','analizadorSintactico.py',212),
  ('obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER','obtener_valor_map',4,'p_obtener_valor_map','analizadorSintactico.py',215),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa LLAVE_DER','funcion',9,'p_funcion','analizadorSintactico.py',218),
  ('funcion -> FUNC ID PARENT_IZQ argumentos PARENT_DER tipo_dato LLAVE_IZQ programa RETURN ID LLAVE_DER','funcion',11,'p_funcion','analizadorSintactico.py',219),
  ('argumentos -> ID tipo_dato','argumentos',2,'p_argumentos','analizadorSintactico.py',222),
  ('argumentos -> ID tipo_dato COMA argumentos','argumentos',4,'p_argumentos','analizadorSintactico.py',223),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',226),
  ('seman_operacion -> NUMERO MAS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',241),
  ('seman_operacion -> NUMERO MENOS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',242),
  ('seman_operacion -> NUMERO MULTIPLICADOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',243),
  ('seman_operacion -> NUMERO DIVISOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',244),
  ('seman_operacion -> NUMERO MOD_DIVISION NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',245),
  ('seman_operacion -> FLOAT MAS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',246),
  ('seman_operacion -> FLOAT MENOS NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',247),
  ('seman_operacion -> FLOAT MULTIPLICADOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',248),
  ('seman_operacion -> FLOAT DIVISOR NUMERO','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',249),
  ('seman_operacion -> NUMERO MAS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',250),
  ('seman_operacion -> NUMERO MENOS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',251),
  ('seman_operacion -> NUMERO MULTIPLICADOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',252),
  ('seman_operacion -> NUMERO DIVISOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',253),
  ('seman_operacion -> FLOAT MAS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',254),
  ('seman_operacion -> FLOAT MENOS FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',255),
  ('seman_operacion -> FLOAT MULTIPLICADOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',256),
  ('seman_operacion -> FLOAT DIVISOR FLOAT','seman_operacion',3,'p_seman_operacion','analizadorSintactico.py',257),
  ('boolcadena -> STRCONV PUNTO FORMATBOOL PARENT_IZQ BOOLEAN PARENT_DER','boolcadena',6,'p_bool_cadena','analizadorSintactico.py',261),
  ('cadenabool -> STRCONV PUNTO PARSEBOOL PARENT_IZQ CADENA PARENT_DER','cadenabool',6,'p_cadena_bool','analizadorSintactico.py',264),
  ('flotantecadena -> STRCONV PUNTO FORMATFLOAT PARENT_IZQ FLOAT COMA CADENA COMA NUMERO PARENT_DER','flotantecadena',10,'p_flotante_cadena','analizadorSintactico.py',267),
  ('cadenaflotante -> STRCONV PUNTO PARSEFLOAT PARENT_IZQ FLOAT COMA NUMERO PARENT_DER','cadenaflotante',8,'p_cadena_flotante','analizadorSintactico.py',270),
  ('enterocadena -> STRCONV PUNTO FORMATINT PARENT_IZQ CADENA COMA NUMERO PARENT_DER','enterocadena',8,'p_entero_cadena','analizadorSintactico.py',273),
  ('cadenaentero -> STRCONV PUNTO PARSEINT PARENT_IZQ CADENA COMA NUMERO COMA NUMERO PARENT_DER','cadenaentero',10,'p_cadena_entero','analizadorSintactico.py',276),
]
