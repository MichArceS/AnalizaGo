
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASIGNACIONleftIGUALDADMAYORMENORMENOR_IGUMAYOR_IGUleftMASMENOSleftMULTIPLICADORDIVISORleftPARENT_IZQPARENT_DERAMPERSAND ARRPUNTOS ASIGNACION BOOLEAN BREAK CADENA CASE COMA COMILLA COMMENT_BLOQUE_DER COMMENT_BLOQUE_IZQ COMMENT_LINEA CONST CONTINUE CORCHETE_DER CORCHETE_IZQ DECREMENTO DEFAULT DEFER DELETE DESIGUALDAD DIVISOR DOBLE_COMILLA DOS_PUNTOS ELSE ESPACIADO FALLTHROUGH FIN_SENTENCIA FLOAT32 FLOAT64 FMT FOR FUNC GO ID IF IGUAL IGUALDAD IMPORT INCREMENTO INT INT32 INT64 INTERFACE LEN LLAVE_DER LLAVE_IZQ MAKE MAP MAS MAYOR MAYOR_IGU MENOR MENOR_IGU MENOS MOD_DIVISION MULTIPLICADOR NUMERO PARENT_DER PARENT_IZQ PIPE PRINT PUNTO Package RANGE RETURN SELECT STRING STRUCT SWITCH TYPE VACIO VAR VARprograma : expression\n                | impresion\n                | sentencia \n                | asignacion\n                | longvariable\n                | boolcadena\n                | companum\n                | compaid\n                | sentenciafor\n                | arreglo\n                | slice\n                | capslice\n                | switch\n                | map\n                | asignar_valor_map\n                | eliminar_valor_map\n                | obtener_valor_mapimpresion :  PARENT_IZQ expression PARENT_DER\n                | PARENT_IZQ empty PARENT_DERlongvariable : ID PARENT_IZQ CADENA PARENT_DER\n                        | ID PARENT_IZQ ID PARENT_DERboolcadena : ID PUNTO ID PARENT_IZQ factor PARENT_DERcompanum : NUMERO comparacion NUMEROcompaid : ID comparacion IDasignacion : ID ASIGNACION factor\n                    | VAR ID ID ASIGNACION factor\n                    | VAR ID COMA ID ID ASIGNACION factor COMA factorsentenciafor : FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DERincremento : ID INCREMENTO\n                    | ID ASIGNACION ID\n                    | ID DECREMENTOarreglo : ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID \n                    | ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DERcantidad : NUMERO \n                    | ARRPUNTOSvalores : factor\n                    | factor COMA valoresslice : ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER\n                | ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DERcapslice : ID PARENT_IZQ ID PARENT_DERexpression : expression MAS termexpression : expression MENOS termexpression : termterm : term MULTIPLICADOR factorterm : term DIVISOR factorterm : term MOD_DIVISION factorterm : factorsentencia : IF factor comparacion factor LLAVE_IZQ programa LLAVE_DERcomparacion : IGUALDADcomparacion : MAYORcomparacion : MENORcomparacion : MAYOR_IGUcomparacion : MENOR_IGUcomparacion : DESIGUALDADfactor : NUMEROfactor : IDfactor : CADENAfactor : PARENT_IZQ expression PARENT_DERswitch : SWITCH ID LLAVE_IZQ cases LLAVE_DERcases : case \n                | case default \n                | case casescase : CASE factor DOS_PUNTOS programadefault : DEFAULT factor DOS_PUNTOS programamap : VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER \n                | ID IGUAL MAKE PARENT_IZQ MAP CORCHETE_DER tipo_dato CORCHETE_DER tipo_dato PARENT_DER\n                | ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DERtipo_dato : INT \n                    | STRING \n                    | INT64 \n                    | FLOAT32 \n                    | FLOAT64 \n                    | INT32valores : clave_valor \n                | clave_valor COMA valoresclave_valor : valor DOS_PUNTOS valorvalor : CADENA\n                | NUMEROasignar_valor_map : ID CORCHETE_IZQ valor CORCHETE_DER IGUAL valoreliminar_valor_map : DELETE PARENT_IZQ ID COMA valor PARENT_DERobtener_valor_map : ID CORCHETE_IZQ valor CORCHETE_DERempty : '
    
_lr_action_items = {'PARENT_IZQ':([0,20,21,23,29,30,31,32,33,34,35,41,47,48,49,50,51,52,66,67,73,78,83,95,98,104,106,126,136,140,144,149,150,159,161,162,167,168,189,],[20,35,35,42,57,35,35,35,35,35,35,35,-49,-50,-51,-52,-53,-54,35,88,95,97,35,35,35,35,20,35,35,20,35,35,20,35,35,35,35,35,20,]),'IF':([0,106,140,150,189,],[21,21,21,21,21,]),'ID':([0,20,21,24,27,28,30,31,32,33,34,35,41,42,43,44,47,48,49,50,51,52,53,57,66,80,83,95,98,99,104,106,108,122,126,130,136,140,144,149,150,159,161,162,167,168,174,187,189,],[23,39,39,53,55,56,39,39,39,39,39,39,67,71,73,74,-49,-50,-51,-52,-53,-54,79,85,39,99,39,39,39,120,39,23,131,138,39,143,39,23,39,39,23,39,39,39,39,39,183,191,23,]),'VAR':([0,106,140,150,189,],[24,24,24,24,24,]),'NUMERO':([0,20,21,30,31,32,33,34,35,41,45,47,48,49,50,51,52,54,66,69,83,95,98,104,105,106,117,126,136,140,144,149,150,152,159,161,162,167,168,169,175,189,],[26,38,38,38,38,38,38,38,38,38,77,-49,-50,-51,-52,-53,-54,82,38,90,38,38,38,38,77,26,77,38,38,26,156,38,26,165,156,38,156,156,156,77,185,26,]),'FOR':([0,106,140,150,189,],[27,27,27,27,27,]),'SWITCH':([0,106,140,150,189,],[28,28,28,28,28,]),'DELETE':([0,106,140,150,189,],[29,29,29,29,29,]),'CADENA':([0,20,21,30,31,32,33,34,35,41,42,45,47,48,49,50,51,52,66,83,95,98,104,105,106,117,126,136,140,144,149,150,159,161,162,167,168,169,189,],[25,25,25,25,25,25,25,25,25,25,72,76,-49,-50,-51,-52,-53,-54,25,25,25,25,25,76,25,76,25,25,25,157,25,25,157,25,157,157,157,76,25,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,25,26,38,39,58,59,60,61,62,64,65,67,68,74,76,77,82,86,93,94,96,119,123,131,133,134,141,142,166,172,176,180,181,182,190,193,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-43,-47,-56,-57,-55,-55,-56,-41,-42,-44,-45,-46,-18,-19,-56,-25,-24,-77,-78,-23,-58,-21,-20,-81,-26,-59,-32,-22,-79,-80,-48,-33,-27,-38,-67,-66,-65,-39,-28,]),'LLAVE_DER':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,25,26,38,39,58,59,60,61,62,64,65,67,68,74,76,77,82,86,93,94,96,102,103,119,123,124,125,129,131,133,134,141,142,151,153,154,155,156,157,164,166,170,172,173,176,177,178,179,180,181,182,190,192,193,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-43,-47,-56,-57,-55,-55,-56,-41,-42,-44,-45,-46,-18,-19,-56,-25,-24,-77,-78,-23,-58,-21,-20,-81,123,-60,-26,-59,-61,-62,142,-32,-22,-79,-80,-48,-63,166,-36,-74,-55,-57,-64,-33,180,-27,182,-38,-37,-75,-76,-67,-66,-65,-39,193,-28,]),'DEFAULT':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,25,26,38,39,58,59,60,61,62,64,65,67,68,74,76,77,82,86,93,94,96,103,119,123,131,133,134,141,142,151,166,172,176,180,181,182,190,193,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-43,-47,-56,-57,-55,-55,-56,-41,-42,-44,-45,-46,-18,-19,-56,-25,-24,-77,-78,-23,-58,-21,-20,-81,126,-26,-59,-32,-22,-79,-80,-48,-63,-33,-27,-38,-67,-66,-65,-39,-28,]),'CASE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,25,26,38,39,58,59,60,61,62,64,65,67,68,74,76,77,82,84,86,93,94,96,103,119,123,131,133,134,141,142,151,166,172,176,180,181,182,190,193,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-43,-47,-56,-57,-55,-55,-56,-41,-42,-44,-45,-46,-18,-19,-56,-25,-24,-77,-78,-23,104,-58,-21,-20,-81,104,-26,-59,-32,-22,-79,-80,-48,-63,-33,-27,-38,-67,-66,-65,-39,-28,]),'MAS':([2,19,22,23,25,26,36,38,39,58,59,60,61,62,63,64,86,],[30,-43,-47,-56,-57,-55,30,-55,-56,-41,-42,-44,-45,-46,30,-58,-58,]),'MENOS':([2,19,22,23,25,26,36,38,39,58,59,60,61,62,63,64,86,],[31,-43,-47,-56,-57,-55,31,-55,-56,-41,-42,-44,-45,-46,31,-58,-58,]),'PARENT_DER':([19,20,22,25,36,37,38,39,58,59,60,61,62,63,71,72,76,77,86,110,111,112,113,114,115,116,128,165,171,185,],[-43,-82,-47,-57,64,65,-55,-56,-41,-42,-44,-45,-46,86,93,94,-77,-78,-58,-68,-69,-70,-71,-72,-73,133,141,176,181,190,]),'MULTIPLICADOR':([19,22,23,25,26,38,39,58,59,60,61,62,64,86,],[32,-47,-56,-57,-55,-55,-56,32,32,-44,-45,-46,-58,-58,]),'DIVISOR':([19,22,23,25,26,38,39,58,59,60,61,62,64,86,],[33,-47,-56,-57,-55,-55,-56,33,33,-44,-45,-46,-58,-58,]),'MOD_DIVISION':([19,22,23,25,26,38,39,58,59,60,61,62,64,86,],[34,-47,-56,-57,-55,-55,-56,34,34,-44,-45,-46,-58,-58,]),'ASIGNACION':([23,55,79,120,183,],[41,83,98,136,187,]),'PUNTO':([23,],[43,]),'IGUAL':([23,96,],[46,117,]),'CORCHETE_IZQ':([23,41,70,81,88,],[45,69,92,100,107,]),'IGUALDAD':([23,25,26,38,39,40,86,138,],[47,-57,47,-55,-56,47,-58,47,]),'MAYOR':([23,25,26,38,39,40,86,138,],[48,-57,48,-55,-56,48,-58,48,]),'MENOR':([23,25,26,38,39,40,86,138,],[49,-57,49,-55,-56,49,-58,49,]),'MAYOR_IGU':([23,25,26,38,39,40,86,138,],[50,-57,50,-55,-56,50,-58,50,]),'MENOR_IGU':([23,25,26,38,39,40,86,138,],[51,-57,51,-55,-56,51,-58,51,]),'DESIGUALDAD':([23,25,26,38,39,40,86,138,],[52,-57,52,-55,-56,52,-58,52,]),'LLAVE_IZQ':([25,38,39,56,86,87,110,111,112,113,114,115,131,145,148,184,186,188,191,],[-57,-55,-56,84,-58,106,-68,-69,-70,-71,-72,-73,144,159,162,189,-29,-31,-30,]),'FIN_SENTENCIA':([25,38,39,86,101,163,],[-57,-55,-56,-58,122,174,]),'DOS_PUNTOS':([25,38,39,86,127,139,156,157,158,],[-57,-55,-56,-58,140,150,-78,-77,169,]),'COMA':([25,38,39,53,76,77,85,86,143,147,154,155,156,157,165,179,],[-57,-55,-56,80,-77,-78,105,-58,152,161,167,168,-55,-57,175,-76,]),'MAP':([41,53,97,],[70,81,118,]),'MAKE':([46,],[78,]),'ARRPUNTOS':([69,],[91,]),'CORCHETE_DER':([75,76,77,89,90,91,107,109,110,111,112,113,114,115,118,121,146,],[96,-77,-78,108,-34,-35,130,132,-68,-69,-70,-71,-72,-73,135,137,160,]),'INT':([92,100,132,135,137,160,],[110,110,110,110,110,110,]),'STRING':([92,100,132,135,137,160,],[111,111,111,111,111,111,]),'INT64':([92,100,132,135,137,160,],[112,112,112,112,112,112,]),'FLOAT32':([92,100,132,135,137,160,],[113,113,113,113,113,113,]),'FLOAT64':([92,100,132,135,137,160,],[114,114,114,114,114,114,]),'INT32':([92,100,132,135,137,160,],[115,115,115,115,115,115,]),'INCREMENTO':([183,],[186,]),'DECREMENTO':([183,],[188,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,106,140,150,189,],[1,129,151,164,192,]),'expression':([0,20,35,106,140,150,189,],[2,36,63,2,2,2,2,]),'impresion':([0,106,140,150,189,],[3,3,3,3,3,]),'sentencia':([0,106,140,150,189,],[4,4,4,4,4,]),'asignacion':([0,106,140,150,189,],[5,5,5,5,5,]),'longvariable':([0,106,140,150,189,],[6,6,6,6,6,]),'boolcadena':([0,106,140,150,189,],[7,7,7,7,7,]),'companum':([0,106,140,150,189,],[8,8,8,8,8,]),'compaid':([0,106,140,150,189,],[9,9,9,9,9,]),'sentenciafor':([0,106,140,150,189,],[10,10,10,10,10,]),'arreglo':([0,106,140,150,189,],[11,11,11,11,11,]),'slice':([0,106,140,150,189,],[12,12,12,12,12,]),'capslice':([0,106,140,150,189,],[13,13,13,13,13,]),'switch':([0,106,140,150,189,],[14,14,14,14,14,]),'map':([0,106,140,150,189,],[15,15,15,15,15,]),'asignar_valor_map':([0,106,140,150,189,],[16,16,16,16,16,]),'eliminar_valor_map':([0,106,140,150,189,],[17,17,17,17,17,]),'obtener_valor_map':([0,106,140,150,189,],[18,18,18,18,18,]),'term':([0,20,30,31,35,106,140,150,189,],[19,19,58,59,19,19,19,19,19,]),'factor':([0,20,21,30,31,32,33,34,35,41,66,83,95,98,104,106,126,136,140,144,149,150,159,161,162,167,168,189,],[22,22,40,22,22,60,61,62,22,68,87,101,116,119,127,22,139,147,22,154,163,22,154,172,154,154,154,22,]),'empty':([20,],[37,]),'comparacion':([23,26,40,138,],[44,54,66,149,]),'valor':([45,105,117,144,159,162,167,168,169,],[75,128,134,158,158,158,158,158,179,]),'cantidad':([69,],[89,]),'cases':([84,103,],[102,125,]),'case':([84,103,],[103,103,]),'tipo_dato':([92,100,132,135,137,160,],[109,121,145,146,148,171,]),'default':([103,],[124,]),'valores':([144,159,162,167,168,],[153,170,173,177,178,]),'clave_valor':([144,159,162,167,168,],[155,155,155,155,155,]),'incremento':([174,],[184,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> expression','programa',1,'p_programa','analizadorSintactico.py',14),
  ('programa -> impresion','programa',1,'p_programa','analizadorSintactico.py',15),
  ('programa -> sentencia','programa',1,'p_programa','analizadorSintactico.py',16),
  ('programa -> asignacion','programa',1,'p_programa','analizadorSintactico.py',17),
  ('programa -> longvariable','programa',1,'p_programa','analizadorSintactico.py',18),
  ('programa -> boolcadena','programa',1,'p_programa','analizadorSintactico.py',19),
  ('programa -> companum','programa',1,'p_programa','analizadorSintactico.py',20),
  ('programa -> compaid','programa',1,'p_programa','analizadorSintactico.py',21),
  ('programa -> sentenciafor','programa',1,'p_programa','analizadorSintactico.py',22),
  ('programa -> arreglo','programa',1,'p_programa','analizadorSintactico.py',23),
  ('programa -> slice','programa',1,'p_programa','analizadorSintactico.py',24),
  ('programa -> capslice','programa',1,'p_programa','analizadorSintactico.py',25),
  ('programa -> switch','programa',1,'p_programa','analizadorSintactico.py',26),
  ('programa -> map','programa',1,'p_programa','analizadorSintactico.py',27),
  ('programa -> asignar_valor_map','programa',1,'p_programa','analizadorSintactico.py',28),
  ('programa -> eliminar_valor_map','programa',1,'p_programa','analizadorSintactico.py',29),
  ('programa -> obtener_valor_map','programa',1,'p_programa','analizadorSintactico.py',30),
  ('impresion -> PARENT_IZQ expression PARENT_DER','impresion',3,'p_impresion','analizadorSintactico.py',34),
  ('impresion -> PARENT_IZQ empty PARENT_DER','impresion',3,'p_impresion','analizadorSintactico.py',35),
  ('longvariable -> ID PARENT_IZQ CADENA PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',39),
  ('longvariable -> ID PARENT_IZQ ID PARENT_DER','longvariable',4,'p_longitud_variables','analizadorSintactico.py',40),
  ('boolcadena -> ID PUNTO ID PARENT_IZQ factor PARENT_DER','boolcadena',6,'p_bool_cadena','analizadorSintactico.py',44),
  ('companum -> NUMERO comparacion NUMERO','companum',3,'p_comparacion_num','analizadorSintactico.py',48),
  ('compaid -> ID comparacion ID','compaid',3,'p_comparacion_id','analizadorSintactico.py',52),
  ('asignacion -> ID ASIGNACION factor','asignacion',3,'p_asignacion_var','analizadorSintactico.py',56),
  ('asignacion -> VAR ID ID ASIGNACION factor','asignacion',5,'p_asignacion_var','analizadorSintactico.py',57),
  ('asignacion -> VAR ID COMA ID ID ASIGNACION factor COMA factor','asignacion',9,'p_asignacion_var','analizadorSintactico.py',58),
  ('sentenciafor -> FOR ID ASIGNACION factor FIN_SENTENCIA ID comparacion factor FIN_SENTENCIA incremento LLAVE_IZQ programa LLAVE_DER','sentenciafor',13,'p_sentencia_for','analizadorSintactico.py',62),
  ('incremento -> ID INCREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',66),
  ('incremento -> ID ASIGNACION ID','incremento',3,'p_incremento','analizadorSintactico.py',67),
  ('incremento -> ID DECREMENTO','incremento',2,'p_incremento','analizadorSintactico.py',68),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID','arreglo',6,'p_definir_arreglo','analizadorSintactico.py',72),
  ('arreglo -> ID ASIGNACION CORCHETE_IZQ cantidad CORCHETE_DER ID LLAVE_IZQ valores LLAVE_DER','arreglo',9,'p_definir_arreglo','analizadorSintactico.py',73),
  ('cantidad -> NUMERO','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',77),
  ('cantidad -> ARRPUNTOS','cantidad',1,'p_cantidad_arreglo','analizadorSintactico.py',78),
  ('valores -> factor','valores',1,'p_valores_arreglo','analizadorSintactico.py',82),
  ('valores -> factor COMA valores','valores',3,'p_valores_arreglo','analizadorSintactico.py',83),
  ('slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO PARENT_DER','slice',10,'p_definir_slice','analizadorSintactico.py',87),
  ('slice -> ID ASIGNACION ID PARENT_IZQ CORCHETE_IZQ CORCHETE_DER ID COMA NUMERO COMA NUMERO PARENT_DER','slice',12,'p_definir_slice','analizadorSintactico.py',88),
  ('capslice -> ID PARENT_IZQ ID PARENT_DER','capslice',4,'p_cap_slice','analizadorSintactico.py',92),
  ('expression -> expression MAS term','expression',3,'p_expression_mas','analizadorSintactico.py',96),
  ('expression -> expression MENOS term','expression',3,'p_expression_menos','analizadorSintactico.py',100),
  ('expression -> term','expression',1,'p_expression_term','analizadorSintactico.py',104),
  ('term -> term MULTIPLICADOR factor','term',3,'p_term_multiplicador','analizadorSintactico.py',108),
  ('term -> term DIVISOR factor','term',3,'p_term_divisor','analizadorSintactico.py',112),
  ('term -> term MOD_DIVISION factor','term',3,'p_term_mod','analizadorSintactico.py',116),
  ('term -> factor','term',1,'p_term_factor','analizadorSintactico.py',120),
  ('sentencia -> IF factor comparacion factor LLAVE_IZQ programa LLAVE_DER','sentencia',7,'p_sentencia_if','analizadorSintactico.py',124),
  ('comparacion -> IGUALDAD','comparacion',1,'p_comparacion_igu','analizadorSintactico.py',128),
  ('comparacion -> MAYOR','comparacion',1,'p_comparacion_mayor','analizadorSintactico.py',132),
  ('comparacion -> MENOR','comparacion',1,'p_comparacion_menor','analizadorSintactico.py',136),
  ('comparacion -> MAYOR_IGU','comparacion',1,'p_comparacion_mayor_igu','analizadorSintactico.py',140),
  ('comparacion -> MENOR_IGU','comparacion',1,'p_comparacion_menor_igu','analizadorSintactico.py',144),
  ('comparacion -> DESIGUALDAD','comparacion',1,'p_comparacion_desigu','analizadorSintactico.py',148),
  ('factor -> NUMERO','factor',1,'p_factor_num','analizadorSintactico.py',152),
  ('factor -> ID','factor',1,'p_factor_id','analizadorSintactico.py',156),
  ('factor -> CADENA','factor',1,'p_factor_cadena','analizadorSintactico.py',160),
  ('factor -> PARENT_IZQ expression PARENT_DER','factor',3,'p_factor_expr','analizadorSintactico.py',164),
  ('switch -> SWITCH ID LLAVE_IZQ cases LLAVE_DER','switch',5,'p_definir_switch','analizadorSintactico.py',167),
  ('cases -> case','cases',1,'p_cases','analizadorSintactico.py',170),
  ('cases -> case default','cases',2,'p_cases','analizadorSintactico.py',171),
  ('cases -> case cases','cases',2,'p_cases','analizadorSintactico.py',172),
  ('case -> CASE factor DOS_PUNTOS programa','case',4,'p_case','analizadorSintactico.py',175),
  ('default -> DEFAULT factor DOS_PUNTOS programa','default',4,'p_default','analizadorSintactico.py',178),
  ('map -> VAR ID MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',181),
  ('map -> ID IGUAL MAKE PARENT_IZQ MAP CORCHETE_DER tipo_dato CORCHETE_DER tipo_dato PARENT_DER','map',10,'p_definir_map','analizadorSintactico.py',182),
  ('map -> ID ASIGNACION MAP CORCHETE_IZQ tipo_dato CORCHETE_DER tipo_dato LLAVE_IZQ valores LLAVE_DER','map',10,'p_definir_map','analizadorSintactico.py',183),
  ('tipo_dato -> INT','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',186),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',187),
  ('tipo_dato -> INT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',188),
  ('tipo_dato -> FLOAT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',189),
  ('tipo_dato -> FLOAT64','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',190),
  ('tipo_dato -> INT32','tipo_dato',1,'p_tipo_dato','analizadorSintactico.py',191),
  ('valores -> clave_valor','valores',1,'p_valores','analizadorSintactico.py',194),
  ('valores -> clave_valor COMA valores','valores',3,'p_valores','analizadorSintactico.py',195),
  ('clave_valor -> valor DOS_PUNTOS valor','clave_valor',3,'p_clave_valor','analizadorSintactico.py',198),
  ('valor -> CADENA','valor',1,'p_valor','analizadorSintactico.py',201),
  ('valor -> NUMERO','valor',1,'p_valor','analizadorSintactico.py',202),
  ('asignar_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER IGUAL valor','asignar_valor_map',6,'p_asignar_valor_map','analizadorSintactico.py',205),
  ('eliminar_valor_map -> DELETE PARENT_IZQ ID COMA valor PARENT_DER','eliminar_valor_map',6,'p_eliminar_valor_map','analizadorSintactico.py',208),
  ('obtener_valor_map -> ID CORCHETE_IZQ valor CORCHETE_DER','obtener_valor_map',4,'p_obtener_valor_map','analizadorSintactico.py',211),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',214),
]
